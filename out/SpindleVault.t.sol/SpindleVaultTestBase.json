{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spindleFactory",
      "outputs": [
        {
          "internalType": "contract SpindleFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spindleOracle",
      "outputs": [
        {
          "internalType": "contract SpindleOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spindleVault",
      "outputs": [
        {
          "internalType": "contract SpindleVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapTest",
      "outputs": [
        {
          "internalType": "contract SwapTest",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "contract MockERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "contract MockERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniPool",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "503:5844:62:-:0;;;1576:26:0;;;-1:-1:-1;;1576:26:0;1598:4;1576:26;;;650:14:4;:12;:14::i;:::-;620:44;;503:5844:62;;;;;;;;;;;;6228:3879:4;6269:7;6353:1679;;;;;;;;6381:46;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6381:46:4;;;;;;;6396:5;6381:46;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;6450:48;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6450:48:4;;;;;;;6467:5;6450:48;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;6521:54;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6521:54:4;;;;;;;6538:1;6521:54;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;6597:82;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6597:82:4;;;;;;;6613:1;6597:82;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;6870:53;;;;;;;;;;;;;;;;;-1:-1:-1;;;6870:53:4;;;;;;;;;;;6887:8;6353:1679;6870:53;;;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;;;;6947:52;;;;;;;;;;;;;;-1:-1:-1;;;6947:52:4;;;;;;6965:2;6947:52;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7029:58;;;;;;;;;;;;;;-1:-1:-1;;;7029:58:4;;;;;;7053:3;7029:58;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7114:59;;;;;;;;;;;;;;-1:-1:-1;;;7114:59:4;;;;;;7135:5;7114:59;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7206:75;;;;;;;;;;;;;;-1:-1:-1;;;7206:75:4;;;;;;;;;;7233:6;7206:75;;;;;;;;;;;;;;;6353:1679;;;;;7206:75;;;;;;;;;;;;;;;6353:1679;;7309:60;;;;;;;;;;;;;;;;;-1:-1:-1;;;7309:60:4;;;;;;;;;;;7331:5;6353:1679;7309:60;;;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;;;;7392:48;;;;;;;;;;;;;;-1:-1:-1;;;7392:48:4;;;;;;7409:3;7392:48;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7469:63;;;;;;;;;;;;;;-1:-1:-1;;;7469:63:4;;;;;;7492:5;7469:63;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7557:66;;;;;;;;;;;;;;-1:-1:-1;;;7557:66:4;;;;;;7576:5;7557:66;;;;;;;;;;;;;;;6353:1679;;;;;7557:66;;;;;;;;;;;;;6353:1679;;;;7652:75;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7652:75:4;;;;;;;7675:5;7652:75;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7756:63;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7756:63:4;;;;;;;7779:2;7756:63;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7855:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7885:2;7855:83;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;7965:56;;;;;;;;;;;;;;;-1:-1:-1;;;7965:56:4;;;;;;7986:3;6353:1679;7965:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;;;;6341:1691;;;;;;:9;;;;:1691;;:9;;:1691;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;8125:23;245:28;237:37;;-1:-1:-1;;;;;8152:10:4;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8152:12:4;;;;;;;;;;;;:::i;:::-;8124:40;;8179:9;8174:1909;8198:4;:11;8194:1;:15;8174:1909;;;8231:18;8251:20;8276:4;8281:1;8276:7;;;;;;;;:::i;:::-;;;;;;;8284:1;8276:10;;;;;;;:::i;:::-;;;;;8288:4;8293:1;8288:7;;;;;;;;:::i;:::-;;;;;;;8296:1;8288:10;;;;;;;:::i;:::-;;;;;8230:69;;;;8356:22;8364:4;8356:22;;;;;;;;;;;;;-1:-1:-1;;;8356:22:4;;;:7;;;:22;;:::i;:::-;8352:1683;;;8380:31;;;;:22;;:31;;;;;:::i;:::-;;8352:1683;;;8434:24;8442:4;8434:24;;;;;;;;;;;;;-1:-1:-1;;;8434:24:4;;;:7;;;:24;;:::i;:::-;8430:1605;;;8460:33;;;;:24;;:33;;;;;:::i;8430:1605::-;8516:24;8524:4;8516:24;;;;;;;;;;;;;-1:-1:-1;;;8516:24:4;;;:7;;;:24;;:::i;:::-;8512:1523;;;8542:33;;;;:24;;:33;;;;;:::i;8512:1523::-;8598:23;8606:4;8598:23;;;;;;;;;;;;;-1:-1:-1;;;8598:23:4;;;:7;;;:23;;:::i;:::-;8594:1441;;;8623:32;;;;:23;;:32;;;;;:::i;8594:1441::-;8678:24;8686:4;8678:24;;;;;;;;;;;;;-1:-1:-1;;;8678:24:4;;;:7;;;:24;;:::i;:::-;8674:1361;;;8704:33;;;;:24;;:33;;;;;:::i;8674:1361::-;8760:25;8768:4;8760:25;;;;;;;;;;;;;-1:-1:-1;;;8760:25:4;;;:7;;;:25;;:::i;:::-;8756:1279;;;8787:34;;;;:25;;:34;;;;;:::i;8756:1279::-;8844:51;8852:4;8844:51;;;;;;;;;;;;;-1:-1:-1;;;8844:51:4;;;;;;;;;;;;;;;;-1:-1:-1;;;8844:51:4;;;:7;;;:51;;:::i;:::-;8840:1195;;;8897:40;;;;:31;;:40;;;;;:::i;8840:1195::-;8960:45;8968:4;8960:45;;;;;;;;;;;;;-1:-1:-1;;;8960:45:4;;;;;;;;;;;;;;;;-1:-1:-1;;;8960:45:4;;;:7;;;:45;;:::i;:::-;8956:1079;;;9007:37;;;;:28;;:37;;;;;:::i;8956:1079::-;9067:59;9075:4;9067:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;;;:59;;:::i;:::-;9063:972;;;9128:43;;;;:34;;:43;;;;;:::i;9063:972::-;9194:47;9202:4;9194:47;;;;;;;;;;;;;-1:-1:-1;;;9194:47:4;;;;;;;;;;;;;;;;-1:-1:-1;;;9194:47:4;;;:7;;;:47;;:::i;:::-;9190:845;;;9243:38;;;;:29;;:38;;;;;:::i;9190:845::-;9304:24;9312:4;9304:24;;;;;;;;;;;;;-1:-1:-1;;;9304:24:4;;;:7;;;:24;;:::i;:::-;9300:735;;;9330:33;;;;:24;;:33;;;;;:::i;9300:735::-;9386:49;9394:4;9386:49;;;;;;;;;;;;;-1:-1:-1;;;9386:49:4;;;;;;;;;;;;;;;;-1:-1:-1;;;9386:49:4;;;:7;;;:49;;:::i;:::-;9382:653;;;9437:39;;;;:30;;:39;;;;;:::i;9382:653::-;9499:26;9507:4;9499:26;;;;;;;;;;;;;-1:-1:-1;;;9499:26:4;;;:7;;;:26;;:::i;:::-;9495:540;;;9527:35;;;;:26;;:35;;;;;:::i;9495:540::-;9585:49;9593:4;9585:49;;;;;;;;;;;;;-1:-1:-1;;;9585:49:4;;;;;;;;;;;;;;;;-1:-1:-1;;;9585:49:4;;;:7;;;:49;;:::i;:::-;9581:454;;;9636:39;;;;:30;;:39;;;;;:::i;9581:454::-;9698:51;9706:4;9698:51;;;;;;;;;;;;;-1:-1:-1;;;9698:51:4;;;;;;;;;;;;;;;;-1:-1:-1;;;9698:51:4;;;:7;;;:51;;:::i;:::-;9694:341;;;9751:39;;;;:30;;:39;;;;;:::i;9694:341::-;9813:67;9821:4;9813:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;;;:67;;:::i;:::-;9809:226;;;9882:46;;;;:37;;:46;;;;;:::i;9809:226::-;9951:45;9959:4;9951:45;;;;;;;;;;;;;-1:-1:-1;;;9951:45:4;;;;;;;;;;;;;;;;-1:-1:-1;;;9951:45:4;;;:7;;;:45;;:::i;:::-;9947:88;;;9998:37;;;;:28;;:37;;;;;:::i;:::-;;9947:88;8216:1867;;8211:3;;;;;:::i;:::-;;;;8174:1909;;;;10099:1;10092:8;;;6228:3879;:::o;10113:155::-;10186:4;10258:1;10247:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;10237:24;;;;;;10230:1;10219:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;10209:24;;;;;;:52;10202:59;;10113:155;;;;:::o;10274:240::-;10364:4;10448:1;10437:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;10427:24;;;;;;10420:1;10409:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;10399:24;;;;;;:52;:108;;;;10504:1;10493:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;10483:24;;;;;;10476:1;10465:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;10455:24;;;;;;:52;10399:108;10380:127;10274:240;-1:-1:-1;;;;10274:240:4:o;503:5844:62:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;503:5844:62;;;-1:-1:-1;503:5844:62;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:65;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:251;218:2;212:9;;;248:15;;-1:-1:-1;;;;;278:34:65;;314:22;;;275:62;272:88;;;340:18;;:::i;:::-;376:2;369:22;146:251;:::o;402:275::-;473:2;467:9;538:2;519:13;;-1:-1:-1;;515:27:65;503:40;;-1:-1:-1;;;;;558:34:65;;594:22;;;555:62;552:88;;;620:18;;:::i;:::-;656:2;649:22;402:275;;-1:-1:-1;402:275:65:o;682:258::-;754:1;764:113;778:6;775:1;772:13;764:113;;;854:11;;;848:18;835:11;;;828:39;800:2;793:10;764:113;;;895:6;892:1;889:13;886:48;;;930:1;921:6;916:3;912:16;905:27;886:48;;682:258;;;:::o;945:2065::-;1073:6;1126:2;1114:9;1105:7;1101:23;1097:32;1094:52;;;1142:1;1139;1132:12;1094:52;1169:16;;-1:-1:-1;;;;;1234:14:65;;;1231:34;;;1261:1;1258;1251:12;1231:34;1299:6;1288:9;1284:22;1274:32;;1344:7;1337:4;1333:2;1329:13;1325:27;1315:55;;1366:1;1363;1356:12;1315:55;1395:2;1389:9;1417:2;1413;1410:10;1407:36;;;1423:18;;:::i;:::-;1463:36;1495:2;1490;1487:1;1483:10;1479:19;1463:36;:::i;:::-;1521:3;1545:2;1540:3;1533:15;1573:2;1568:3;1564:12;1557:19;;1624:2;1618;1615:1;1611:10;1607:2;1603:19;1599:28;1585:42;;1650:7;1642:6;1639:19;1636:39;;;1671:1;1668;1661:12;1636:39;1703:2;1699;1695:11;1715:1265;1731:6;1726:3;1723:15;1715:1265;;;1810:3;1804:10;1846:2;1833:11;1830:19;1827:39;;;1862:1;1859;1852:12;1827:39;1889:20;;1944:2;1936:11;;1932:25;-1:-1:-1;1922:53:65;;1971:1;1968;1961:12;1922:53;2001:22;;:::i;:::-;2049:5;2086:7;2081:2;2077;2073:11;2070:24;2067:44;;;2107:1;2104;2097:12;2067:44;2145:2;2141;2137:11;2161:746;2187:2;2183;2179:11;2172:5;2169:22;2161:746;;;2277:5;2271:12;2321:2;2306:13;2303:21;2300:41;;;2337:1;2334;2327:12;2300:41;2368:22;;2429:2;2421:11;;2417:25;-1:-1:-1;2407:53:65;;2456:1;2453;2446:12;2407:53;2501:2;2497;2493:11;2487:18;2532:2;2528;2525:10;2522:36;;;2538:18;;:::i;:::-;2588:53;2631:2;2612:13;;-1:-1:-1;;2608:27:65;2637:2;2604:36;2588:53;:::i;:::-;2672:2;2665:5;2658:17;2720:7;2715:2;2710;2706;2702:11;2698:20;2695:33;2692:53;;;2741:1;2738;2731:12;2692:53;2762:54;2813:2;2808;2801:5;2797:14;2792:2;2788;2784:11;2762:54;:::i;:::-;2833:20;;-1:-1:-1;;2890:2:65;2879:14;;;;2203;2161:746;;;-1:-1:-1;2920:18:65;;-1:-1:-1;;2967:2:65;2958:12;;;;1748;1715:1265;;;-1:-1:-1;2999:5:65;945:2065;-1:-1:-1;;;;;;;945:2065:65:o;3015:127::-;3076:10;3071:3;3067:20;3064:1;3057:31;3107:4;3104:1;3097:15;3131:4;3128:1;3121:15;3147:232;3186:3;-1:-1:-1;;3207:17:65;;3204:140;;;3266:10;3261:3;3257:20;3254:1;3247:31;3301:4;3298:1;3291:15;3329:4;3326:1;3319:15;3204:140;-1:-1:-1;3371:1:65;3360:13;;3147:232::o;3384:383::-;3533:2;3522:9;3515:21;3496:4;3565:6;3559:13;3608:6;3603:2;3592:9;3588:18;3581:34;3624:66;3683:6;3678:2;3667:9;3663:18;3658:2;3650:6;3646:15;3624:66;:::i;:::-;3751:2;3730:15;-1:-1:-1;;3726:29:65;3711:45;;;;3758:2;3707:54;;3384:383;-1:-1:-1;;3384:383:65:o;3772:380::-;3851:1;3847:12;;;;3894;;;3915:61;;3969:4;3961:6;3957:17;3947:27;;3915:61;4022:2;4014:6;4011:14;3991:18;3988:38;3985:161;;;4068:10;4063:3;4059:20;4056:1;4049:31;4103:4;4100:1;4093:15;4131:4;4128:1;4121:15;3985:161;;3772:380;;;:::o;:::-;503:5844:62;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "503:5844:62:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;710:32;;;;;-1:-1:-1;;;;;710:32:62;;;;;;-1:-1:-1;;;;;200:32:65;;;182:51;;170:2;155:18;710:32:62;;;;;;;;859:3188;;;:::i;:::-;;547:23;;;;;-1:-1:-1;;;;;547:23:62;;;605:24;;;;;-1:-1:-1;;;;;605:24:62;;;670:34;;;;;-1:-1:-1;;;;;670:34:62;;;1823:584:0;;;:::i;:::-;;;1093:14:65;;1086:22;1068:41;;1056:2;1041:18;1823:584:0;928:187:65;576:23:62;;;;;-1:-1:-1;;;;;576:23:62;;;635:29;;;;;-1:-1:-1;;;;;635:29:62;;;748:36;;;;;-1:-1:-1;;;;;748:36:62;;;1576:26:0;;;;;;;;;859:3188:62;959:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;951:5:62;:19;;-1:-1:-1;;;;;;951:19:62;-1:-1:-1;;;;;951:19:62;;;;;;;;;988:20;;-1:-1:-1;;;988:20:62;;1006:1;988:20;;;1738:25:65;988:17:62;;1711:18:65;;988:20:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;988:20:62;;;;;;;;;;;;:::i;:::-;980:28;;;;:5;;:28;;;;;;:::i;:::-;;1070:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1061:6:62;:24;;-1:-1:-1;;;;;;1061:24:62;-1:-1:-1;;;;;1061:24:62;;;;;;;;;;1104:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1095:6:62;:24;;-1:-1:-1;;;;;;1095:24:62;-1:-1:-1;;;;;1095:24:62;;;;;;;;;;1140:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1129:8:62;:25;;-1:-1:-1;;;;;;1129:25:62;-1:-1:-1;;;;;1129:25:62;;;;;;;;;1215:6;;:52;;-1:-1:-1;;;1215:52:62;;;;;3533:51:65;;;;-1:-1:-1;;3600:18:65;;;3593:34;1215:6:62;;;;:14;;3506:18:65;;1215:52:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1277:6:62;;;1300:8;;1277:52;;-1:-1:-1;;;1277:52:62;;-1:-1:-1;;;;;1300:8:62;;;1277:52;;;3533:51:65;-1:-1:-1;;3600:18:65;;;3593:34;1277:6:62;;;:14;;3506:18:65;1277:52:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1381:15;1399:34;1407:25;;;;;;;;;;;;;;;;;1399:7;:34::i;:::-;1586:6;;1568;;1381:52;;-1:-1:-1;;;;;;1586:6:62;;;1568;;1560:33;:71;;1616:6;;1624;;-1:-1:-1;;;;;1616:6:62;;;;1624;1560:71;;;1597:6;;1605;;-1:-1:-1;;;;;1597:6:62;;;;1605;1560:71;1550:6;1541:90;;-1:-1:-1;;;;;1541:90:62;;;-1:-1:-1;;;;;;1541:90:62;;;;;;;1542:6;1541:90;;;;;;;;;;;;;;1754:114;;;;;4170:34:65;;;;4220:18;;;4213:43;1863:4:62;4272:18:65;;;4265:47;-1:-1:-1;;;;1741:12:62;;;4105:18:65;;1754:114:62;;;-1:-1:-1;;1754:114:62;;;;;;;;;;;;;;-1:-1:-1;;;;;1754:114:62;-1:-1:-1;;;1754:114:62;;;1741:128;;;1754:114;1741:128;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1705:164;;;;1900:4;1889:34;;;;;;;;;;;;:::i;:::-;1879:7;:44;;-1:-1:-1;;;;;;1879:44:62;-1:-1:-1;;;;;1879:44:62;;;;;;;;;;1941:7;1933:26;;;;-1:-1:-1;;;1933:26:62;;5355:2:65;1933:26:62;;;5337:21:65;5394:1;5374:18;;;5367:29;-1:-1:-1;;;5412:18:65;;;5405:36;5458:18;;1933:26:62;;;;;;;;;1969:7;;-1:-1:-1;;;;;1969:7:62;:18;1988:30;1969:7;1988:27;:30::i;:::-;1969:50;;-1:-1:-1;;;;;;1969:50:62;;;;;;;-1:-1:-1;;;;;200:32:65;;;1969:50:62;;;182:51:65;155:18;;1969:50:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2029:7:62;;:46;;-1:-1:-1;;;2029:46:62;;2072:2;2029:46;;;5849:38:65;-1:-1:-1;;;;;2029:7:62;;;;-1:-1:-1;2029:42:62;;-1:-1:-1;5822:18:65;;2029:46:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2138:13:62;:35;;-1:-1:-1;;;;;;2138:35:62;-1:-1:-1;;;;;2138:35:62;;;;;;;;;2200:51;;2227:7;;2138:35;2200:51;;;:::i;:::-;-1:-1:-1;;;;;6151:15:65;;;6133:34;;6203:15;;6198:2;6183:18;;6176:43;6083:2;6068:18;2200:51:62;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2183:14:62;:68;;-1:-1:-1;;;;;;2183:68:62;-1:-1:-1;;;;;2183:68:62;;;;;;;;;2462:18;;2428:25;;2462:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2428:69:62;;-1:-1:-1;;;;;;2428:69:62;;;;;;;-1:-1:-1;;;;;6151:15:65;;;2428:69:62;;;6133:34:65;2491:4:62;6183:18:65;;;6176:43;6068:18;;2428:69:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2535:14:62;;2583:6;;2612;;;2535:195;;-1:-1:-1;;;2535:195:62;;-1:-1:-1;;;;;2583:6:62;;;2535:195;;;6937:34:65;2612:6:62;;;6987:18:65;;;6980:43;2633:4:62;7039:18:65;;;7032:49;;;;2659:4:62;7097:18:65;;;7090:43;2535:14:62;7149:19:65;;;7142:48;-1:-1:-1;;7206:19:65;;;7199:50;2714:6:62;7265:19:65;;;7258:50;2535:14:62;;;-1:-1:-1;2535:26:62;;-1:-1:-1;6871:19:65;;2535:195:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2507:12;:224;;-1:-1:-1;;;;;;2507:224:62;-1:-1:-1;;;;;2507:224:62;;;;;;;;;2878:5;:8;;2797:32;;2843:3;;-1:-1:-1;;2878:8:62;;;;:::i;:::-;;;;;;;;;;;2797:537;;;;;;-1:-1:-1;;;;;;2797:537:62;;;2878:8;8140:21:65;;;2797:537:62;;;8122:40:65;-1:-1:-1;;;;;2878:8:62;;;8178:18:65;;;8171:60;2928:3:62;8247:18:65;;;8240:49;;;8305:18;;8298:49;;;;3065:2:62;8363:19:65;;;8356:50;;;8422:19;;;8415:50;3182:5:62;8481:19:65;;;8474:50;3243:5:62;8540:19:65;;;8533:50;8094:19;;2797:537:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3344:34:62;;;;;;;;;;;-1:-1:-1;;;3344:34:62;;;;;;;;3361:12;;:16;;-1:-1:-1;;;3361:16:62;;;;3344:34;;-1:-1:-1;3344:34:62;;-1:-1:-1;;;;;;3361:12:62;;:14;;:16;;;;;3344:34;3361:16;;;;;:12;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3344:11;:34::i;:::-;3388;;;;;;;;;;;-1:-1:-1;;;3388:34:62;;;;;;;;3405:12;;:16;;-1:-1:-1;;;3405:16:62;;;;3388:34;;-1:-1:-1;;;;;3405:12:62;;;;:14;;:16;;;;;;;;;;;:12;:16;;;;;;;;;;;;;;3388:34;3432;;;;;;;;;;;-1:-1:-1;;;3432:34:62;;;;;;;;3449:12;;:16;;-1:-1:-1;;;3449:16:62;;;;3432:34;;-1:-1:-1;;;;;3449:12:62;;;;:14;;:16;;;;;;;;;;;:12;:16;;;;;;;;;;;;;;3432:34;891:3156;;;859:3188::o;1823:584:0:-;1877:7;;1857:4;;1877:7;;;;;1873:528;;;-1:-1:-1;1907:7:0;;;;;;;;1823:584::o;1873:528::-;1945:17;2994:42;2982:55;3063:16;1984:374;;2200:43;;;1675:64;2200:43;;;3533:51:65;;;-1:-1:-1;;;3600:18:65;;;3593:34;2200:43:0;;;;;;;;;3506:18:65;;;2200:43:0;;;-1:-1:-1;;1675:64:0;;2090:175;;2139:34;;2090:175;;;:::i;:::-;;;;-1:-1:-1;;2090:175:0;;;;;;;;;;2051:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2024:259;;;2327:7;2316:27;;;;;;;;;;;;:::i;:::-;2301:42;;2006:352;1984:374;2378:12;1823:584;-1:-1:-1;1823:584:0:o;4052:426:62:-;4107:12;4364:5;4358:12;4351:4;4344:5;4340:16;4327:11;4320:51;4312:59;-1:-1:-1;;;;;;4435:18:62;;4427:44;;;;-1:-1:-1;;;4427:44:62;;9640:2:65;4427:44:62;;;9622:21:65;9679:2;9659:18;;;9652:30;-1:-1:-1;;;9698:18:65;;;9691:43;9751:18;;4427:44:62;9438:337:65;1355:2714:55;1418:20;1450:15;1475:1;1468:4;:8;;;:57;;1519:4;1512:12;;1468:57;;;1495:4;1488:12;;1487:13;;;:::i;:::-;1450:75;-1:-1:-1;637:9:55;-1:-1:-1;;637:9:55;:::i;:::-;1554:25;;1543:7;:36;;1535:50;;;;-1:-1:-1;;;1535:50:55;;10444:2:65;1535:50:55;;;10426:21:65;10483:1;10463:18;;;10456:29;-1:-1:-1;;;10501:18:65;;;10494:31;10542:18;;1535:50:55;10242:324:65;1535:50:55;1596:13;1622:3;1612:13;;:93;;-1:-1:-1;;;1612:93:55;;;1633:34;1612:93;1596:109;;;-1:-1:-1;1753:3:55;1743:13;;:18;1739:83;;1780:34;1772:42;1819:3;1771:51;1739:83;1850:3;1840:13;;:18;1836:83;;1877:34;1869:42;1916:3;1868:51;1836:83;1947:3;1937:13;;:18;1933:83;;1974:34;1966:42;2013:3;1965:51;1933:83;2044:4;2034:14;;:19;2030:84;;2072:34;2064:42;2111:3;2063:51;2030:84;2142:4;2132:14;;:19;2128:84;;2170:34;2162:42;2209:3;2161:51;2128:84;2240:4;2230:14;;:19;2226:84;;2268:34;2260:42;2307:3;2259:51;2226:84;2338:4;2328:14;;:19;2324:84;;2366:34;2358:42;2405:3;2357:51;2324:84;2436:5;2426:15;;:20;2422:85;;2465:34;2457:42;2504:3;2456:51;2422:85;2535:5;2525:15;;:20;2521:85;;2564:34;2556:42;2603:3;2555:51;2521:85;2634:5;2624:15;;:20;2620:85;;2663:34;2655:42;2702:3;2654:51;2620:85;2733:5;2723:15;;:20;2719:85;;2762:34;2754:42;2801:3;2753:51;2719:85;2832:6;2822:16;;:21;2818:86;;2862:34;2854:42;2901:3;2853:51;2818:86;2932:6;2922:16;;:21;2918:86;;2962:34;2954:42;3001:3;2953:51;2918:86;3032:6;3022:16;;:21;3018:86;;3062:34;3054:42;3101:3;3053:51;3018:86;3132:6;3122:16;;:21;3118:86;;3162:34;3154:42;3201:3;3153:51;3118:86;3232:7;3222:17;;:22;3218:86;;3263:33;3255:41;3301:3;3254:50;3218:86;3332:7;3322:17;;:22;3318:85;;3363:32;3355:40;3400:3;3354:49;3318:85;3431:7;3421:17;;:22;3417:83;;3462:30;3454:38;3497:3;3453:47;3417:83;3528:7;3518:17;;:22;3514:78;;3559:25;3551:33;3589:3;3550:42;3514:78;3618:1;3611:4;:8;;;3607:47;;;3649:5;-1:-1:-1;;3629:25:55;;;;;:::i;:::-;;3621:33;;3607:47;4029:7;4020:5;:17;:22;:30;;4049:1;4020:30;;;4045:1;4020:30;4003:48;;4013:2;4004:5;:11;;4003:48;3980:72;;1440:2629;;1355:2714;;;:::o;6548:139:12:-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:12;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:12;-1:-1:-1;;;6628:51:12;;;6612:15;:68::i;:::-;6548:139;;:::o;181:376::-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;1774:127:65;1835:10;1830:3;1826:20;1823:1;1816:31;1866:4;1863:1;1856:15;1890:4;1887:1;1880:15;1906:139;-1:-1:-1;;;;;1989:31:65;;1979:42;;1969:70;;2035:1;2032;2025:12;1969:70;1906:139;:::o;2050:154::-;2137:13;;2159:39;2137:13;2159:39;:::i;2209:1145::-;2312:6;2343:2;2386;2374:9;2365:7;2361:23;2357:32;2354:52;;;2402:1;2399;2392:12;2354:52;2435:9;2429:16;2464:18;2505:2;2497:6;2494:14;2491:34;;;2521:1;2518;2511:12;2491:34;2559:6;2548:9;2544:22;2534:32;;2604:7;2597:4;2593:2;2589:13;2585:27;2575:55;;2626:1;2623;2616:12;2575:55;2655:2;2649:9;2677:2;2673;2670:10;2667:36;;;2683:18;;:::i;:::-;2729:2;2726:1;2722:10;2761:2;2755:9;2824:2;2820:7;2815:2;2811;2807:11;2803:25;2795:6;2791:38;2879:6;2867:10;2864:22;2859:2;2847:10;2844:18;2841:46;2838:72;;;2890:18;;:::i;:::-;2926:2;2919:22;2976:18;;;3010:15;;;;-1:-1:-1;3052:11:65;;;3048:20;;;3080:19;;;3077:39;;;3112:1;3109;3102:12;3077:39;3136:11;;;;3156:167;3172:6;3167:3;3164:15;3156:167;;;3238:42;3276:3;3238:42;:::i;:::-;3226:55;;3189:12;;;;3301;;;;3156:167;;;3342:6;2209:1145;-1:-1:-1;;;;;;;;2209:1145:65:o;3638:277::-;3705:6;3758:2;3746:9;3737:7;3733:23;3729:32;3726:52;;;3774:1;3771;3764:12;3726:52;3806:9;3800:16;3859:5;3852:13;3845:21;3838:5;3835:32;3825:60;;3881:1;3878;3871:12;3825:60;3904:5;3638:277;-1:-1:-1;;;3638:277:65:o;4323:258::-;4395:1;4405:113;4419:6;4416:1;4413:13;4405:113;;;4495:11;;;4489:18;4476:11;;;4469:39;4441:2;4434:10;4405:113;;;4536:6;4533:1;4530:13;4527:48;;;4571:1;4562:6;4557:3;4553:16;4546:27;4527:48;;4323:258;;;:::o;4586:274::-;4715:3;4753:6;4747:13;4769:53;4815:6;4810:3;4803:4;4795:6;4791:17;4769:53;:::i;:::-;4838:16;;;;;4586:274;-1:-1:-1;;4586:274:65:o;4865:283::-;4959:6;5012:2;5000:9;4991:7;4987:23;4983:32;4980:52;;;5028:1;5025;5018:12;4980:52;5060:9;5054:16;5079:39;5112:5;5079:39;:::i;7583:127::-;7644:10;7639:3;7635:20;7632:1;7625:31;7675:4;7672:1;7665:15;7699:4;7696:1;7689:15;8594:184;8664:6;8717:2;8705:9;8696:7;8692:23;8688:32;8685:52;;;8733:1;8730;8723:12;8685:52;-1:-1:-1;8756:16:65;;8594:184;-1:-1:-1;8594:184:65:o;9062:371::-;-1:-1:-1;;;;;;9247:33:65;;9235:46;;9304:13;;9217:3;;9326:61;9304:13;9376:1;9367:11;;9360:4;9348:17;;9326:61;:::i;:::-;9407:16;;;;9425:1;9403:24;;9062:371;-1:-1:-1;;;9062:371:65:o;9780:127::-;9841:10;9836:3;9832:20;9829:1;9822:31;9872:4;9869:1;9862:15;9896:4;9893:1;9886:15;9912:136;9947:3;-1:-1:-1;;;9968:22:65;;9965:48;;;9993:18;;:::i;:::-;-1:-1:-1;10033:1:65;10029:13;;9912:136::o;10053:184::-;10087:3;10134:5;10131:1;10120:20;10168:7;10164:12;10155:7;10152:25;10149:51;;;10180:18;;:::i;:::-;10220:1;10216:15;;10053:184;-1:-1:-1;;10053:184:65:o;10571:127::-;10632:10;10627:3;10623:20;10620:1;10613:31;10663:4;10660:1;10653:15;10687:4;10684:1;10677:15;10703:458;10880:2;10869:9;10862:21;10843:4;10912:6;10906:13;10955:6;10950:2;10939:9;10935:18;10928:34;10971:68;11032:6;11027:2;11016:9;11012:18;11005:4;10997:6;10993:17;10971:68;:::i;:::-;11141:4;11126:20;;11119:36;;;;-1:-1:-1;11100:2:65;11079:15;;;;-1:-1:-1;;11075:29:65;11060:45;11107:2;11056:54;;10703:458;-1:-1:-1;10703:458:65:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "spindleFactory()": "dadacab3",
    "spindleOracle()": "366391d6",
    "spindleVault()": "05835516",
    "swapTest()": "176e1c0d",
    "token0()": "0dfe1681",
    "token1()": "d21220a7",
    "uniPool()": "d3681b95"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spindleFactory\",\"outputs\":[{\"internalType\":\"contract SpindleFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spindleOracle\",\"outputs\":[{\"internalType\":\"contract SpindleOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spindleVault\",\"outputs\":[{\"internalType\":\"contract SpindleVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTest\",\"outputs\":[{\"internalType\":\"contract SwapTest\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniPool\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/SpindleVault.t.sol\":\"SpindleVaultTestBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@uniswap/v3-core/=lib/v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core/=lib/v3-core/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x5fb4179c8e76c66099249e293db57b5649902a7288409075abbc7e88b429a3a5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5f99eea2d8c33f59aee7a8c6c7033393d4baaf7c51e0fb9303b2521bec49aa7\",\"dweb:/ipfs/QmPKT3y3mvd7tYt7VssPH1Rpp5CapUyeyc6MiJ7rZJb79f\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b\",\"dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd\",\"dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x9e421049151727ad09416e8d85e9bab277971f2ff750f230f50ef3c22ee40532\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8309e82f8020f4936d10b800b6166b28c4ea21b6f25d670b6735bd5d664ded3\",\"dweb:/ipfs/QmQP9d7uDsUGypHuc5LCd8zD4TsmvSqRUEqX2npMo6NLiQ\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x628980968342609e2b6f4050cf6ffab5456f6e274cb237d70dd58f6d77c9325f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e2691f7fc2e97ebbf63db590aa95ad8c074785e48b864dac7eed3232949af58\",\"dweb:/ipfs/QmYSdyV3w8SNUtE521bn2ymVArPu4z5wToxSVqnRKztygH\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xdfdea2fc16ca475b82c74ef8a1ee50249a086ea3e1d7dcb2fc5b507f2b69500b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e68c4ac142bfdcacfc1a3ffadb63e67213464be620b277586ccf74605ccc33d3\",\"dweb:/ipfs/QmXAiLV8LT4h4z6x1xc88BfJpkddSdGtQkBbtPf441MCqi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74\",\"dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xc30296179ae8036e80c6c48993e10900ea96bcdd3a5e835f27da12503f127438\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4312169f48eb65a63838e9d9ebdb03c3b06f142e76770286e631996af336f620\",\"dweb:/ipfs/QmSQ4MsiAujQJUQvWdqzYrwFMGtzbnwPpcTGqnd66AUzY6\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0\",\"dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xab6029e025f8da00444f741cdf6714301865d302450d24e7e8493cf27c709e2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e8109ef362b9426afb526a9280cb2de559c50fa2649b03b2cbc0ce4a7f9826c\",\"dweb:/ipfs/QmcC2XjeAHw6rgTywXDFNZt6qGv4ddTv6EhdkxYFXEoMAk\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a\",\"dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xb0fafd1e5a5e316405d08b8390bdf4716c7644cc2c8e89ce41050316f28f92a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c194429bb8dd25539faa90982240db467042daf2487b17debc908cfd98f069a\",\"dweb:/ipfs/QmYdFwzgxG9C1iyGsDFZCLNG4LBKSL9b8osCP1RLtYnpvm\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x68404b57d114b893554b0e54334b32f578f5d1abf61830025c83fb71dc1944ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3d0a94b3c8afd92c2a9f03f3325e9ac22cec56e995b94ff212670ff3653f0d3\",\"dweb:/ipfs/QmPqKWUysbo8QqKcqH5Lp7SQiL1LfjeoGCSa7iFWmAP8Mw\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7c37ca742c643ca4ba6baadff72b8450c6e340a30f7fea0863dba74030a9bbc7\",\"dweb:/ipfs/QmeKBR6a7tQSX85Q7Lb2wrAWSEFqhC4tTmLo4SzcN3kFmp\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"lib/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"src/SpindleFactory.sol\":{\"keccak256\":\"0x94d2e07fd40af34758cebbda886d00250b54f10cb4cd23e9d4c01fa04bb6f400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0db9b93a174dcaa6b3709c408efcb7fa6daacc528996ee5d395ca6862516702a\",\"dweb:/ipfs/QmY5zF76kkFa9QHYAvAsNcpe1JwRkRbvs9HgmqUTjZZpmW\"]},\"src/SpindleOracle.sol\":{\"keccak256\":\"0x60e65b2b4a930fc9fcee472cc67ff9fb54416e9a83dc393c53a8cfa411b9bbe8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://416d3d625c726bdc1efdd8bd1ad909903394b491ea4b43d26599a577196752c7\",\"dweb:/ipfs/QmWdR3bJ3C77cgF36B6W4Dns8AfVYWQy52sr5KHQ5ZGmkU\"]},\"src/SpindleVault.sol\":{\"keccak256\":\"0xf5f782164d882cb64c550d90a2f97fbf374e7a7d2f53f7bb9d67ae423ad5f0ef\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3653377ccfee27a41165665a12a62da331d9b0db3d61af418cdad45852a8d5e7\",\"dweb:/ipfs/QmRfrg2ghYihEGga5AGihsKi8H6phiBt5jwR8R7qL7mp21\"]},\"src/abstract/OwnableUninitialized.sol\":{\"keccak256\":\"0x9ab875243e7324afb4bc673ca1cd283d2a254fb18a1ac360b364e352b1a0c7fd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://11e52381ad93c11d622b5f8fc4bf0092c630d630c3faaf596be42adf67f3e479\",\"dweb:/ipfs/QmTGwUpbZiHkqK6sy9eKDJuedsquoNR8rUR7aifNdx6TxR\"]},\"src/abstract/SpindleFactoryStorage.sol\":{\"keccak256\":\"0x268b2b15e47f19f3a2e31f3d4e3ece288487923d607b2e4d5df4422135f0eb52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37006bea5e53dca074c8ad931896230d2ab253c7221450f4a4a1b29341d71743\",\"dweb:/ipfs/QmUZTx4Z5C9aKbyPoJdtKPYgMciMFJyxso2WrGTzALUj6d\"]},\"src/abstract/SpindleVaultStorage.sol\":{\"keccak256\":\"0x5eb5a813e1e5ab55556a9d82db64ef6000062e8a9a8e619451302905c9940120\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://df5b0494d40da50dea83476ce4e21d58fd0880afbc72fb880bccf76bde0a027c\",\"dweb:/ipfs/QmPrrXGAn42CCj9wKikii37GrANjMYfkaQAL2qgA5Bd37P\"]},\"src/interfaces/IEIP173Proxy.sol\":{\"keccak256\":\"0x86444bd652129c667c4f484a9c0ab18e99e37c87f385f7d86f8447fc346b5218\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e6b987c585219d540ebbed691d61f69fb4b4db5ae5063f72d8822db6da267d11\",\"dweb:/ipfs/QmbLtNT3LqzUvKdqzqtGGUHJS8bd9k4Fs6JxK5NehUEZF7\"]},\"src/interfaces/ISpindleOracle.sol\":{\"keccak256\":\"0xe15cd7e9b1cf728965bc52352e8b263d46d69d7015854f2c90fe8b4392028b71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9814076c8809e325dc91154a469ea7b15acc4dc1534e933b92cbb6a75b00e044\",\"dweb:/ipfs/QmZTPm2DDFbbPCcXx7VyWM9TMieQuXmB4e7SZaXhHCo9PU\"]},\"src/interfaces/ISpindleVault.sol\":{\"keccak256\":\"0xa07f2455e9e7431c5940e22751e34e0ef8addf2e27dd28626631c356d918b244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43997f8b8d85bd7ce4dc87faa786e3d9d80c82729b2d72edefe600858aefd50\",\"dweb:/ipfs/QmV1vjiGWeZUbPTXu1tSeYQn5UQmVfzdFiDPNLDDJQMAe2\"]},\"src/interfaces/ISpindleVaultStorage.sol\":{\"keccak256\":\"0x43712c7f4233d7c0ed43337d7519a2790221c49a454cab1c2a0e0506290754ec\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1778b237b0549656b582c59a4c0fdba2ff56f8a3850d5880cdbfcfd107290027\",\"dweb:/ipfs/QmcUywmnDvZuFDC3JNhMPQWYXzPNQFumwNHsWq1jKutvCB\"]},\"src/interfaces/IUniswapV3TickSpacing.sol\":{\"keccak256\":\"0xa796a4d0c6dd9ebbc48216f43d6f0baeb7dd9cc6af53948c38b001d85bb5d325\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f75bf3f2334133d296f84fbe6c16040dbce289c20b9ff5ec0c601f03330fb15c\",\"dweb:/ipfs/QmbCCCZBEVnGWTKQkMDcv7rBKQ5oSpym54e2zesQSMt1pJ\"]},\"src/libraries/FixedPoint128.sol\":{\"keccak256\":\"0xb04770f7259cad9664549429f721c50ed6fd0973166679915665e98dc0f5de59\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6c15a6b8344be1082b41b4f79e49aec57750d993780ca98f6bd6369b2d67a550\",\"dweb:/ipfs/QmW3QfD9mF9toKFR88Lsi528pBcmNuwer5kKw9si4g2jGN\"]},\"src/libraries/FixedPoint96.sol\":{\"keccak256\":\"0xb7b2576879d93dbd6a42531ae42df6039dc12b30a9247ad00e44db4c5c583033\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee2d95bd9c43ade3f9ed8fddf3065b8cbd269c4fba20cce18840bd2daacccb20\",\"dweb:/ipfs/QmSqGBoJgDjGwcu1CRPLGhFcJzJgcFjMx7nGydykxbdy5q\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x0d35ffa7660c07894a4087e012186fe3708c02cba0bc7d195c9731db6d3d7f21\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4278feefb35cbd51db04a86f57585f77a19e202eee66bb5849cd90d9ead73560\",\"dweb:/ipfs/QmYjNo9qpSpF7pNByX2AKZvTmqDRybWRiMvvzx5gY37hcB\"]},\"src/libraries/Oracle.sol\":{\"keccak256\":\"0x9354a4f0a420a546410a384c39a422e36625119ececab61cb2fbcbaaae80c583\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9d4d0a957a885efcb201d067335efa7c90a531b5c3bdd9cb819be5db01477b4d\",\"dweb:/ipfs/QmXrEUeytFnMvEoay6LTe7pD6UppB85QVvcqT9pXBvmVE6\"]},\"src/libraries/TickMath.sol\":{\"keccak256\":\"0xa64c65dc7cd6b0057f5d922bb3bdffda56c3fe702c9107a2ac1289819a054fb0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0742967a1db02820dd2b2cbeb2d476e178aa7bf7ba222c212cdd56b756d06950\",\"dweb:/ipfs/QmXrZm4hnVukdZjF6goPzHwd69vZLzzmUqET2Wsq4R6UP7\"]},\"src/libraries/Uniswap.sol\":{\"keccak256\":\"0x4b4fa10a9bdc611e59357d9eddb82ea9a0f0ee5e3225c33ce0cd988c7a1f2e18\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bcb195ab9ffd4d063dd51e0796580ee73c2e00018777da2dcc145cd61497d95c\",\"dweb:/ipfs/QmNoD3ca1atwnBL9LVZTd5Z3MX9qiqh4TG1dWBnKgSV38D\"]},\"src/libraries/Volatility.sol\":{\"keccak256\":\"0xc741fae6aadf140359e209a16d2e224b99e6b3058e6ee41c53e511d90a33fadd\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f5f3373f6097ab515e7b580329a8bed7e97741265513547ecff8a7d00afd4a0b\",\"dweb:/ipfs/QmU3DpznP4ChTBrKLiUNr3asAuEX3BQ9DH6vEDnjkTUSu6\"]},\"src/mocks/MockERC20.sol\":{\"keccak256\":\"0x11e259b51d7671b3838f1fdabc86d872524deab26862b6597b7ca02008cce61c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://803c9a4124bb9ca5049ce403406e9abb40334b42c690d2711122e65e3ba9d873\",\"dweb:/ipfs/QmVBmMNx9uepq1Zz6VkRA67nP7Tk5JTA39pDz69Nj1XoHU\"]},\"src/mocks/SwapTest.sol\":{\"keccak256\":\"0xfcc16da777e2921e9604d525b9a1ecba6d64e3977df93df0e02f372d62956f18\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7cf889b9ee6bc0e97a721147846c54c93f711313fa4872f61433232dc7dba449\",\"dweb:/ipfs/QmUpbvGQtHScNMUcAZX1iWBHAzMDUWRgbgU9AzShbvyBXp\"]},\"src/proxy/EIP173Proxy.sol\":{\"keccak256\":\"0xd079c1decb19079344752294e671006a487cf7bc69cdbdcfe333f50f62112a02\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bb1016e0b9f72824a1d58617c9b26b34e8429d8049feb7aecaa7cc80647a34a8\",\"dweb:/ipfs/QmT33mQ6Ut8o7YQQoFWVLjXCvgJgGoApLfEBDYGUXm7nav\"]},\"src/proxy/Proxy.sol\":{\"keccak256\":\"0x97b57dd4548dba015cb7d6e358ebd5cad965ca9c7df5f83fdbe31c1fc6dcb2a2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f36e209f7d7cdb706c71518f8d174eb5e84a974bfe1549db9fcbdc1f55b83fea\",\"dweb:/ipfs/QmPbNYDKhnvA5e7qd47VauSE8gdt1NJqAHWCpFwHizYuy4\"]},\"test/SpindleVault.t.sol\":{\"keccak256\":\"0xaf72db2908c7df384bdbdb5f24aec1b7c5fc918f35f9e9b4ce930e1a0f76b70e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b794886b17e09c4595e1c40c37df546049c4b8c0e4f687040feebfa5a070995b\",\"dweb:/ipfs/QmYDMPnvwAbzyUSzhLvcoBUmGzVFMwbUYBCMZqguhQ7QCF\"]},\"test/UniFactoryByteCode.sol\":{\"keccak256\":\"0xe59e65ce71992463696aa1361364cf93f8d375b1a48e301ed433e1c0324f53c1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://65f0c7c09bd1c6ddd8b0c3193b5196e421ec851909b21eb4958ef27f7cbfb56b\",\"dweb:/ipfs/Qmcmojuw3Nqpa1whRSGgY23prh2pcqddGaVBUrxKgSYdoj\"]},\"test/Utils.t.sol\":{\"keccak256\":\"0xb853a6e0b5a5dfd6d3fe1e17b2f695bc30a7142de0fdb711cfdb86e96724bce7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://68f4066d32e6e7dfcf3bb2b861b8e0b383f3e3be5ce294b0c6b109260acf8961\",\"dweb:/ipfs/QmZ3tQ24eBSuZdyjudQabkKrRr1gPQu3A2ZiypsFtyNLXB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "spindleFactory",
          "outputs": [
            {
              "internalType": "contract SpindleFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "spindleOracle",
          "outputs": [
            {
              "internalType": "contract SpindleOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "spindleVault",
          "outputs": [
            {
              "internalType": "contract SpindleVault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapTest",
          "outputs": [
            {
              "internalType": "contract SwapTest",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token0",
          "outputs": [
            {
              "internalType": "contract MockERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token1",
          "outputs": [
            {
              "internalType": "contract MockERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "uniPool",
          "outputs": [
            {
              "internalType": "contract IUniswapV3Pool",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@rari-capital/solmate/=lib/solmate/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core/=lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/SpindleVault.t.sol": "SpindleVaultTestBase"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x5fb4179c8e76c66099249e293db57b5649902a7288409075abbc7e88b429a3a5",
        "urls": [
          "bzz-raw://d5f99eea2d8c33f59aee7a8c6c7033393d4baaf7c51e0fb9303b2521bec49aa7",
          "dweb:/ipfs/QmPKT3y3mvd7tYt7VssPH1Rpp5CapUyeyc6MiJ7rZJb79f"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0",
        "urls": [
          "bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b",
          "dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149",
        "urls": [
          "bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd",
          "dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x9e421049151727ad09416e8d85e9bab277971f2ff750f230f50ef3c22ee40532",
        "urls": [
          "bzz-raw://d8309e82f8020f4936d10b800b6166b28c4ea21b6f25d670b6735bd5d664ded3",
          "dweb:/ipfs/QmQP9d7uDsUGypHuc5LCd8zD4TsmvSqRUEqX2npMo6NLiQ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x628980968342609e2b6f4050cf6ffab5456f6e274cb237d70dd58f6d77c9325f",
        "urls": [
          "bzz-raw://3e2691f7fc2e97ebbf63db590aa95ad8c074785e48b864dac7eed3232949af58",
          "dweb:/ipfs/QmYSdyV3w8SNUtE521bn2ymVArPu4z5wToxSVqnRKztygH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xdfdea2fc16ca475b82c74ef8a1ee50249a086ea3e1d7dcb2fc5b507f2b69500b",
        "urls": [
          "bzz-raw://e68c4ac142bfdcacfc1a3ffadb63e67213464be620b277586ccf74605ccc33d3",
          "dweb:/ipfs/QmXAiLV8LT4h4z6x1xc88BfJpkddSdGtQkBbtPf441MCqi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17",
        "urls": [
          "bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74",
          "dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xc30296179ae8036e80c6c48993e10900ea96bcdd3a5e835f27da12503f127438",
        "urls": [
          "bzz-raw://4312169f48eb65a63838e9d9ebdb03c3b06f142e76770286e631996af336f620",
          "dweb:/ipfs/QmSQ4MsiAujQJUQvWdqzYrwFMGtzbnwPpcTGqnd66AUzY6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549",
        "urls": [
          "bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0",
          "dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xab6029e025f8da00444f741cdf6714301865d302450d24e7e8493cf27c709e2f",
        "urls": [
          "bzz-raw://0e8109ef362b9426afb526a9280cb2de559c50fa2649b03b2cbc0ce4a7f9826c",
          "dweb:/ipfs/QmcC2XjeAHw6rgTywXDFNZt6qGv4ddTv6EhdkxYFXEoMAk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275",
        "urls": [
          "bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a",
          "dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0",
        "urls": [
          "bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de",
          "dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xb0fafd1e5a5e316405d08b8390bdf4716c7644cc2c8e89ce41050316f28f92a3",
        "urls": [
          "bzz-raw://8c194429bb8dd25539faa90982240db467042daf2487b17debc908cfd98f069a",
          "dweb:/ipfs/QmYdFwzgxG9C1iyGsDFZCLNG4LBKSL9b8osCP1RLtYnpvm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x68404b57d114b893554b0e54334b32f578f5d1abf61830025c83fb71dc1944ce",
        "urls": [
          "bzz-raw://d3d0a94b3c8afd92c2a9f03f3325e9ac22cec56e995b94ff212670ff3653f0d3",
          "dweb:/ipfs/QmPqKWUysbo8QqKcqH5Lp7SQiL1LfjeoGCSa7iFWmAP8Mw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
        "urls": [
          "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
          "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol": {
        "keccak256": "0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a",
        "urls": [
          "bzz-raw://7c37ca742c643ca4ba6baadff72b8450c6e340a30f7fea0863dba74030a9bbc7",
          "dweb:/ipfs/QmeKBR6a7tQSX85Q7Lb2wrAWSEFqhC4tTmLo4SzcN3kFmp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/SpindleFactory.sol": {
        "keccak256": "0x94d2e07fd40af34758cebbda886d00250b54f10cb4cd23e9d4c01fa04bb6f400",
        "urls": [
          "bzz-raw://0db9b93a174dcaa6b3709c408efcb7fa6daacc528996ee5d395ca6862516702a",
          "dweb:/ipfs/QmY5zF76kkFa9QHYAvAsNcpe1JwRkRbvs9HgmqUTjZZpmW"
        ],
        "license": "MIT"
      },
      "src/SpindleOracle.sol": {
        "keccak256": "0x60e65b2b4a930fc9fcee472cc67ff9fb54416e9a83dc393c53a8cfa411b9bbe8",
        "urls": [
          "bzz-raw://416d3d625c726bdc1efdd8bd1ad909903394b491ea4b43d26599a577196752c7",
          "dweb:/ipfs/QmWdR3bJ3C77cgF36B6W4Dns8AfVYWQy52sr5KHQ5ZGmkU"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/SpindleVault.sol": {
        "keccak256": "0xf5f782164d882cb64c550d90a2f97fbf374e7a7d2f53f7bb9d67ae423ad5f0ef",
        "urls": [
          "bzz-raw://3653377ccfee27a41165665a12a62da331d9b0db3d61af418cdad45852a8d5e7",
          "dweb:/ipfs/QmRfrg2ghYihEGga5AGihsKi8H6phiBt5jwR8R7qL7mp21"
        ],
        "license": "GPL-3.0"
      },
      "src/abstract/OwnableUninitialized.sol": {
        "keccak256": "0x9ab875243e7324afb4bc673ca1cd283d2a254fb18a1ac360b364e352b1a0c7fd",
        "urls": [
          "bzz-raw://11e52381ad93c11d622b5f8fc4bf0092c630d630c3faaf596be42adf67f3e479",
          "dweb:/ipfs/QmTGwUpbZiHkqK6sy9eKDJuedsquoNR8rUR7aifNdx6TxR"
        ],
        "license": "GPL-3.0"
      },
      "src/abstract/SpindleFactoryStorage.sol": {
        "keccak256": "0x268b2b15e47f19f3a2e31f3d4e3ece288487923d607b2e4d5df4422135f0eb52",
        "urls": [
          "bzz-raw://37006bea5e53dca074c8ad931896230d2ab253c7221450f4a4a1b29341d71743",
          "dweb:/ipfs/QmUZTx4Z5C9aKbyPoJdtKPYgMciMFJyxso2WrGTzALUj6d"
        ],
        "license": "MIT"
      },
      "src/abstract/SpindleVaultStorage.sol": {
        "keccak256": "0x5eb5a813e1e5ab55556a9d82db64ef6000062e8a9a8e619451302905c9940120",
        "urls": [
          "bzz-raw://df5b0494d40da50dea83476ce4e21d58fd0880afbc72fb880bccf76bde0a027c",
          "dweb:/ipfs/QmPrrXGAn42CCj9wKikii37GrANjMYfkaQAL2qgA5Bd37P"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IEIP173Proxy.sol": {
        "keccak256": "0x86444bd652129c667c4f484a9c0ab18e99e37c87f385f7d86f8447fc346b5218",
        "urls": [
          "bzz-raw://e6b987c585219d540ebbed691d61f69fb4b4db5ae5063f72d8822db6da267d11",
          "dweb:/ipfs/QmbLtNT3LqzUvKdqzqtGGUHJS8bd9k4Fs6JxK5NehUEZF7"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISpindleOracle.sol": {
        "keccak256": "0xe15cd7e9b1cf728965bc52352e8b263d46d69d7015854f2c90fe8b4392028b71",
        "urls": [
          "bzz-raw://9814076c8809e325dc91154a469ea7b15acc4dc1534e933b92cbb6a75b00e044",
          "dweb:/ipfs/QmZTPm2DDFbbPCcXx7VyWM9TMieQuXmB4e7SZaXhHCo9PU"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISpindleVault.sol": {
        "keccak256": "0xa07f2455e9e7431c5940e22751e34e0ef8addf2e27dd28626631c356d918b244",
        "urls": [
          "bzz-raw://b43997f8b8d85bd7ce4dc87faa786e3d9d80c82729b2d72edefe600858aefd50",
          "dweb:/ipfs/QmV1vjiGWeZUbPTXu1tSeYQn5UQmVfzdFiDPNLDDJQMAe2"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISpindleVaultStorage.sol": {
        "keccak256": "0x43712c7f4233d7c0ed43337d7519a2790221c49a454cab1c2a0e0506290754ec",
        "urls": [
          "bzz-raw://1778b237b0549656b582c59a4c0fdba2ff56f8a3850d5880cdbfcfd107290027",
          "dweb:/ipfs/QmcUywmnDvZuFDC3JNhMPQWYXzPNQFumwNHsWq1jKutvCB"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IUniswapV3TickSpacing.sol": {
        "keccak256": "0xa796a4d0c6dd9ebbc48216f43d6f0baeb7dd9cc6af53948c38b001d85bb5d325",
        "urls": [
          "bzz-raw://f75bf3f2334133d296f84fbe6c16040dbce289c20b9ff5ec0c601f03330fb15c",
          "dweb:/ipfs/QmbCCCZBEVnGWTKQkMDcv7rBKQ5oSpym54e2zesQSMt1pJ"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/FixedPoint128.sol": {
        "keccak256": "0xb04770f7259cad9664549429f721c50ed6fd0973166679915665e98dc0f5de59",
        "urls": [
          "bzz-raw://6c15a6b8344be1082b41b4f79e49aec57750d993780ca98f6bd6369b2d67a550",
          "dweb:/ipfs/QmW3QfD9mF9toKFR88Lsi528pBcmNuwer5kKw9si4g2jGN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/FixedPoint96.sol": {
        "keccak256": "0xb7b2576879d93dbd6a42531ae42df6039dc12b30a9247ad00e44db4c5c583033",
        "urls": [
          "bzz-raw://ee2d95bd9c43ade3f9ed8fddf3065b8cbd269c4fba20cce18840bd2daacccb20",
          "dweb:/ipfs/QmSqGBoJgDjGwcu1CRPLGhFcJzJgcFjMx7nGydykxbdy5q"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x0d35ffa7660c07894a4087e012186fe3708c02cba0bc7d195c9731db6d3d7f21",
        "urls": [
          "bzz-raw://4278feefb35cbd51db04a86f57585f77a19e202eee66bb5849cd90d9ead73560",
          "dweb:/ipfs/QmYjNo9qpSpF7pNByX2AKZvTmqDRybWRiMvvzx5gY37hcB"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/Oracle.sol": {
        "keccak256": "0x9354a4f0a420a546410a384c39a422e36625119ececab61cb2fbcbaaae80c583",
        "urls": [
          "bzz-raw://9d4d0a957a885efcb201d067335efa7c90a531b5c3bdd9cb819be5db01477b4d",
          "dweb:/ipfs/QmXrEUeytFnMvEoay6LTe7pD6UppB85QVvcqT9pXBvmVE6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/TickMath.sol": {
        "keccak256": "0xa64c65dc7cd6b0057f5d922bb3bdffda56c3fe702c9107a2ac1289819a054fb0",
        "urls": [
          "bzz-raw://0742967a1db02820dd2b2cbeb2d476e178aa7bf7ba222c212cdd56b756d06950",
          "dweb:/ipfs/QmXrZm4hnVukdZjF6goPzHwd69vZLzzmUqET2Wsq4R6UP7"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/Uniswap.sol": {
        "keccak256": "0x4b4fa10a9bdc611e59357d9eddb82ea9a0f0ee5e3225c33ce0cd988c7a1f2e18",
        "urls": [
          "bzz-raw://bcb195ab9ffd4d063dd51e0796580ee73c2e00018777da2dcc145cd61497d95c",
          "dweb:/ipfs/QmNoD3ca1atwnBL9LVZTd5Z3MX9qiqh4TG1dWBnKgSV38D"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/Volatility.sol": {
        "keccak256": "0xc741fae6aadf140359e209a16d2e224b99e6b3058e6ee41c53e511d90a33fadd",
        "urls": [
          "bzz-raw://f5f3373f6097ab515e7b580329a8bed7e97741265513547ecff8a7d00afd4a0b",
          "dweb:/ipfs/QmU3DpznP4ChTBrKLiUNr3asAuEX3BQ9DH6vEDnjkTUSu6"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/mocks/MockERC20.sol": {
        "keccak256": "0x11e259b51d7671b3838f1fdabc86d872524deab26862b6597b7ca02008cce61c",
        "urls": [
          "bzz-raw://803c9a4124bb9ca5049ce403406e9abb40334b42c690d2711122e65e3ba9d873",
          "dweb:/ipfs/QmVBmMNx9uepq1Zz6VkRA67nP7Tk5JTA39pDz69Nj1XoHU"
        ],
        "license": "GPL-3.0"
      },
      "src/mocks/SwapTest.sol": {
        "keccak256": "0xfcc16da777e2921e9604d525b9a1ecba6d64e3977df93df0e02f372d62956f18",
        "urls": [
          "bzz-raw://7cf889b9ee6bc0e97a721147846c54c93f711313fa4872f61433232dc7dba449",
          "dweb:/ipfs/QmUpbvGQtHScNMUcAZX1iWBHAzMDUWRgbgU9AzShbvyBXp"
        ],
        "license": "GPL-3.0"
      },
      "src/proxy/EIP173Proxy.sol": {
        "keccak256": "0xd079c1decb19079344752294e671006a487cf7bc69cdbdcfe333f50f62112a02",
        "urls": [
          "bzz-raw://bb1016e0b9f72824a1d58617c9b26b34e8429d8049feb7aecaa7cc80647a34a8",
          "dweb:/ipfs/QmT33mQ6Ut8o7YQQoFWVLjXCvgJgGoApLfEBDYGUXm7nav"
        ],
        "license": "GPL-3.0"
      },
      "src/proxy/Proxy.sol": {
        "keccak256": "0x97b57dd4548dba015cb7d6e358ebd5cad965ca9c7df5f83fdbe31c1fc6dcb2a2",
        "urls": [
          "bzz-raw://f36e209f7d7cdb706c71518f8d174eb5e84a974bfe1549db9fcbdc1f55b83fea",
          "dweb:/ipfs/QmPbNYDKhnvA5e7qd47VauSE8gdt1NJqAHWCpFwHizYuy4"
        ],
        "license": "GPL-3.0"
      },
      "test/SpindleVault.t.sol": {
        "keccak256": "0xaf72db2908c7df384bdbdb5f24aec1b7c5fc918f35f9e9b4ce930e1a0f76b70e",
        "urls": [
          "bzz-raw://b794886b17e09c4595e1c40c37df546049c4b8c0e4f687040feebfa5a070995b",
          "dweb:/ipfs/QmYDMPnvwAbzyUSzhLvcoBUmGzVFMwbUYBCMZqguhQ7QCF"
        ],
        "license": "UNLICENSED"
      },
      "test/UniFactoryByteCode.sol": {
        "keccak256": "0xe59e65ce71992463696aa1361364cf93f8d375b1a48e301ed433e1c0324f53c1",
        "urls": [
          "bzz-raw://65f0c7c09bd1c6ddd8b0c3193b5196e421ec851909b21eb4958ef27f7cbfb56b",
          "dweb:/ipfs/Qmcmojuw3Nqpa1whRSGgY23prh2pcqddGaVBUrxKgSYdoj"
        ],
        "license": "UNLICENSED"
      },
      "test/Utils.t.sol": {
        "keccak256": "0xb853a6e0b5a5dfd6d3fe1e17b2f695bc30a7142de0fdb711cfdb86e96724bce7",
        "urls": [
          "bzz-raw://68f4066d32e6e7dfcf3bb2b861b8e0b383f3e3be5ce294b0c6b109260acf8961",
          "dweb:/ipfs/QmZ3tQ24eBSuZdyjudQabkKrRr1gPQu3A2ZiypsFtyNLXB"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/SpindleVault.t.sol",
    "id": 30677,
    "exportedSymbols": {
      "CommonBase": [
        1818
      ],
      "DSTest": [
        1786
      ],
      "EIP173Proxy": [
        36606
      ],
      "ERC20Upgradeable": [
        35190
      ],
      "EnumerableSet": [
        36267
      ],
      "FixedPoint96": [
        37575
      ],
      "FixedPointMathLib": [
        35349
      ],
      "FullMath": [
        31376
      ],
      "IEIP173Proxy": [
        36375
      ],
      "IERC20": [
        24489
      ],
      "IERC20Metadata": [
        35654
      ],
      "ISpindleOracle": [
        35612
      ],
      "ISpindleVault": [
        36405
      ],
      "ISpindleVaultStorage": [
        36425
      ],
      "IUniswapV3Factory": [
        36350
      ],
      "IUniswapV3MintCallback": [
        26713
      ],
      "IUniswapV3Pool": [
        26699
      ],
      "IUniswapV3PoolActions": [
        26823
      ],
      "IUniswapV3PoolDerivedState": [
        26854
      ],
      "IUniswapV3PoolEvents": [
        26973
      ],
      "IUniswapV3PoolImmutables": [
        27013
      ],
      "IUniswapV3PoolOwnerActions": [
        27039
      ],
      "IUniswapV3PoolState": [
        27147
      ],
      "IUniswapV3SwapCallback": [
        26727
      ],
      "IUniswapV3TickSpacing": [
        36433
      ],
      "LiquidityAmounts": [
        31727
      ],
      "MockERC20": [
        34133
      ],
      "Oracle": [
        36786
      ],
      "Q96": [
        27173
      ],
      "SafeCast": [
        26677
      ],
      "SafeERC20": [
        24806
      ],
      "SpindleFactory": [
        33570
      ],
      "SpindleFactoryStorage": [
        35527
      ],
      "SpindleOracle": [
        34096
      ],
      "SpindleVault": [
        29580
      ],
      "SpindleVaultStorage": [
        31192
      ],
      "SpindleVaultTest": [
        30676
      ],
      "SpindleVaultTestBase": [
        30053
      ],
      "StdAssertions": [
        2644
      ],
      "StdCheats": [
        5040
      ],
      "StdStorage": [
        5639
      ],
      "StdUtils": [
        7468
      ],
      "SwapTest": [
        34371
      ],
      "Test": [
        7499
      ],
      "TestBase": [
        7488
      ],
      "TickMath": [
        32330
      ],
      "UNI_FACTORY_CREATION_CODE": [
        34376
      ],
      "Uniswap": [
        32747
      ],
      "Utils": [
        34494
      ],
      "Vm": [
        8282
      ],
      "Volatility": [
        37186
      ],
      "console": [
        16346
      ],
      "console2": [
        24411
      ],
      "stdError": [
        5106
      ],
      "stdJson": [
        5466
      ],
      "stdMath": [
        5608
      ],
      "stdStorage": [
        7073
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:11194:62",
    "nodes": [
      {
        "id": 29582,
        "nodeType": "PragmaDirective",
        "src": "39:24:62",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 29583,
        "nodeType": "ImportDirective",
        "src": "64:28:62",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30677,
        "sourceUnit": 7500,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29584,
        "nodeType": "ImportDirective",
        "src": "93:35:62",
        "nodes": [],
        "absolutePath": "src/SpindleFactory.sol",
        "file": "../src/SpindleFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30677,
        "sourceUnit": 33571,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29585,
        "nodeType": "ImportDirective",
        "src": "129:33:62",
        "nodes": [],
        "absolutePath": "src/SpindleVault.sol",
        "file": "../src/SpindleVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30677,
        "sourceUnit": 29581,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29586,
        "nodeType": "ImportDirective",
        "src": "163:66:62",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30677,
        "sourceUnit": 26700,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29587,
        "nodeType": "ImportDirective",
        "src": "230:34:62",
        "nodes": [],
        "absolutePath": "src/SpindleOracle.sol",
        "file": "../src/SpindleOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30677,
        "sourceUnit": 34097,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29588,
        "nodeType": "ImportDirective",
        "src": "265:36:62",
        "nodes": [],
        "absolutePath": "src/mocks/MockERC20.sol",
        "file": "../src/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30677,
        "sourceUnit": 34134,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29589,
        "nodeType": "ImportDirective",
        "src": "302:35:62",
        "nodes": [],
        "absolutePath": "src/mocks/SwapTest.sol",
        "file": "../src/mocks/SwapTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30677,
        "sourceUnit": 34372,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29590,
        "nodeType": "ImportDirective",
        "src": "338:39:62",
        "nodes": [],
        "absolutePath": "src/libraries/TickMath.sol",
        "file": "../src/libraries/TickMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30677,
        "sourceUnit": 32331,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29591,
        "nodeType": "ImportDirective",
        "src": "378:34:62",
        "nodes": [],
        "absolutePath": "test/UniFactoryByteCode.sol",
        "file": "./UniFactoryByteCode.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30677,
        "sourceUnit": 34377,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29592,
        "nodeType": "ImportDirective",
        "src": "413:23:62",
        "nodes": [],
        "absolutePath": "test/Utils.t.sol",
        "file": "./Utils.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30677,
        "sourceUnit": 34495,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29594,
        "nodeType": "ImportDirective",
        "src": "437:63:62",
        "nodes": [],
        "absolutePath": "src/libraries/FullMath.sol",
        "file": "../src/libraries/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30677,
        "sourceUnit": 31728,
        "symbolAliases": [
          {
            "foreign": {
              "id": 29593,
              "name": "LiquidityAmounts",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "445:16:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30053,
        "nodeType": "ContractDefinition",
        "src": "503:5844:62",
        "nodes": [
          {
            "id": 29599,
            "nodeType": "VariableDeclaration",
            "src": "547:23:62",
            "nodes": [],
            "constant": false,
            "functionSelector": "0dfe1681",
            "mutability": "mutable",
            "name": "token0",
            "nameLocation": "564:6:62",
            "scope": 30053,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$34133",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 29598,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29597,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34133,
                "src": "547:9:62"
              },
              "referencedDeclaration": 34133,
              "src": "547:9:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$34133",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29602,
            "nodeType": "VariableDeclaration",
            "src": "576:23:62",
            "nodes": [],
            "constant": false,
            "functionSelector": "d21220a7",
            "mutability": "mutable",
            "name": "token1",
            "nameLocation": "593:6:62",
            "scope": 30053,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$34133",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 29601,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29600,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34133,
                "src": "576:9:62"
              },
              "referencedDeclaration": 34133,
              "src": "576:9:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$34133",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29605,
            "nodeType": "VariableDeclaration",
            "src": "605:24:62",
            "nodes": [],
            "constant": false,
            "functionSelector": "176e1c0d",
            "mutability": "mutable",
            "name": "swapTest",
            "nameLocation": "621:8:62",
            "scope": 30053,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SwapTest_$34371",
              "typeString": "contract SwapTest"
            },
            "typeName": {
              "id": 29604,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29603,
                "name": "SwapTest",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34371,
                "src": "605:8:62"
              },
              "referencedDeclaration": 34371,
              "src": "605:8:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SwapTest_$34371",
                "typeString": "contract SwapTest"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29608,
            "nodeType": "VariableDeclaration",
            "src": "635:29:62",
            "nodes": [],
            "constant": false,
            "functionSelector": "d3681b95",
            "mutability": "mutable",
            "name": "uniPool",
            "nameLocation": "657:7:62",
            "scope": 30053,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
              "typeString": "contract IUniswapV3Pool"
            },
            "typeName": {
              "id": 29607,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29606,
                "name": "IUniswapV3Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26699,
                "src": "635:14:62"
              },
              "referencedDeclaration": 26699,
              "src": "635:14:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                "typeString": "contract IUniswapV3Pool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29611,
            "nodeType": "VariableDeclaration",
            "src": "670:34:62",
            "nodes": [],
            "constant": false,
            "functionSelector": "366391d6",
            "mutability": "mutable",
            "name": "spindleOracle",
            "nameLocation": "691:13:62",
            "scope": 30053,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SpindleOracle_$34096",
              "typeString": "contract SpindleOracle"
            },
            "typeName": {
              "id": 29610,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29609,
                "name": "SpindleOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34096,
                "src": "670:13:62"
              },
              "referencedDeclaration": 34096,
              "src": "670:13:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SpindleOracle_$34096",
                "typeString": "contract SpindleOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29614,
            "nodeType": "VariableDeclaration",
            "src": "710:32:62",
            "nodes": [],
            "constant": false,
            "functionSelector": "05835516",
            "mutability": "mutable",
            "name": "spindleVault",
            "nameLocation": "730:12:62",
            "scope": 30053,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SpindleVault_$29580",
              "typeString": "contract SpindleVault"
            },
            "typeName": {
              "id": 29613,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29612,
                "name": "SpindleVault",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29580,
                "src": "710:12:62"
              },
              "referencedDeclaration": 29580,
              "src": "710:12:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SpindleVault_$29580",
                "typeString": "contract SpindleVault"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29617,
            "nodeType": "VariableDeclaration",
            "src": "748:36:62",
            "nodes": [],
            "constant": false,
            "functionSelector": "dadacab3",
            "mutability": "mutable",
            "name": "spindleFactory",
            "nameLocation": "770:14:62",
            "scope": 30053,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SpindleFactory_$33570",
              "typeString": "contract SpindleFactory"
            },
            "typeName": {
              "id": 29616,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29615,
                "name": "SpindleFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33570,
                "src": "748:14:62"
              },
              "referencedDeclaration": 33570,
              "src": "748:14:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SpindleFactory_$33570",
                "typeString": "contract SpindleFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29620,
            "nodeType": "VariableDeclaration",
            "src": "790:20:62",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "utils",
            "nameLocation": "805:5:62",
            "scope": 30053,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Utils_$34494",
              "typeString": "contract Utils"
            },
            "typeName": {
              "id": 29619,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29618,
                "name": "Utils",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34494,
                "src": "790:5:62"
              },
              "referencedDeclaration": 34494,
              "src": "790:5:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Utils_$34494",
                "typeString": "contract Utils"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29623,
            "nodeType": "VariableDeclaration",
            "src": "816:32:62",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "843:5:62",
            "scope": 30053,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 29621,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "816:15:62",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 29622,
              "nodeType": "ArrayTypeName",
              "src": "816:17:62",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29869,
            "nodeType": "FunctionDefinition",
            "src": "859:3188:62",
            "nodes": [],
            "body": {
              "id": 29868,
              "nodeType": "Block",
              "src": "891:3156:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 29631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29626,
                      "name": "utils",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29620,
                      "src": "951:5:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Utils_$34494",
                        "typeString": "contract Utils"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "959:9:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Utils_$34494_$",
                          "typeString": "function () returns (contract Utils)"
                        },
                        "typeName": {
                          "id": 29628,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29627,
                            "name": "Utils",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 34494,
                            "src": "963:5:62"
                          },
                          "referencedDeclaration": 34494,
                          "src": "963:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Utils_$34494",
                            "typeString": "contract Utils"
                          }
                        }
                      },
                      "id": 29630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "959:11:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Utils_$34494",
                        "typeString": "contract Utils"
                      }
                    },
                    "src": "951:19:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Utils_$34494",
                      "typeString": "contract Utils"
                    }
                  },
                  "id": 29632,
                  "nodeType": "ExpressionStatement",
                  "src": "951:19:62"
                },
                {
                  "expression": {
                    "id": 29638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29633,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29623,
                      "src": "980:5:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "35",
                          "id": 29636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1006:1:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          }
                        ],
                        "expression": {
                          "id": 29634,
                          "name": "utils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29620,
                          "src": "988:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Utils_$34494",
                            "typeString": "contract Utils"
                          }
                        },
                        "id": 29635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createUsers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34474,
                        "src": "988:17:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) external returns (address payable[] memory)"
                        }
                      },
                      "id": 29637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "988:20:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "src": "980:28:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                      "typeString": "address payable[] storage ref"
                    }
                  },
                  "id": 29639,
                  "nodeType": "ExpressionStatement",
                  "src": "980:28:62"
                },
                {
                  "expression": {
                    "id": 29645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29640,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29599,
                      "src": "1061:6:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$34133",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1070:13:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$34133_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 29642,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29641,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 34133,
                            "src": "1074:9:62"
                          },
                          "referencedDeclaration": 34133,
                          "src": "1074:9:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$34133",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 29644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1070:15:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$34133",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1061:24:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$34133",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 29646,
                  "nodeType": "ExpressionStatement",
                  "src": "1061:24:62"
                },
                {
                  "expression": {
                    "id": 29652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29647,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29602,
                      "src": "1095:6:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$34133",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1104:13:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$34133_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 29649,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29648,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 34133,
                            "src": "1108:9:62"
                          },
                          "referencedDeclaration": 34133,
                          "src": "1108:9:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$34133",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 29651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1104:15:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$34133",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1095:24:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$34133",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 29653,
                  "nodeType": "ExpressionStatement",
                  "src": "1095:24:62"
                },
                {
                  "expression": {
                    "id": 29659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29654,
                      "name": "swapTest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29605,
                      "src": "1129:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SwapTest_$34371",
                        "typeString": "contract SwapTest"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1140:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SwapTest_$34371_$",
                          "typeString": "function () returns (contract SwapTest)"
                        },
                        "typeName": {
                          "id": 29656,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29655,
                            "name": "SwapTest",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 34371,
                            "src": "1144:8:62"
                          },
                          "referencedDeclaration": 34371,
                          "src": "1144:8:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SwapTest_$34371",
                            "typeString": "contract SwapTest"
                          }
                        }
                      },
                      "id": 29658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1140:14:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SwapTest_$34371",
                        "typeString": "contract SwapTest"
                      }
                    },
                    "src": "1129:25:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SwapTest_$34371",
                      "typeString": "contract SwapTest"
                    }
                  },
                  "id": 29660,
                  "nodeType": "ExpressionStatement",
                  "src": "1129:25:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29666,
                            "name": "swapTest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29605,
                            "src": "1238:8:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapTest_$34371",
                              "typeString": "contract SwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapTest_$34371",
                              "typeString": "contract SwapTest"
                            }
                          ],
                          "id": 29665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1230:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29664,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1230:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1230:17:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1254:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 29669,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1254:7:62",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 29668,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1249:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 29671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1249:13:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 29672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1249:17:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29661,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29599,
                        "src": "1215:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$34133",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 29663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34765,
                      "src": "1215:14:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 29673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1215:52:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29674,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:52:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29680,
                            "name": "swapTest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29605,
                            "src": "1300:8:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapTest_$34371",
                              "typeString": "contract SwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapTest_$34371",
                              "typeString": "contract SwapTest"
                            }
                          ],
                          "id": 29679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1292:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29678,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1292:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1292:17:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1316:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 29683,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1316:7:62",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 29682,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1311:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 29685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1311:13:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 29686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1311:17:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29675,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29602,
                        "src": "1277:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$34133",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 29677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34765,
                      "src": "1277:14:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 29687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:52:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29688,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:52:62"
                },
                {
                  "assignments": [
                    29690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29690,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "1389:7:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 29868,
                      "src": "1381:15:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29689,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1381:7:62",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29694,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29692,
                        "name": "UNI_FACTORY_CREATION_CODE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34376,
                        "src": "1407:25:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 29691,
                      "name": "_deploy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29888,
                      "src": "1399:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes memory) returns (address)"
                      }
                    },
                    "id": 29693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1399:34:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1381:52:62"
                },
                {
                  "expression": {
                    "id": 29714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 29695,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29599,
                          "src": "1542:6:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$34133",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "id": 29696,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29602,
                          "src": "1550:6:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$34133",
                            "typeString": "contract MockERC20"
                          }
                        }
                      ],
                      "id": 29697,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1541:16:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_MockERC20_$34133_$_t_contract$_MockERC20_$34133_$",
                        "typeString": "tuple(contract MockERC20,contract MockERC20)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 29706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 29700,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29599,
                              "src": "1568:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$34133",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$34133",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 29699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1560:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29698,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1560:7:62",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1560:15:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 29704,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29602,
                              "src": "1586:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$34133",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$34133",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 29703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1578:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29702,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1578:7:62",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1578:15:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1560:33:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "components": [
                          {
                            "id": 29710,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29602,
                            "src": "1616:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$34133",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 29711,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29599,
                            "src": "1624:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$34133",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "id": 29712,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1615:16:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_contract$_MockERC20_$34133_$_t_contract$_MockERC20_$34133_$",
                          "typeString": "tuple(contract MockERC20,contract MockERC20)"
                        }
                      },
                      "id": 29713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "1560:71:62",
                      "trueExpression": {
                        "components": [
                          {
                            "id": 29707,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29599,
                            "src": "1597:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$34133",
                              "typeString": "contract MockERC20"
                            }
                          },
                          {
                            "id": 29708,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29602,
                            "src": "1605:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$34133",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "id": 29709,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1596:16:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_contract$_MockERC20_$34133_$_t_contract$_MockERC20_$34133_$",
                          "typeString": "tuple(contract MockERC20,contract MockERC20)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_MockERC20_$34133_$_t_contract$_MockERC20_$34133_$",
                        "typeString": "tuple(contract MockERC20,contract MockERC20)"
                      }
                    },
                    "src": "1541:90:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29715,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:90:62"
                },
                {
                  "assignments": [
                    29717,
                    29719
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29717,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1711:7:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 29868,
                      "src": "1706:12:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 29716,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1706:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 29719,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1733:4:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 29868,
                      "src": "1720:17:62",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 29718,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1720:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29736,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "637265617465506f6f6c28616464726573732c616464726573732c75696e74323429",
                            "id": 29724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1791:36:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a1671295d3e57aab9c0e67e2ed82d0ed6e24f69cacd01a8015a8563189ec02d6",
                              "typeString": "literal_string \"createPool(address,address,uint24)\""
                            },
                            "value": "createPool(address,address,uint24)"
                          },
                          {
                            "arguments": [
                              {
                                "id": 29727,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29599,
                                "src": "1837:6:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$34133",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$34133",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 29726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1829:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 29725,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1829:7:62",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 29728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1829:15:62",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 29731,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29602,
                                "src": "1854:6:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$34133",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$34133",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 29730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1846:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 29729,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1846:7:62",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 29732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1846:15:62",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "33303030",
                            "id": 29733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1863:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3000_by_1",
                              "typeString": "int_const 3000"
                            },
                            "value": "3000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_a1671295d3e57aab9c0e67e2ed82d0ed6e24f69cacd01a8015a8563189ec02d6",
                              "typeString": "literal_string \"createPool(address,address,uint24)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_3000_by_1",
                              "typeString": "int_const 3000"
                            }
                          ],
                          "expression": {
                            "id": 29722,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1754:3:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 29723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1754:23:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 29734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1754:114:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 29720,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29690,
                        "src": "1741:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 29721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "1741:12:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 29735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1741:128:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1705:164:62"
                },
                {
                  "expression": {
                    "id": 29744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29737,
                      "name": "uniPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29608,
                      "src": "1879:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29740,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29719,
                          "src": "1900:4:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 29741,
                              "name": "IUniswapV3Pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26699,
                              "src": "1907:14:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$26699_$",
                                "typeString": "type(contract IUniswapV3Pool)"
                              }
                            }
                          ],
                          "id": 29742,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1906:16:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$26699_$",
                            "typeString": "type(contract IUniswapV3Pool)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$26699_$",
                            "typeString": "type(contract IUniswapV3Pool)"
                          }
                        ],
                        "expression": {
                          "id": 29738,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "1889:3:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 29739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "1889:10:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 29743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1889:34:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "src": "1879:44:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "id": 29745,
                  "nodeType": "ExpressionStatement",
                  "src": "1879:44:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29747,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29717,
                        "src": "1941:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6661696c6564",
                        "id": 29748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1950:8:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f44d68b1a26169d304522fa2f95aa938d98120d628d1db5726120ca84e53b43",
                          "typeString": "literal_string \"failed\""
                        },
                        "value": "failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f44d68b1a26169d304522fa2f95aa938d98120d628d1db5726120ca84e53b43",
                          "typeString": "literal_string \"failed\""
                        }
                      ],
                      "id": 29746,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1933:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1933:26:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29750,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:26:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 29756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2016:1:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 29754,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32330,
                            "src": "1988:8:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$32330_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 29755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getSqrtRatioAtTick",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32126,
                          "src": "1988:27:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                            "typeString": "function (int24) pure returns (uint160)"
                          }
                        },
                        "id": 29757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1988:30:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "expression": {
                        "id": 29751,
                        "name": "uniPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29608,
                        "src": "1969:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 29753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26736,
                      "src": "1969:18:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint160_$returns$__$",
                        "typeString": "function (uint160) external"
                      }
                    },
                    "id": 29758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1969:50:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29759,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:50:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3135",
                        "id": 29763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2072:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        }
                      ],
                      "expression": {
                        "id": 29760,
                        "name": "uniPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29608,
                        "src": "2029:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 29762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseObservationCardinalityNext",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26822,
                      "src": "2029:42:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16) external"
                      }
                    },
                    "id": 29764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2029:46:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29765,
                  "nodeType": "ExpressionStatement",
                  "src": "2029:46:62"
                },
                {
                  "expression": {
                    "id": 29771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29766,
                      "name": "spindleOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29611,
                      "src": "2138:13:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SpindleOracle_$34096",
                        "typeString": "contract SpindleOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2154:17:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SpindleOracle_$34096_$",
                          "typeString": "function () returns (contract SpindleOracle)"
                        },
                        "typeName": {
                          "id": 29768,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29767,
                            "name": "SpindleOracle",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 34096,
                            "src": "2158:13:62"
                          },
                          "referencedDeclaration": 34096,
                          "src": "2158:13:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SpindleOracle_$34096",
                            "typeString": "contract SpindleOracle"
                          }
                        }
                      },
                      "id": 29770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2154:19:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SpindleOracle_$34096",
                        "typeString": "contract SpindleOracle"
                      }
                    },
                    "src": "2138:35:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SpindleOracle_$34096",
                      "typeString": "contract SpindleOracle"
                    }
                  },
                  "id": 29772,
                  "nodeType": "ExpressionStatement",
                  "src": "2138:35:62"
                },
                {
                  "expression": {
                    "id": 29783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29773,
                      "name": "spindleFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29617,
                      "src": "2183:14:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SpindleFactory_$33570",
                        "typeString": "contract SpindleFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 29779,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29690,
                              "src": "2227:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 29778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2219:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29777,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2219:7:62",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2219:16:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 29781,
                          "name": "spindleOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29611,
                          "src": "2237:13:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SpindleOracle_$34096",
                            "typeString": "contract SpindleOracle"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_SpindleOracle_$34096",
                            "typeString": "contract SpindleOracle"
                          }
                        ],
                        "id": 29776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2200:18:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_ISpindleOracle_$35612_$returns$_t_contract$_SpindleFactory_$33570_$",
                          "typeString": "function (address,contract ISpindleOracle) returns (contract SpindleFactory)"
                        },
                        "typeName": {
                          "id": 29775,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29774,
                            "name": "SpindleFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 33570,
                            "src": "2204:14:62"
                          },
                          "referencedDeclaration": 33570,
                          "src": "2204:14:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SpindleFactory_$33570",
                            "typeString": "contract SpindleFactory"
                          }
                        }
                      },
                      "id": 29782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2200:51:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SpindleFactory_$33570",
                        "typeString": "contract SpindleFactory"
                      }
                    },
                    "src": "2183:68:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SpindleFactory_$33570",
                      "typeString": "contract SpindleFactory"
                    }
                  },
                  "id": 29784,
                  "nodeType": "ExpressionStatement",
                  "src": "2183:68:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 29792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "2462:16:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SpindleVault_$29580_$",
                                "typeString": "function () returns (contract SpindleVault)"
                              },
                              "typeName": {
                                "id": 29791,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 29790,
                                  "name": "SpindleVault",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 29580,
                                  "src": "2466:12:62"
                                },
                                "referencedDeclaration": 29580,
                                "src": "2466:12:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                  "typeString": "contract SpindleVault"
                                }
                              }
                            },
                            "id": 29793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2462:18:62",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          ],
                          "id": 29789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2454:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29788,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2454:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2454:27:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29797,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2491:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVaultTestBase_$30053",
                              "typeString": "contract SpindleVaultTestBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SpindleVaultTestBase_$30053",
                              "typeString": "contract SpindleVaultTestBase"
                            }
                          ],
                          "id": 29796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2483:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29795,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2483:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2483:13:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29785,
                        "name": "spindleFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29617,
                        "src": "2428:14:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleFactory_$33570",
                          "typeString": "contract SpindleFactory"
                        }
                      },
                      "id": 29787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35509,
                      "src": "2428:25:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 29799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:69:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29800,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:69:62"
                },
                {
                  "expression": {
                    "id": 29824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29801,
                      "name": "spindleVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29614,
                      "src": "2507:12:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SpindleVault_$29580",
                        "typeString": "contract SpindleVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 29807,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29599,
                                  "src": "2583:6:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$34133",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$34133",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 29806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2575:7:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 29805,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2575:7:62",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 29808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2575:15:62",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 29811,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29602,
                                  "src": "2612:6:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$34133",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$34133",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 29810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2604:7:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 29809,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2604:7:62",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 29812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2604:15:62",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "33303030",
                              "id": 29813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2633:4:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3000_by_1",
                                "typeString": "int_const 3000"
                              },
                              "value": "3000"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 29816,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2659:4:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SpindleVaultTestBase_$30053",
                                    "typeString": "contract SpindleVaultTestBase"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SpindleVaultTestBase_$30053",
                                    "typeString": "contract SpindleVaultTestBase"
                                  }
                                ],
                                "id": 29815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2651:7:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 29814,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2651:7:62",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 29817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2651:13:62",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 29818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2678:1:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 29820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "2693:7:62",
                              "subExpression": {
                                "hexValue": "383837323230",
                                "id": 29819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2694:6:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_887220_by_1",
                                  "typeString": "int_const 887220"
                                },
                                "value": "887220"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_minus_887220_by_1",
                                "typeString": "int_const -887220"
                              }
                            },
                            {
                              "hexValue": "383837323230",
                              "id": 29821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2714:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_887220_by_1",
                                "typeString": "int_const 887220"
                              },
                              "value": "887220"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_3000_by_1",
                                "typeString": "int_const 3000"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_minus_887220_by_1",
                                "typeString": "int_const -887220"
                              },
                              {
                                "typeIdentifier": "t_rational_887220_by_1",
                                "typeString": "int_const 887220"
                              }
                            ],
                            "expression": {
                              "id": 29803,
                              "name": "spindleFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29617,
                              "src": "2535:14:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SpindleFactory_$33570",
                                "typeString": "contract SpindleFactory"
                              }
                            },
                            "id": 29804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deployVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32822,
                            "src": "2535:26:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_address_$_t_uint16_$_t_int24_$_t_int24_$returns$_t_address_$",
                              "typeString": "function (address,address,uint24,address,uint16,int24,int24) external returns (address)"
                            }
                          },
                          "id": 29822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2535:195:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 29802,
                        "name": "SpindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29580,
                        "src": "2522:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SpindleVault_$29580_$",
                          "typeString": "type(contract SpindleVault)"
                        }
                      },
                      "id": 29823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2522:209:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SpindleVault_$29580",
                        "typeString": "contract SpindleVault"
                      }
                    },
                    "src": "2507:224:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SpindleVault_$29580",
                      "typeString": "contract SpindleVault"
                    }
                  },
                  "id": 29825,
                  "nodeType": "ExpressionStatement",
                  "src": "2507:224:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 29829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2843:3:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "baseExpression": {
                          "id": 29830,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29623,
                          "src": "2878:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 29832,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 29831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2884:1:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2878:8:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 29833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2928:3:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "31",
                        "id": 29834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3000:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130",
                        "id": 29835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3065:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 29836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3123:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3836343030",
                        "id": 29837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3182:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "86400"
                      },
                      {
                        "hexValue": "3230303030",
                        "id": 29838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3243:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000_by_1",
                          "typeString": "int_const 20000"
                        },
                        "value": "20000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        {
                          "typeIdentifier": "t_rational_20000_by_1",
                          "typeString": "int_const 20000"
                        }
                      ],
                      "expression": {
                        "id": 29826,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "2797:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 29828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateManagerParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31111,
                      "src": "2797:32:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int16_$_t_address_$_t_int16_$_t_int24_$_t_int24_$_t_int16_$_t_int32_$_t_int16_$returns$__$",
                        "typeString": "function (int16,address,int16,int24,int24,int16,int32,int16) external"
                      }
                    },
                    "id": 29839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2797:537:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29840,
                  "nodeType": "ExpressionStatement",
                  "src": "2797:537:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "41",
                        "id": 29844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3356:3:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03783fac2efed8fbc9ad443e592ee30e61d65f471140c10ca155e937b435b760",
                          "typeString": "literal_string \"A\""
                        },
                        "value": "A"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 29845,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "3361:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          },
                          "id": 29846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "A",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30776,
                          "src": "3361:14:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 29847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3361:16:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_03783fac2efed8fbc9ad443e592ee30e61d65f471140c10ca155e937b435b760",
                          "typeString": "literal_string \"A\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29841,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16346,
                        "src": "3344:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16346_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 29843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8990,
                      "src": "3344:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 29848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3344:34:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29849,
                  "nodeType": "ExpressionStatement",
                  "src": "3344:34:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "42",
                        "id": 29853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3400:3:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f675bff07515f5df96737194ea945c36c41e7b4fcef307b7cd4d0e602a69111",
                          "typeString": "literal_string \"B\""
                        },
                        "value": "B"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 29854,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "3405:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          },
                          "id": 29855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "B",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30779,
                          "src": "3405:14:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 29856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3405:16:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1f675bff07515f5df96737194ea945c36c41e7b4fcef307b7cd4d0e602a69111",
                          "typeString": "literal_string \"B\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29850,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16346,
                        "src": "3388:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16346_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 29852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8990,
                      "src": "3388:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 29857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3388:34:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29858,
                  "nodeType": "ExpressionStatement",
                  "src": "3388:34:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "43",
                        "id": 29862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3444:3:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_017e667f4b8c174291d1543c466717566e206df1bfd6f30271055ddafdb18f72",
                          "typeString": "literal_string \"C\""
                        },
                        "value": "C"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 29863,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "3449:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          },
                          "id": 29864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "C",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30782,
                          "src": "3449:14:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 29865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3449:16:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_017e667f4b8c174291d1543c466717566e206df1bfd6f30271055ddafdb18f72",
                          "typeString": "literal_string \"C\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29859,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16346,
                        "src": "3432:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16346_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 29861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8990,
                      "src": "3432:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 29866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3432:34:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29867,
                  "nodeType": "ExpressionStatement",
                  "src": "3432:34:62"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "868:5:62",
            "parameters": {
              "id": 29624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "873:2:62"
            },
            "returnParameters": {
              "id": 29625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "891:0:62"
            },
            "scope": 30053,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 29888,
            "nodeType": "FunctionDefinition",
            "src": "4052:426:62",
            "nodes": [],
            "body": {
              "id": 29887,
              "nodeType": "Block",
              "src": "4121:357:62",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4140:241:62",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4312:59:62",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "callvalue",
                                "nodeType": "YulIdentifier",
                                "src": "4327:9:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4327:11:62"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "_code",
                                  "nodeType": "YulIdentifier",
                                  "src": "4344:5:62"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4351:4:62",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4340:3:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4340:16:62"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "_code",
                                  "nodeType": "YulIdentifier",
                                  "src": "4364:5:62"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4358:5:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4358:12:62"
                            }
                          ],
                          "functionName": {
                            "name": "create",
                            "nodeType": "YulIdentifier",
                            "src": "4320:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4320:51:62"
                        },
                        "variableNames": [
                          {
                            "name": "addr",
                            "nodeType": "YulIdentifier",
                            "src": "4312:4:62"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 29871,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4344:5:62",
                      "valueSize": 1
                    },
                    {
                      "declaration": 29871,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4364:5:62",
                      "valueSize": 1
                    },
                    {
                      "declaration": 29874,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4312:4:62",
                      "valueSize": 1
                    }
                  ],
                  "id": 29876,
                  "nodeType": "InlineAssembly",
                  "src": "4131:250:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 29883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 29878,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29874,
                          "src": "4435:4:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 29881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4451:1:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 29880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4443:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29879,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4443:7:62",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4443:10:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4435:18:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706c6f79206661696c6564",
                        "id": 29884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4455:15:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_300a050715a684ba6e8ef46d53acc459cff0807181d7c9feb251ca0657b5812b",
                          "typeString": "literal_string \"deploy failed\""
                        },
                        "value": "deploy failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_300a050715a684ba6e8ef46d53acc459cff0807181d7c9feb251ca0657b5812b",
                          "typeString": "literal_string \"deploy failed\""
                        }
                      ],
                      "id": 29877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4427:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4427:44:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29886,
                  "nodeType": "ExpressionStatement",
                  "src": "4427:44:62"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deploy",
            "nameLocation": "4061:7:62",
            "parameters": {
              "id": 29872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29871,
                  "mutability": "mutable",
                  "name": "_code",
                  "nameLocation": "4082:5:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 29888,
                  "src": "4069:18:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29870,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4069:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4068:20:62"
            },
            "returnParameters": {
              "id": 29875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29874,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "4115:4:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 29888,
                  "src": "4107:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4107:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4106:14:62"
            },
            "scope": 30053,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 29914,
            "nodeType": "FunctionDefinition",
            "src": "4484:202:62",
            "nodes": [],
            "body": {
              "id": 29913,
              "nodeType": "Block",
              "src": "4543:143:62",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    null,
                    29896
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 29896,
                      "mutability": "mutable",
                      "name": "mintAmount",
                      "nameLocation": "4566:10:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 29913,
                      "src": "4558:18:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29895,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4558:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29902,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29899,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29890,
                        "src": "4608:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29900,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29892,
                        "src": "4617:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29897,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "4580:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 29898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMintAmounts",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28855,
                      "src": "4580:27:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 29901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4580:45:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4553:72:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29906,
                        "name": "mintAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29896,
                        "src": "4653:10:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29909,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4673:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVaultTestBase_$30053",
                              "typeString": "contract SpindleVaultTestBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SpindleVaultTestBase_$30053",
                              "typeString": "contract SpindleVaultTestBase"
                            }
                          ],
                          "id": 29908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4665:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29907,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4665:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4665:13:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29903,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "4635:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 29905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27547,
                      "src": "4635:17:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint128_$",
                        "typeString": "function (uint256,address) external returns (uint256,uint256,uint128)"
                      }
                    },
                    "id": 29911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4635:44:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint128_$",
                      "typeString": "tuple(uint256,uint256,uint128)"
                    }
                  },
                  "id": 29912,
                  "nodeType": "ExpressionStatement",
                  "src": "4635:44:62"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "4493:5:62",
            "parameters": {
              "id": 29893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29890,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "4507:7:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 29914,
                  "src": "4499:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4499:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29892,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "4525:7:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 29914,
                  "src": "4517:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4517:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4498:35:62"
            },
            "returnParameters": {
              "id": 29894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4543:0:62"
            },
            "scope": 30053,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 29935,
            "nodeType": "FunctionDefinition",
            "src": "4691:194:62",
            "nodes": [],
            "body": {
              "id": 29934,
              "nodeType": "Block",
              "src": "4806:79:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29928,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29916,
                            "src": "4850:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 29929,
                            "name": "lowerTick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29918,
                            "src": "4856:9:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "id": 29930,
                            "name": "upperTick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29920,
                            "src": "4867:9:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "expression": {
                            "id": 29926,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4833:3:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 29927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4833:16:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 29931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4833:44:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 29925,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4823:9:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 29932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4823:55:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 29924,
                  "id": 29933,
                  "nodeType": "Return",
                  "src": "4816:62:62"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getPositionID",
            "nameLocation": "4700:14:62",
            "parameters": {
              "id": 29921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29916,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "4723:4:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 29935,
                  "src": "4715:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4715:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29918,
                  "mutability": "mutable",
                  "name": "lowerTick",
                  "nameLocation": "4735:9:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 29935,
                  "src": "4729:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 29917,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4729:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29920,
                  "mutability": "mutable",
                  "name": "upperTick",
                  "nameLocation": "4752:9:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 29935,
                  "src": "4746:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 29919,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4746:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4714:48:62"
            },
            "returnParameters": {
              "id": 29924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29923,
                  "mutability": "mutable",
                  "name": "positionID",
                  "nameLocation": "4794:10:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 29935,
                  "src": "4786:18:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29922,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4786:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4785:20:62"
            },
            "scope": 30053,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 29967,
            "nodeType": "FunctionDefinition",
            "src": "4891:410:62",
            "nodes": [],
            "body": {
              "id": 29966,
              "nodeType": "Block",
              "src": "5211:90:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 29959,
                                "name": "addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29937,
                                "src": "5273:4:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 29960,
                                "name": "lower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29939,
                                "src": "5279:5:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 29961,
                                "name": "upper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29941,
                                "src": "5286:5:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              ],
                              "expression": {
                                "id": 29957,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5256:3:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 29958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "5256:16:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 29962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5256:36:62",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 29956,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5246:9:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 29963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5246:47:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 29954,
                        "name": "uniPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29608,
                        "src": "5228:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 29955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "positions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27132,
                      "src": "5228:17:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (bytes32) view external returns (uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "id": 29964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5228:66:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                    }
                  },
                  "functionReturnParameters": 29953,
                  "id": 29965,
                  "nodeType": "Return",
                  "src": "5221:73:62"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_info",
            "nameLocation": "4900:5:62",
            "parameters": {
              "id": 29942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29937,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "4914:4:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 29967,
                  "src": "4906:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4906:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29939,
                  "mutability": "mutable",
                  "name": "lower",
                  "nameLocation": "4926:5:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 29967,
                  "src": "4920:11:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 29938,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4920:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29941,
                  "mutability": "mutable",
                  "name": "upper",
                  "nameLocation": "4939:5:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 29967,
                  "src": "4933:11:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 29940,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4933:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4905:40:62"
            },
            "returnParameters": {
              "id": 29953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29944,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29967,
                  "src": "5006:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 29943,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5006:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29946,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29967,
                  "src": "5040:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5040:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29948,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29967,
                  "src": "5089:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5089:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29950,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29967,
                  "src": "5138:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 29949,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5138:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29952,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29967,
                  "src": "5174:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 29951,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5174:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4992:214:62"
            },
            "scope": 30053,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 30000,
            "nodeType": "FunctionDefinition",
            "src": "5306:474:62",
            "nodes": [],
            "body": {
              "id": 29999,
              "nodeType": "Block",
              "src": "5507:273:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29986,
                        "name": "sqrtPriceX96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29973,
                        "src": "5593:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29989,
                            "name": "lower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29969,
                            "src": "5651:5:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "expression": {
                            "id": 29987,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32330,
                            "src": "5623:8:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$32330_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 29988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getSqrtRatioAtTick",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32126,
                          "src": "5623:27:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                            "typeString": "function (int24) pure returns (uint160)"
                          }
                        },
                        "id": 29990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5623:34:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29993,
                            "name": "upper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29971,
                            "src": "5703:5:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "expression": {
                            "id": 29991,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32330,
                            "src": "5675:8:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$32330_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 29992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getSqrtRatioAtTick",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32126,
                          "src": "5675:27:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                            "typeString": "function (int24) pure returns (uint160)"
                          }
                        },
                        "id": 29994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5675:34:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "id": 29995,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29975,
                        "src": "5727:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29996,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29977,
                        "src": "5752:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29984,
                        "name": "LiquidityAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31727,
                        "src": "5536:16:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$31727_$",
                          "typeString": "type(library LiquidityAmounts)"
                        }
                      },
                      "id": 29985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getLiquidityForAmounts",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31577,
                      "src": "5536:39:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint256_$_t_uint256_$returns$_t_uint128_$_t_bool_$",
                        "typeString": "function (uint160,uint160,uint160,uint256,uint256) pure returns (uint128,bool)"
                      }
                    },
                    "id": 29997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5536:237:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_bool_$",
                      "typeString": "tuple(uint128,bool)"
                    }
                  },
                  "functionReturnParameters": 29983,
                  "id": 29998,
                  "nodeType": "Return",
                  "src": "5517:256:62"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_liquidityForAmountsCheck",
            "nameLocation": "5315:25:62",
            "parameters": {
              "id": 29978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29969,
                  "mutability": "mutable",
                  "name": "lower",
                  "nameLocation": "5356:5:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 30000,
                  "src": "5350:11:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 29968,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5350:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29971,
                  "mutability": "mutable",
                  "name": "upper",
                  "nameLocation": "5377:5:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 30000,
                  "src": "5371:11:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 29970,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5371:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29973,
                  "mutability": "mutable",
                  "name": "sqrtPriceX96",
                  "nameLocation": "5400:12:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 30000,
                  "src": "5392:20:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 29972,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "5392:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29975,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "5430:7:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 30000,
                  "src": "5422:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5422:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29977,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "5455:7:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 30000,
                  "src": "5447:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5447:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5340:128:62"
            },
            "returnParameters": {
              "id": 29983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29980,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30000,
                  "src": "5492:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 29979,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5492:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29982,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30000,
                  "src": "5501:4:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29981,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5501:4:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5491:15:62"
            },
            "scope": 30053,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 30052,
            "nodeType": "FunctionDefinition",
            "src": "5786:559:62",
            "nodes": [],
            "body": {
              "id": 30051,
              "nodeType": "Block",
              "src": "5818:527:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30008,
                            "name": "uniPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29608,
                            "src": "5868:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          ],
                          "id": 30007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5860:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30006,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5860:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5860:16:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3530303030303030303030303030",
                        "id": 30010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5890:14:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000_by_1",
                          "typeString": "int_const 50000000000000"
                        },
                        "value": "50000000000000"
                      },
                      {
                        "hexValue": "313030",
                        "id": 30011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5918:3:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "32",
                        "id": 30012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5935:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000_by_1",
                          "typeString": "int_const 50000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "id": 30003,
                        "name": "swapTest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29605,
                        "src": "5828:8:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SwapTest_$34371",
                          "typeString": "contract SwapTest"
                        }
                      },
                      "id": 30005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "washTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34253,
                      "src": "5828:18:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,int256,uint256,uint256) external"
                      }
                    },
                    "id": 30013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5828:120:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30014,
                  "nodeType": "ExpressionStatement",
                  "src": "5828:120:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30020,
                            "name": "uniPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29608,
                            "src": "5998:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          ],
                          "id": 30019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5990:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30018,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5990:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5990:16:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3530303030303030303030303030",
                        "id": 30022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6020:14:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000_by_1",
                          "typeString": "int_const 50000000000000"
                        },
                        "value": "50000000000000"
                      },
                      {
                        "hexValue": "313030",
                        "id": 30023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6048:3:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "33",
                        "id": 30024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6065:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000_by_1",
                          "typeString": "int_const 50000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 30015,
                        "name": "swapTest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29605,
                        "src": "5958:8:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SwapTest_$34371",
                          "typeString": "contract SwapTest"
                        }
                      },
                      "id": 30017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "washTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34253,
                      "src": "5958:18:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,int256,uint256,uint256) external"
                      }
                    },
                    "id": 30025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5958:120:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30026,
                  "nodeType": "ExpressionStatement",
                  "src": "5958:120:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30032,
                            "name": "uniPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29608,
                            "src": "6128:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          ],
                          "id": 30031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6120:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30030,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6120:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6120:16:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3530303030303030303030303030",
                        "id": 30034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6150:14:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000_by_1",
                          "typeString": "int_const 50000000000000"
                        },
                        "value": "50000000000000"
                      },
                      {
                        "hexValue": "313030",
                        "id": 30035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6178:3:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "33",
                        "id": 30036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6195:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000_by_1",
                          "typeString": "int_const 50000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 30027,
                        "name": "swapTest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29605,
                        "src": "6088:8:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SwapTest_$34371",
                          "typeString": "contract SwapTest"
                        }
                      },
                      "id": 30029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "washTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34253,
                      "src": "6088:18:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,int256,uint256,uint256) external"
                      }
                    },
                    "id": 30037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6088:120:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30038,
                  "nodeType": "ExpressionStatement",
                  "src": "6088:120:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30044,
                            "name": "uniPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29608,
                            "src": "6258:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          ],
                          "id": 30043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6250:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30042,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6250:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6250:16:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3530303030303030303030303030",
                        "id": 30046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6280:14:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000_by_1",
                          "typeString": "int_const 50000000000000"
                        },
                        "value": "50000000000000"
                      },
                      {
                        "hexValue": "313030",
                        "id": 30047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6308:3:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "33",
                        "id": 30048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6325:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000_by_1",
                          "typeString": "int_const 50000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 30039,
                        "name": "swapTest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29605,
                        "src": "6218:8:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SwapTest_$34371",
                          "typeString": "contract SwapTest"
                        }
                      },
                      "id": 30041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "washTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34253,
                      "src": "6218:18:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,int256,uint256,uint256) external"
                      }
                    },
                    "id": 30049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6218:120:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30050,
                  "nodeType": "ExpressionStatement",
                  "src": "6218:120:62"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_washTrades",
            "nameLocation": "5795:11:62",
            "parameters": {
              "id": 30001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5806:2:62"
            },
            "returnParameters": {
              "id": 30002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5818:0:62"
            },
            "scope": 30053,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29595,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7499,
              "src": "536:4:62"
            },
            "id": 29596,
            "nodeType": "InheritanceSpecifier",
            "src": "536:4:62"
          }
        ],
        "canonicalName": "SpindleVaultTestBase",
        "contractDependencies": [
          29580,
          33570,
          34096,
          34133,
          34371,
          34494
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30053,
          7499,
          7468,
          5040,
          4651,
          2644,
          1786,
          7488,
          1818
        ],
        "name": "SpindleVaultTestBase",
        "nameLocation": "512:20:62",
        "scope": 30677,
        "usedErrors": []
      },
      {
        "id": 30676,
        "nodeType": "ContractDefinition",
        "src": "6349:4884:62",
        "nodes": [
          {
            "id": 30090,
            "nodeType": "FunctionDefinition",
            "src": "6405:296:62",
            "nodes": [],
            "body": {
              "id": 30089,
              "nodeType": "Block",
              "src": "6446:255:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 30059,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6456:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SpindleVaultTest_$30676_$",
                          "typeString": "type(contract super SpindleVaultTest)"
                        }
                      },
                      "id": 30061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29869,
                      "src": "6456:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 30062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6456:13:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30063,
                  "nodeType": "ExpressionStatement",
                  "src": "6456:13:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30069,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "6515:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          ],
                          "id": 30068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6507:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30067,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6507:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6507:21:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030",
                        "id": 30071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6542:13:62",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 30064,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29599,
                        "src": "6479:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$34133",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 30066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34765,
                      "src": "6479:14:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6479:86:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30073,
                  "nodeType": "ExpressionStatement",
                  "src": "6479:86:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30079,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "6611:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          ],
                          "id": 30078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6603:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30077,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6603:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6603:21:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030",
                        "id": 30081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6638:13:62",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 30074,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29602,
                        "src": "6575:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$34133",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 30076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34765,
                      "src": "6575:14:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6575:86:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30083,
                  "nodeType": "ExpressionStatement",
                  "src": "6575:86:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 30085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6677:7:62",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 30086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6686:7:62",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 30084,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "6671:5:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6671:23:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30088,
                  "nodeType": "ExpressionStatement",
                  "src": "6671:23:62"
                }
              ]
            },
            "baseFunctions": [
              29869
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "6414:5:62",
            "overrides": {
              "id": 30057,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6429:8:62"
            },
            "parameters": {
              "id": 30056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6419:2:62"
            },
            "returnParameters": {
              "id": 30058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6446:0:62"
            },
            "scope": 30676,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 30265,
            "nodeType": "FunctionDefinition",
            "src": "6706:1138:62",
            "nodes": [],
            "body": {
              "id": 30264,
              "nodeType": "Block",
              "src": "6737:1107:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6d696e742030",
                            "id": 30098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6801:8:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e4fb6d62d16d5736772dcb4c82a14140e7c0c89107fade00c2ff564be45fd332",
                              "typeString": "literal_string \"mint 0\""
                            },
                            "value": "mint 0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_e4fb6d62d16d5736772dcb4c82a14140e7c0c89107fade00c2ff564be45fd332",
                              "typeString": "literal_string \"mint 0\""
                            }
                          ],
                          "expression": {
                            "id": 30096,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6784:3:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 30097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6784:16:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 30099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6784:26:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 30093,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "6768:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8282",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8046,
                      "src": "6768:15:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6768:43:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30101,
                  "nodeType": "ExpressionStatement",
                  "src": "6768:43:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 30105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6839:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 30108,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6850:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          ],
                          "id": 30107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6842:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30106,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6842:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6842:13:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30102,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "6821:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 30104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27547,
                      "src": "6821:17:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint128_$",
                        "typeString": "function (uint256,address) external returns (uint256,uint256,uint128)"
                      }
                    },
                    "id": 30110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6821:35:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint128_$",
                      "typeString": "tuple(uint256,uint256,uint128)"
                    }
                  },
                  "id": 30111,
                  "nodeType": "ExpressionStatement",
                  "src": "6821:35:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53686f756c64206465706f736974206c697175696469747920696e746f207370696e646c65207661756c74",
                        "id": 30115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6903:45:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7caf12e4b5acdeea8e9a833008283017f02f0d6e114d3ca100b44c57bebd664",
                          "typeString": "literal_string \"Should deposit liquidity into spindle vault\""
                        },
                        "value": "Should deposit liquidity into spindle vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7caf12e4b5acdeea8e9a833008283017f02f0d6e114d3ca100b44c57bebd664",
                          "typeString": "literal_string \"Should deposit liquidity into spindle vault\""
                        }
                      ],
                      "expression": {
                        "id": 30112,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16346,
                        "src": "6891:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16346_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 30114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8877,
                      "src": "6891:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 30116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6891:58:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30117,
                  "nodeType": "ExpressionStatement",
                  "src": "6891:58:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30123,
                                "name": "uniPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29608,
                                "src": "6994:7:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              ],
                              "id": 30122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6986:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30121,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6986:7:62",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6986:16:62",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 30119,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29599,
                            "src": "6969:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$34133",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 30120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34697,
                          "src": "6969:16:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 30125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6969:34:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7005:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 30118,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 693,
                      "src": "6960:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6960:47:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30128,
                  "nodeType": "ExpressionStatement",
                  "src": "6960:47:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30134,
                                "name": "uniPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29608,
                                "src": "7051:7:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              ],
                              "id": 30133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7043:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30132,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7043:7:62",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7043:16:62",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 30130,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29602,
                            "src": "7026:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$34133",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 30131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34697,
                          "src": "7026:16:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 30136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7026:34:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7062:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 30129,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 693,
                      "src": "7017:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7017:47:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30139,
                  "nodeType": "ExpressionStatement",
                  "src": "7017:47:62"
                },
                {
                  "assignments": [
                    30141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30141,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nameLocation": "7083:9:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30264,
                      "src": "7075:17:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 30140,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "7075:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30142,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7075:17:62"
                },
                {
                  "expression": {
                    "id": 30154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 30143,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30141,
                          "src": "7103:9:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null,
                        null,
                        null
                      ],
                      "id": 30144,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7102:19:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$__$__$",
                        "typeString": "tuple(uint128,,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30148,
                              "name": "spindleVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29614,
                              "src": "7138:12:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                "typeString": "contract SpindleVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                "typeString": "contract SpindleVault"
                              }
                            ],
                            "id": 30147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7130:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30146,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7130:7:62",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7130:21:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 30151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "7153:7:62",
                          "subExpression": {
                            "hexValue": "383837323230",
                            "id": 30150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7154:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_887220_by_1",
                              "typeString": "int_const 887220"
                            },
                            "value": "887220"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_887220_by_1",
                            "typeString": "int_const -887220"
                          }
                        },
                        {
                          "hexValue": "383837323230",
                          "id": 30152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7162:6:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_887220_by_1",
                            "typeString": "int_const 887220"
                          },
                          "value": "887220"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_minus_887220_by_1",
                            "typeString": "int_const -887220"
                          },
                          {
                            "typeIdentifier": "t_rational_887220_by_1",
                            "typeString": "int_const 887220"
                          }
                        ],
                        "id": 30145,
                        "name": "_info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29967,
                        "src": "7124:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (address,int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                        }
                      },
                      "id": 30153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7124:45:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "src": "7102:67:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30155,
                  "nodeType": "ExpressionStatement",
                  "src": "7102:67:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30157,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30141,
                        "src": "7188:9:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7199:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 30156,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 693,
                      "src": "7179:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7179:22:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30160,
                  "nodeType": "ExpressionStatement",
                  "src": "7179:22:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30162,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "7220:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          },
                          "id": 30163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34683,
                          "src": "7220:24:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 30164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7220:26:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7248:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 30161,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 693,
                      "src": "7211:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7211:39:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30167,
                  "nodeType": "ExpressionStatement",
                  "src": "7211:39:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e35",
                        "id": 30169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7266:9:62",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "31",
                        "id": 30170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7277:7:62",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 30168,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "7260:5:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7260:25:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30172,
                  "nodeType": "ExpressionStatement",
                  "src": "7260:25:62"
                },
                {
                  "assignments": [
                    30174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30174,
                      "mutability": "mutable",
                      "name": "liquidity2",
                      "nameLocation": "7304:10:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30264,
                      "src": "7296:18:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 30173,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "7296:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30175,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7296:18:62"
                },
                {
                  "expression": {
                    "id": 30187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 30176,
                          "name": "liquidity2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30174,
                          "src": "7325:10:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null,
                        null,
                        null
                      ],
                      "id": 30177,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7324:20:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$__$__$",
                        "typeString": "tuple(uint128,,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30181,
                              "name": "spindleVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29614,
                              "src": "7361:12:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                "typeString": "contract SpindleVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                "typeString": "contract SpindleVault"
                              }
                            ],
                            "id": 30180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7353:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30179,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7353:7:62",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7353:21:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 30184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "7376:7:62",
                          "subExpression": {
                            "hexValue": "383837323230",
                            "id": 30183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7377:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_887220_by_1",
                              "typeString": "int_const 887220"
                            },
                            "value": "887220"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_887220_by_1",
                            "typeString": "int_const -887220"
                          }
                        },
                        {
                          "hexValue": "383837323230",
                          "id": 30185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7385:6:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_887220_by_1",
                            "typeString": "int_const 887220"
                          },
                          "value": "887220"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_minus_887220_by_1",
                            "typeString": "int_const -887220"
                          },
                          {
                            "typeIdentifier": "t_rational_887220_by_1",
                            "typeString": "int_const 887220"
                          }
                        ],
                        "id": 30178,
                        "name": "_info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29967,
                        "src": "7347:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (address,int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                        }
                      },
                      "id": 30186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7347:45:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "src": "7324:68:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30188,
                  "nodeType": "ExpressionStatement",
                  "src": "7324:68:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30190,
                        "name": "liquidity2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30174,
                        "src": "7411:10:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 30191,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30141,
                        "src": "7423:9:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 30189,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 693,
                      "src": "7402:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7402:31:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30193,
                  "nodeType": "ExpressionStatement",
                  "src": "7402:31:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 30197,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29623,
                          "src": "7466:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 30199,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 30198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7472:1:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7466:8:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 30200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7476:7:62",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 30194,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "7444:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 30196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34722,
                      "src": "7444:21:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7444:40:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30202,
                  "nodeType": "ExpressionStatement",
                  "src": "7444:40:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 30206,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29623,
                          "src": "7503:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 30208,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 30207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7509:1:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7503:8:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30203,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7494:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8282",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8005,
                      "src": "7494:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7494:18:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30210,
                  "nodeType": "ExpressionStatement",
                  "src": "7494:18:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30216,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7551:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          ],
                          "id": 30215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7543:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30214,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7543:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7543:13:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 30218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7558:7:62",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 30211,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "7522:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 30213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34765,
                      "src": "7522:20:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7522:44:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30220,
                  "nodeType": "ExpressionStatement",
                  "src": "7522:44:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30226,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7593:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          ],
                          "id": 30225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7585:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30224,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7585:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7585:13:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30221,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7576:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8282",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8005,
                      "src": "7576:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7576:23:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30229,
                  "nodeType": "ExpressionStatement",
                  "src": "7576:23:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 30233,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29623,
                          "src": "7635:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 30235,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 30234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7641:1:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7635:8:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30238,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7653:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          ],
                          "id": 30237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7645:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30236,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7645:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7645:13:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 30240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7660:7:62",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 30230,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "7609:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 30232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34798,
                      "src": "7609:25:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7609:59:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30242,
                  "nodeType": "ExpressionStatement",
                  "src": "7609:59:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30244,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "7688:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          },
                          "id": 30245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34673,
                          "src": "7688:21:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 30246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7688:23:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 30247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7713:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 30243,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "7679:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7679:37:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30249,
                  "nodeType": "ExpressionStatement",
                  "src": "7679:37:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30251,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "7735:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          },
                          "id": 30252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34663,
                          "src": "7735:19:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 30253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7735:21:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "5350562031",
                        "id": 30254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7758:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c8b5ee79bb7f17548373f24a30304ecde18f455256b84f906d1e2fc2a8845ef",
                          "typeString": "literal_string \"SPV 1\""
                        },
                        "value": "SPV 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c8b5ee79bb7f17548373f24a30304ecde18f455256b84f906d1e2fc2a8845ef",
                          "typeString": "literal_string \"SPV 1\""
                        }
                      ],
                      "id": 30250,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "7726:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 30255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7726:40:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30256,
                  "nodeType": "ExpressionStatement",
                  "src": "7726:40:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30258,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "7785:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          },
                          "id": 30259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34653,
                          "src": "7785:17:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 30260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7785:19:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "5370696e646c65205661756c7420563120544f4b454e2f544f4b454e",
                        "id": 30261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7806:30:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43e21596d489346770dc342407b8a90c2dc787d6edc3d13494156c27a55f10ce",
                          "typeString": "literal_string \"Spindle Vault V1 TOKEN/TOKEN\""
                        },
                        "value": "Spindle Vault V1 TOKEN/TOKEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43e21596d489346770dc342407b8a90c2dc787d6edc3d13494156c27a55f10ce",
                          "typeString": "literal_string \"Spindle Vault V1 TOKEN/TOKEN\""
                        }
                      ],
                      "id": 30257,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "7776:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 30262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7776:61:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30263,
                  "nodeType": "ExpressionStatement",
                  "src": "7776:61:62"
                }
              ]
            },
            "functionSelector": "7c935183",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_deposit",
            "nameLocation": "6715:12:62",
            "parameters": {
              "id": 30091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6727:2:62"
            },
            "returnParameters": {
              "id": 30092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6737:0:62"
            },
            "scope": 30676,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30347,
            "nodeType": "FunctionDefinition",
            "src": "7850:556:62",
            "nodes": [],
            "body": {
              "id": 30346,
              "nodeType": "Block",
              "src": "7883:523:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6275726e2030",
                            "id": 30273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7947:8:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_350d2694201db6c927069389974a3a1fb493df738af545850d11ebe80d307eb5",
                              "typeString": "literal_string \"burn 0\""
                            },
                            "value": "burn 0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_350d2694201db6c927069389974a3a1fb493df738af545850d11ebe80d307eb5",
                              "typeString": "literal_string \"burn 0\""
                            }
                          ],
                          "expression": {
                            "id": 30271,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7930:3:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 30272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7930:16:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 30274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7930:26:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 30268,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7914:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8282",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8046,
                      "src": "7914:15:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7914:43:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30276,
                  "nodeType": "ExpressionStatement",
                  "src": "7914:43:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 30280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7985:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 30283,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7996:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          ],
                          "id": 30282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7988:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7988:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7988:13:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30277,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "7967:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 30279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27810,
                      "src": "7967:17:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint128_$",
                        "typeString": "function (uint256,address) external returns (uint256,uint256,uint128)"
                      }
                    },
                    "id": 30285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7967:35:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint128_$",
                      "typeString": "tuple(uint256,uint256,uint128)"
                    }
                  },
                  "id": 30286,
                  "nodeType": "ExpressionStatement",
                  "src": "7967:35:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53686f756c64207769746864726177206c69717569646974792066726f6d207370696e646c65207661756c74",
                        "id": 30290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8025:46:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2685e3e95e0a3ff7dad93f3d40bcd0576dd410784603fe9065a8109597054404",
                          "typeString": "literal_string \"Should withdraw liquidity from spindle vault\""
                        },
                        "value": "Should withdraw liquidity from spindle vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2685e3e95e0a3ff7dad93f3d40bcd0576dd410784603fe9065a8109597054404",
                          "typeString": "literal_string \"Should withdraw liquidity from spindle vault\""
                        }
                      ],
                      "expression": {
                        "id": 30287,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16346,
                        "src": "8013:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16346_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 30289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8877,
                      "src": "8013:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 30291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8013:59:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30292,
                  "nodeType": "ExpressionStatement",
                  "src": "8013:59:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 30296,
                              "name": "spindleVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29614,
                              "src": "8101:12:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                "typeString": "contract SpindleVault"
                              }
                            },
                            "id": 30297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34683,
                            "src": "8101:24:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 30298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8101:26:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 30299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8128:1:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "8101:28:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30303,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8139:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          ],
                          "id": 30302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8131:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30301,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8131:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8131:13:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30293,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "8083:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 30295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27810,
                      "src": "8083:17:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint128_$",
                        "typeString": "function (uint256,address) external returns (uint256,uint256,uint128)"
                      }
                    },
                    "id": 30305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8083:62:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint128_$",
                      "typeString": "tuple(uint256,uint256,uint128)"
                    }
                  },
                  "id": 30306,
                  "nodeType": "ExpressionStatement",
                  "src": "8083:62:62"
                },
                {
                  "assignments": [
                    30308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30308,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nameLocation": "8164:9:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30346,
                      "src": "8156:17:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 30307,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8156:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30309,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8156:17:62"
                },
                {
                  "expression": {
                    "id": 30321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 30310,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30308,
                          "src": "8184:9:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null,
                        null,
                        null
                      ],
                      "id": 30311,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "8183:19:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$__$__$",
                        "typeString": "tuple(uint128,,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30315,
                              "name": "spindleVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29614,
                              "src": "8219:12:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                "typeString": "contract SpindleVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                "typeString": "contract SpindleVault"
                              }
                            ],
                            "id": 30314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8211:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30313,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8211:7:62",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8211:21:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 30318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "8234:7:62",
                          "subExpression": {
                            "hexValue": "383837323230",
                            "id": 30317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8235:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_887220_by_1",
                              "typeString": "int_const 887220"
                            },
                            "value": "887220"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_887220_by_1",
                            "typeString": "int_const -887220"
                          }
                        },
                        {
                          "hexValue": "383837323230",
                          "id": 30319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8243:6:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_887220_by_1",
                            "typeString": "int_const 887220"
                          },
                          "value": "887220"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_minus_887220_by_1",
                            "typeString": "int_const -887220"
                          },
                          {
                            "typeIdentifier": "t_rational_887220_by_1",
                            "typeString": "int_const 887220"
                          }
                        ],
                        "id": 30312,
                        "name": "_info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29967,
                        "src": "8205:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (address,int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                        }
                      },
                      "id": 30320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8205:45:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "src": "8183:67:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30322,
                  "nodeType": "ExpressionStatement",
                  "src": "8183:67:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30324,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30308,
                        "src": "8269:9:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8280:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 30323,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 693,
                      "src": "8260:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8260:22:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30327,
                  "nodeType": "ExpressionStatement",
                  "src": "8260:22:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30329,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "8301:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          },
                          "id": 30330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34683,
                          "src": "8301:24:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 30331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8301:26:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8329:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 30328,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 693,
                      "src": "8292:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8292:39:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30334,
                  "nodeType": "ExpressionStatement",
                  "src": "8292:39:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30340,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8381:4:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                                  "typeString": "contract SpindleVaultTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                                  "typeString": "contract SpindleVaultTest"
                                }
                              ],
                              "id": 30339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8373:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30338,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8373:7:62",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8373:13:62",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 30336,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "8350:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          },
                          "id": 30337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34697,
                          "src": "8350:22:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 30342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8350:37:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 30343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8389:9:62",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "id": 30335,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8341:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8341:58:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30345,
                  "nodeType": "ExpressionStatement",
                  "src": "8341:58:62"
                }
              ]
            },
            "functionSelector": "5d42513b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdraw",
            "nameLocation": "7859:13:62",
            "parameters": {
              "id": 30266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7873:2:62"
            },
            "returnParameters": {
              "id": 30267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7883:0:62"
            },
            "scope": 30676,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30646,
            "nodeType": "FunctionDefinition",
            "src": "8412:2538:62",
            "nodes": [],
            "body": {
              "id": 30645,
              "nodeType": "Block",
              "src": "8445:2505:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6c6971756964697479206d75737420696e637265617365",
                            "id": 30355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8509:25:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0f5e73b08ef8cab26a7550fe32af127d1fe3f75579b90a93364432d16f101692",
                              "typeString": "literal_string \"liquidity must increase\""
                            },
                            "value": "liquidity must increase"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_0f5e73b08ef8cab26a7550fe32af127d1fe3f75579b90a93364432d16f101692",
                              "typeString": "literal_string \"liquidity must increase\""
                            }
                          ],
                          "expression": {
                            "id": 30353,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8492:3:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 30354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "8492:16:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 30356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8492:43:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 30350,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8476:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8282",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8046,
                      "src": "8476:15:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8476:60:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30358,
                  "nodeType": "ExpressionStatement",
                  "src": "8476:60:62"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 30359,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "8546:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 30361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reinvest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27955,
                      "src": "8546:21:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 30362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8546:23:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30363,
                  "nodeType": "ExpressionStatement",
                  "src": "8546:23:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53686f756c642072656465706f736974206665657320776974682061207265696e766573742063616c6c",
                        "id": 30367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8592:44:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_818fc5b7fdd0b9491b449401c621db88bb52193f64ee3d8f7119ce4777526087",
                          "typeString": "literal_string \"Should redeposit fees with a reinvest call\""
                        },
                        "value": "Should redeposit fees with a reinvest call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_818fc5b7fdd0b9491b449401c621db88bb52193f64ee3d8f7119ce4777526087",
                          "typeString": "literal_string \"Should redeposit fees with a reinvest call\""
                        }
                      ],
                      "expression": {
                        "id": 30364,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16346,
                        "src": "8580:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16346_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 30366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8877,
                      "src": "8580:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 30368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8580:57:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30369,
                  "nodeType": "ExpressionStatement",
                  "src": "8580:57:62"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30370,
                      "name": "_washTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30052,
                      "src": "8648:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 30371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8648:13:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30372,
                  "nodeType": "ExpressionStatement",
                  "src": "8648:13:62"
                },
                {
                  "assignments": [
                    30374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30374,
                      "mutability": "mutable",
                      "name": "liquidityOld",
                      "nameLocation": "8680:12:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30645,
                      "src": "8672:20:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 30373,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8672:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30375,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8672:20:62"
                },
                {
                  "assignments": [
                    30377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30377,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "8710:1:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30645,
                      "src": "8702:9:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30376,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8702:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30378,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8702:9:62"
                },
                {
                  "assignments": [
                    30380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30380,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "8729:1:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30645,
                      "src": "8721:9:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30379,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8721:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30381,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8721:9:62"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 30382,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "8837:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 30384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUnderlyingBalances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28891,
                      "src": "8837:34:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function () external returns (uint256,uint256)"
                      }
                    },
                    "id": 30385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8837:36:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 30386,
                  "nodeType": "ExpressionStatement",
                  "src": "8837:36:62"
                },
                {
                  "expression": {
                    "id": 30400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 30387,
                          "name": "liquidityOld",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30374,
                          "src": "8884:12:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null,
                        {
                          "id": 30388,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30377,
                          "src": "8902:1:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 30389,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30380,
                          "src": "8905:1:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 30390,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "8883:24:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint128,,,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30394,
                              "name": "spindleVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29614,
                              "src": "8924:12:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                "typeString": "contract SpindleVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                "typeString": "contract SpindleVault"
                              }
                            ],
                            "id": 30393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8916:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30392,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8916:7:62",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8916:21:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 30397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "8939:7:62",
                          "subExpression": {
                            "hexValue": "383837323230",
                            "id": 30396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8940:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_887220_by_1",
                              "typeString": "int_const 887220"
                            },
                            "value": "887220"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_887220_by_1",
                            "typeString": "int_const -887220"
                          }
                        },
                        {
                          "hexValue": "383837323230",
                          "id": 30398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8948:6:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_887220_by_1",
                            "typeString": "int_const 887220"
                          },
                          "value": "887220"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_minus_887220_by_1",
                            "typeString": "int_const -887220"
                          },
                          {
                            "typeIdentifier": "t_rational_887220_by_1",
                            "typeString": "int_const 887220"
                          }
                        ],
                        "id": 30391,
                        "name": "_info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29967,
                        "src": "8910:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (address,int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                        }
                      },
                      "id": 30399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8910:45:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "src": "8883:72:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30401,
                  "nodeType": "ExpressionStatement",
                  "src": "8883:72:62"
                },
                {
                  "assignments": [
                    30403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30403,
                      "mutability": "mutable",
                      "name": "balance0Before",
                      "nameLocation": "9028:14:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30645,
                      "src": "9020:22:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30402,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9020:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30411,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30408,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9070:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          ],
                          "id": 30407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9062:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30406,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9062:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9062:13:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30404,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29599,
                        "src": "9045:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$34133",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 30405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34697,
                      "src": "9045:16:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 30410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9045:31:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9020:56:62"
                },
                {
                  "assignments": [
                    30413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30413,
                      "mutability": "mutable",
                      "name": "balance1Before",
                      "nameLocation": "9094:14:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30645,
                      "src": "9086:22:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30412,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9086:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30421,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30418,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9136:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                              "typeString": "contract SpindleVaultTest"
                            }
                          ],
                          "id": 30417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9128:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30416,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9128:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9128:13:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30414,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29602,
                        "src": "9111:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$34133",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 30415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34697,
                      "src": "9111:16:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 30420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9111:31:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9086:56:62"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 30422,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "9153:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 30424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reinvest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27955,
                      "src": "9153:21:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 30425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9153:23:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30426,
                  "nodeType": "ExpressionStatement",
                  "src": "9153:23:62"
                },
                {
                  "assignments": [
                    30428
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30428,
                      "mutability": "mutable",
                      "name": "feeBPS",
                      "nameLocation": "9252:6:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30645,
                      "src": "9245:13:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 30427,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "9245:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30432,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 30429,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "9261:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 30430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "managerFeeBPS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30731,
                      "src": "9261:26:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                        "typeString": "function () view external returns (uint16)"
                      }
                    },
                    "id": 30431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9261:28:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9245:44:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6578706563746564206d616e616765722062616c616e6365",
                        "id": 30436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9311:26:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8edb344a6fb76b48925e7706667ebe7fc9c623446e50dcfc7dd8da5b5cf8722",
                          "typeString": "literal_string \"expected manager balance\""
                        },
                        "value": "expected manager balance"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30437,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "9339:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          },
                          "id": 30438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "managerBalance0",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30735,
                          "src": "9339:28:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 30439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9339:30:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b8edb344a6fb76b48925e7706667ebe7fc9c623446e50dcfc7dd8da5b5cf8722",
                          "typeString": "literal_string \"expected manager balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30433,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16346,
                        "src": "9299:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16346_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 30435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8990,
                      "src": "9299:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 30440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9299:71:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30441,
                  "nodeType": "ExpressionStatement",
                  "src": "9299:71:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "61637475616c206d616e616765722062616c616e6365",
                        "id": 30445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9392:24:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8385472696863ea2b755bdd3a8941f6177d58b03c5c5b170bbbfdf6b2c6ddcdd",
                          "typeString": "literal_string \"actual manager balance\""
                        },
                        "value": "actual manager balance"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30446,
                            "name": "feeBPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30428,
                            "src": "9418:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 30447,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30377,
                            "src": "9425:1:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9418:8:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 30449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9427:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "9418:14:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8385472696863ea2b755bdd3a8941f6177d58b03c5c5b170bbbfdf6b2c6ddcdd",
                          "typeString": "literal_string \"actual manager balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30442,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16346,
                        "src": "9380:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16346_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 30444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8990,
                      "src": "9380:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 30451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9380:53:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30452,
                  "nodeType": "ExpressionStatement",
                  "src": "9380:53:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30454,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "9452:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          },
                          "id": 30455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "managerBalance0",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30735,
                          "src": "9452:28:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 30456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9452:30:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30457,
                            "name": "feeBPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30428,
                            "src": "9484:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 30458,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30377,
                            "src": "9491:1:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9484:8:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 30460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9493:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "9484:14:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30453,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "9443:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9443:56:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30463,
                  "nodeType": "ExpressionStatement",
                  "src": "9443:56:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30465,
                            "name": "spindleVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29614,
                            "src": "9518:12:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SpindleVault_$29580",
                              "typeString": "contract SpindleVault"
                            }
                          },
                          "id": 30466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "managerBalance1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30737,
                          "src": "9518:28:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 30467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9518:30:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30468,
                            "name": "feeBPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30428,
                            "src": "9550:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 30469,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30380,
                            "src": "9557:1:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9550:8:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 30471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9559:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "9550:14:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30464,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "9509:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9509:56:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30474,
                  "nodeType": "ExpressionStatement",
                  "src": "9509:56:62"
                },
                {
                  "expression": {
                    "id": 30479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30475,
                      "name": "feeBPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30428,
                      "src": "9636:6:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 30476,
                          "name": "spindleVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29614,
                          "src": "9645:12:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SpindleVault_$29580",
                            "typeString": "contract SpindleVault"
                          }
                        },
                        "id": 30477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reinvestBPS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30707,
                        "src": "9645:24:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                          "typeString": "function () view external returns (uint16)"
                        }
                      },
                      "id": 30478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9645:26:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "9636:35:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 30480,
                  "nodeType": "ExpressionStatement",
                  "src": "9636:35:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30486,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9715:4:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                                    "typeString": "contract SpindleVaultTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                                    "typeString": "contract SpindleVaultTest"
                                  }
                                ],
                                "id": 30485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9707:7:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30484,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9707:7:62",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9707:13:62",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 30482,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29599,
                              "src": "9690:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$34133",
                                "typeString": "contract MockERC20"
                              }
                            },
                            "id": 30483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34697,
                            "src": "9690:16:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 30488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9690:31:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 30489,
                          "name": "balance0Before",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30403,
                          "src": "9724:14:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9690:48:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30491,
                            "name": "feeBPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30428,
                            "src": "9740:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 30492,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30377,
                            "src": "9747:1:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9740:8:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 30494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9749:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "9740:14:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30481,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "9681:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9681:74:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30497,
                  "nodeType": "ExpressionStatement",
                  "src": "9681:74:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30503,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9799:4:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                                    "typeString": "contract SpindleVaultTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SpindleVaultTest_$30676",
                                    "typeString": "contract SpindleVaultTest"
                                  }
                                ],
                                "id": 30502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9791:7:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30501,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9791:7:62",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9791:13:62",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 30499,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29602,
                              "src": "9774:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$34133",
                                "typeString": "contract MockERC20"
                              }
                            },
                            "id": 30500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34697,
                            "src": "9774:16:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 30505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9774:31:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 30506,
                          "name": "balance1Before",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30413,
                          "src": "9808:14:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9774:48:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30508,
                            "name": "feeBPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30428,
                            "src": "9824:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 30509,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30380,
                            "src": "9831:1:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9824:8:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 30511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9833:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "9824:14:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30498,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "9765:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9765:74:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30514,
                  "nodeType": "ExpressionStatement",
                  "src": "9765:74:62"
                },
                {
                  "assignments": [
                    30516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30516,
                      "mutability": "mutable",
                      "name": "liquidityNew",
                      "nameLocation": "9905:12:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30645,
                      "src": "9897:20:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 30515,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "9897:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30517,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9897:20:62"
                },
                {
                  "expression": {
                    "id": 30529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 30518,
                          "name": "liquidityNew",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30516,
                          "src": "9928:12:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null,
                        null,
                        null
                      ],
                      "id": 30519,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "9927:22:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$__$__$",
                        "typeString": "tuple(uint128,,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30523,
                              "name": "spindleVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29614,
                              "src": "9966:12:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                "typeString": "contract SpindleVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                "typeString": "contract SpindleVault"
                              }
                            ],
                            "id": 30522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9958:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30521,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9958:7:62",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9958:21:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 30526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "9980:7:62",
                          "subExpression": {
                            "hexValue": "383837323230",
                            "id": 30525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9981:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_887220_by_1",
                              "typeString": "int_const 887220"
                            },
                            "value": "887220"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_887220_by_1",
                            "typeString": "int_const -887220"
                          }
                        },
                        {
                          "hexValue": "383837323230",
                          "id": 30527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9989:6:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_887220_by_1",
                            "typeString": "int_const 887220"
                          },
                          "value": "887220"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_minus_887220_by_1",
                            "typeString": "int_const -887220"
                          },
                          {
                            "typeIdentifier": "t_rational_887220_by_1",
                            "typeString": "int_const 887220"
                          }
                        ],
                        "id": 30520,
                        "name": "_info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29967,
                        "src": "9952:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (address,int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                        }
                      },
                      "id": 30528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9952:44:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "src": "9927:69:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30530,
                  "nodeType": "ExpressionStatement",
                  "src": "9927:69:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30532,
                        "name": "liquidityNew",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30516,
                        "src": "10015:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 30533,
                        "name": "liquidityOld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30374,
                        "src": "10029:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 30531,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 693,
                      "src": "10006:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10006:36:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30535,
                  "nodeType": "ExpressionStatement",
                  "src": "10006:36:62"
                },
                {
                  "assignments": [
                    30537,
                    30539,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30537,
                      "mutability": "mutable",
                      "name": "sqrtRatioX96",
                      "nameLocation": "10122:12:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30645,
                      "src": "10114:20:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 30536,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "10114:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30539,
                      "mutability": "mutable",
                      "name": "tick",
                      "nameLocation": "10142:4:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30645,
                      "src": "10136:10:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 30538,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "10136:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 30543,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 30540,
                        "name": "uniPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29608,
                        "src": "10160:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 30541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27060,
                      "src": "10160:13:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 30542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10160:15:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10113:62:62"
                },
                {
                  "assignments": [
                    null,
                    30545
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 30545,
                      "mutability": "mutable",
                      "name": "limitedBy0",
                      "nameLocation": "10193:10:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30645,
                      "src": "10188:15:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 30544,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10188:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30580,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "10246:7:62",
                        "subExpression": {
                          "hexValue": "383837323230",
                          "id": 30547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10247:6:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_887220_by_1",
                            "typeString": "int_const 887220"
                          },
                          "value": "887220"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_minus_887220_by_1",
                          "typeString": "int_const -887220"
                        }
                      },
                      {
                        "hexValue": "383837323230",
                        "id": 30549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10268:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_887220_by_1",
                          "typeString": "int_const 887220"
                        },
                        "value": "887220"
                      },
                      {
                        "id": 30550,
                        "name": "sqrtRatioX96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30537,
                        "src": "10288:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30551,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30377,
                          "src": "10314:1:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 30561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 30558,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 30552,
                                        "name": "spindleVault",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 29614,
                                        "src": "10319:12:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                          "typeString": "contract SpindleVault"
                                        }
                                      },
                                      "id": 30553,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "managerFeeBPS",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 30731,
                                      "src": "10319:26:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                                        "typeString": "function () view external returns (uint16)"
                                      }
                                    },
                                    "id": 30554,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10319:28:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 30555,
                                        "name": "spindleVault",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 29614,
                                        "src": "10350:12:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                          "typeString": "contract SpindleVault"
                                        }
                                      },
                                      "id": 30556,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "reinvestBPS",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 30707,
                                      "src": "10350:24:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                                        "typeString": "function () view external returns (uint16)"
                                      }
                                    },
                                    "id": 30557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10350:26:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "src": "10319:57:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "id": 30559,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10318:59:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 30560,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30377,
                              "src": "10378:1:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10318:61:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 30562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10380:5:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "10318:67:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10314:71:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30565,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30380,
                          "src": "10399:1:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 30575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 30572,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 30566,
                                        "name": "spindleVault",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 29614,
                                        "src": "10404:12:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                          "typeString": "contract SpindleVault"
                                        }
                                      },
                                      "id": 30567,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "managerFeeBPS",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 30731,
                                      "src": "10404:26:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                                        "typeString": "function () view external returns (uint16)"
                                      }
                                    },
                                    "id": 30568,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10404:28:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 30569,
                                        "name": "spindleVault",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 29614,
                                        "src": "10435:12:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                                          "typeString": "contract SpindleVault"
                                        }
                                      },
                                      "id": 30570,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "reinvestBPS",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 30707,
                                      "src": "10435:24:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                                        "typeString": "function () view external returns (uint16)"
                                      }
                                    },
                                    "id": 30571,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10435:26:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "src": "10404:57:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "id": 30573,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10403:59:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 30574,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30380,
                              "src": "10463:1:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10403:61:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 30576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10465:5:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "10403:67:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10399:71:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_minus_887220_by_1",
                          "typeString": "int_const -887220"
                        },
                        {
                          "typeIdentifier": "t_rational_887220_by_1",
                          "typeString": "int_const 887220"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30546,
                      "name": "_liquidityForAmountsCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30000,
                      "src": "10207:25:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$_t_uint160_$_t_uint256_$_t_uint256_$returns$_t_uint128_$_t_bool_$",
                        "typeString": "function (int24,int24,uint160,uint256,uint256) pure returns (uint128,bool)"
                      }
                    },
                    "id": 30579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10207:273:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_bool_$",
                      "typeString": "tuple(uint128,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10185:295:62"
                },
                {
                  "assignments": [
                    null,
                    null,
                    30582,
                    30584,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 30582,
                      "mutability": "mutable",
                      "name": "lower",
                      "nameLocation": "10501:5:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30645,
                      "src": "10495:11:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 30581,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "10495:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30584,
                      "mutability": "mutable",
                      "name": "upper",
                      "nameLocation": "10514:5:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 30645,
                      "src": "10508:11:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 30583,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "10508:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 30588,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 30585,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "10524:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 30586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "packedSlot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30799,
                      "src": "10524:23:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$_t_int24_$_t_int24_$_t_int24_$_t_bool_$",
                        "typeString": "function () view external returns (int24,int24,int24,int24,bool)"
                      }
                    },
                    "id": 30587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10524:25:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$_t_int24_$_t_int24_$_t_bool_$",
                      "typeString": "tuple(int24,int24,int24,int24,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10491:58:62"
                },
                {
                  "condition": {
                    "id": 30589,
                    "name": "limitedBy0",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30545,
                    "src": "10562:10:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 30643,
                    "nodeType": "Block",
                    "src": "10763:181:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30618,
                              "name": "lower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30582,
                              "src": "10786:5:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 30621,
                                  "name": "tick",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30539,
                                  "src": "10807:4:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 30622,
                                      "name": "uniPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29608,
                                      "src": "10813:7:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                                        "typeString": "contract IUniswapV3Pool"
                                      }
                                    },
                                    "id": 30623,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tickSpacing",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 27006,
                                    "src": "10813:19:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                      "typeString": "function () view external returns (int24)"
                                    }
                                  },
                                  "id": 30624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10813:21:62",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  },
                                  {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                ],
                                "expression": {
                                  "id": 30619,
                                  "name": "TickMath",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32330,
                                  "src": "10793:8:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_TickMath_$32330_$",
                                    "typeString": "type(library TickMath)"
                                  }
                                },
                                "id": 30620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ceil",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 32329,
                                "src": "10793:13:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$returns$_t_int24_$",
                                  "typeString": "function (int24,int24) pure returns (int24)"
                                }
                              },
                              "id": 30625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10793:42:62",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "id": 30617,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1947,
                              1972,
                              1985,
                              2001,
                              2043,
                              2085,
                              2127,
                              2164,
                              2201,
                              2238,
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 459,
                            "src": "10777:8:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                              "typeString": "function (int256,int256)"
                            }
                          },
                          "id": 30626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10777:59:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30627,
                        "nodeType": "ExpressionStatement",
                        "src": "10777:59:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30629,
                              "name": "upper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30584,
                              "src": "10859:5:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              "id": 30640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 30632,
                                    "name": "tick",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30539,
                                    "src": "10880:4:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 30633,
                                        "name": "uniPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 29608,
                                        "src": "10886:7:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                                          "typeString": "contract IUniswapV3Pool"
                                        }
                                      },
                                      "id": 30634,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "tickSpacing",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 27006,
                                      "src": "10886:19:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                        "typeString": "function () view external returns (int24)"
                                      }
                                    },
                                    "id": 30635,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10886:21:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    },
                                    {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  ],
                                  "expression": {
                                    "id": 30630,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32330,
                                    "src": "10866:8:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$32330_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 30631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "ceil",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 32329,
                                  "src": "10866:13:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$returns$_t_int24_$",
                                    "typeString": "function (int24,int24) pure returns (int24)"
                                  }
                                },
                                "id": 30636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10866:42:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 30637,
                                    "name": "uniPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29608,
                                    "src": "10911:7:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                                      "typeString": "contract IUniswapV3Pool"
                                    }
                                  },
                                  "id": 30638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tickSpacing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 27006,
                                  "src": "10911:19:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                    "typeString": "function () view external returns (int24)"
                                  }
                                },
                                "id": 30639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10911:21:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "src": "10866:66:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "id": 30628,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1947,
                              1972,
                              1985,
                              2001,
                              2043,
                              2085,
                              2127,
                              2164,
                              2201,
                              2238,
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 459,
                            "src": "10850:8:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                              "typeString": "function (int256,int256)"
                            }
                          },
                          "id": 30641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10850:83:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30642,
                        "nodeType": "ExpressionStatement",
                        "src": "10850:83:62"
                      }
                    ]
                  },
                  "id": 30644,
                  "nodeType": "IfStatement",
                  "src": "10559:385:62",
                  "trueBody": {
                    "id": 30616,
                    "nodeType": "Block",
                    "src": "10574:183:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30591,
                              "name": "lower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30582,
                              "src": "10597:5:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              "id": 30602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 30594,
                                    "name": "tick",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30539,
                                    "src": "10619:4:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 30595,
                                        "name": "uniPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 29608,
                                        "src": "10625:7:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                                          "typeString": "contract IUniswapV3Pool"
                                        }
                                      },
                                      "id": 30596,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "tickSpacing",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 27006,
                                      "src": "10625:19:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                        "typeString": "function () view external returns (int24)"
                                      }
                                    },
                                    "id": 30597,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10625:21:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    },
                                    {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  ],
                                  "expression": {
                                    "id": 30592,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32330,
                                    "src": "10604:8:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$32330_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 30593,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "floor",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 32297,
                                  "src": "10604:14:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$returns$_t_int24_$",
                                    "typeString": "function (int24,int24) pure returns (int24)"
                                  }
                                },
                                "id": 30598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10604:43:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 30599,
                                    "name": "uniPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29608,
                                    "src": "10650:7:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                                      "typeString": "contract IUniswapV3Pool"
                                    }
                                  },
                                  "id": 30600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tickSpacing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 27006,
                                  "src": "10650:19:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                    "typeString": "function () view external returns (int24)"
                                  }
                                },
                                "id": 30601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10650:21:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "src": "10604:67:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "id": 30590,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1947,
                              1972,
                              1985,
                              2001,
                              2043,
                              2085,
                              2127,
                              2164,
                              2201,
                              2238,
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 459,
                            "src": "10588:8:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                              "typeString": "function (int256,int256)"
                            }
                          },
                          "id": 30603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10588:84:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30604,
                        "nodeType": "ExpressionStatement",
                        "src": "10588:84:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30606,
                              "name": "upper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30584,
                              "src": "10695:5:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 30609,
                                  "name": "tick",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30539,
                                  "src": "10717:4:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 30610,
                                      "name": "uniPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29608,
                                      "src": "10723:7:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$26699",
                                        "typeString": "contract IUniswapV3Pool"
                                      }
                                    },
                                    "id": 30611,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tickSpacing",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 27006,
                                    "src": "10723:19:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                      "typeString": "function () view external returns (int24)"
                                    }
                                  },
                                  "id": 30612,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10723:21:62",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  },
                                  {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                ],
                                "expression": {
                                  "id": 30607,
                                  "name": "TickMath",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32330,
                                  "src": "10702:8:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_TickMath_$32330_$",
                                    "typeString": "type(library TickMath)"
                                  }
                                },
                                "id": 30608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "floor",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 32297,
                                "src": "10702:14:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$returns$_t_int24_$",
                                  "typeString": "function (int24,int24) pure returns (int24)"
                                }
                              },
                              "id": 30613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10702:43:62",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "id": 30605,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1947,
                              1972,
                              1985,
                              2001,
                              2043,
                              2085,
                              2127,
                              2164,
                              2201,
                              2238,
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 459,
                            "src": "10686:8:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                              "typeString": "function (int256,int256)"
                            }
                          },
                          "id": 30614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10686:60:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30615,
                        "nodeType": "ExpressionStatement",
                        "src": "10686:60:62"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "6875d18c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_reinvest",
            "nameLocation": "8421:13:62",
            "parameters": {
              "id": 30348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8435:2:62"
            },
            "returnParameters": {
              "id": 30349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8445:0:62"
            },
            "scope": 30676,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30675,
            "nodeType": "FunctionDefinition",
            "src": "10956:275:62",
            "nodes": [],
            "body": {
              "id": 30674,
              "nodeType": "Block",
              "src": "10993:238:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "74696d65207468726573686f6c64206e6f742072656163686564",
                            "id": 30654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11057:28:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c85254e517682e9100bbd3d3a6b51644ca6bf49b6360b74c91a221a4ebc05285",
                              "typeString": "literal_string \"time threshold not reached\""
                            },
                            "value": "time threshold not reached"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c85254e517682e9100bbd3d3a6b51644ca6bf49b6360b74c91a221a4ebc05285",
                              "typeString": "literal_string \"time threshold not reached\""
                            }
                          ],
                          "expression": {
                            "id": 30652,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11040:3:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 30653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "11040:16:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 30655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11040:46:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 30649,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "11024:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8282",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8046,
                      "src": "11024:15:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11024:63:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30657,
                  "nodeType": "ExpressionStatement",
                  "src": "11024:63:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 30661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11123:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 30662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11126:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 30658,
                        "name": "spindleVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29614,
                        "src": "11097:12:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpindleVault_$29580",
                          "typeString": "contract SpindleVault"
                        }
                      },
                      "id": 30660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timeRecenter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28015,
                      "src": "11097:25:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 30663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11097:31:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30664,
                  "nodeType": "ExpressionStatement",
                  "src": "11097:31:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53686f756c6420726563656e74657220746865206c697175696469747920706f736974696f6e20626f756e6473",
                        "id": 30668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11151:47:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e638560364a3a0b1aff216f52e60c32e3b3113f816b66d8972c70046ed1592e",
                          "typeString": "literal_string \"Should recenter the liquidity position bounds\""
                        },
                        "value": "Should recenter the liquidity position bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5e638560364a3a0b1aff216f52e60c32e3b3113f816b66d8972c70046ed1592e",
                          "typeString": "literal_string \"Should recenter the liquidity position bounds\""
                        }
                      ],
                      "expression": {
                        "id": 30665,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16346,
                        "src": "11139:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16346_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 30667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8877,
                      "src": "11139:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 30669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11139:60:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30670,
                  "nodeType": "ExpressionStatement",
                  "src": "11139:60:62"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30671,
                      "name": "_washTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30052,
                      "src": "11210:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 30672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11210:13:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30673,
                  "nodeType": "ExpressionStatement",
                  "src": "11210:13:62"
                }
              ]
            },
            "functionSelector": "01938537",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_timeRecenter",
            "nameLocation": "10965:17:62",
            "parameters": {
              "id": 30647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10983:2:62"
            },
            "returnParameters": {
              "id": 30648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10993:0:62"
            },
            "scope": 30676,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30054,
              "name": "SpindleVaultTestBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30053,
              "src": "6378:20:62"
            },
            "id": 30055,
            "nodeType": "InheritanceSpecifier",
            "src": "6378:20:62"
          }
        ],
        "canonicalName": "SpindleVaultTest",
        "contractDependencies": [
          29580,
          33570,
          34096,
          34133,
          34371,
          34494
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30676,
          30053,
          7499,
          7468,
          5040,
          4651,
          2644,
          1786,
          7488,
          1818
        ],
        "name": "SpindleVaultTest",
        "nameLocation": "6358:16:62",
        "scope": 30677,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 62
}