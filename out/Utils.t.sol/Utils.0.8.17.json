{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "userNum",
          "type": "uint256"
        }
      ],
      "name": "createUsers",
      "outputs": [
        {
          "internalType": "address payable[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNextUserAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numBlocks",
          "type": "uint256"
        }
      ],
      "name": "mineBlocks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526007805460ff191660011790556200001b62000066565b6008556040516b75736572206164647265737360a01b6020820152602c01604051602081830303815290604052805190602001206043553480156200005f57600080fd5b5062001818565b6000604051806102200160405280604051806060016040528060405180604001604052806005815260200164105b9d9a5b60da1b8152508152602001617a6981526020016040518060400160405280601581526020017f687474703a2f2f3132372e302e302e313a383534350000000000000000000000815250815250815260200160405180606001604052806040518060400160405280600781526020016612185c991a185d60ca1b8152508152602001617a6981526020016040518060400160405280601581526020017f687474703a2f2f3132372e302e302e313a383534350000000000000000000000815250815250815260200160405180606001604052806040518060400160405280600781526020016613585a5b9b995d60ca1b8152508152602001600181526020016040518060400160405280601f81526020017f68747470733a2f2f6170692e6d7963727970746f6170692e636f6d2f657468008152508152508152602001604051806060016040528060405180604001604052806006815260200165476f65726c6960d01b8152508152602001600581526020016040518060600160405280603c815260200162001e5c603c9139905281526040805160a0808201835260076060808401918252665365706f6c696160c81b60808086019190915291845262aa36a760208581019190915285518087018752601781527f68747470733a2f2f7270632e7365706f6c69612e646576000000000000000000818301528587015280870194909452845180840186526008818301908152674f7074696d69736d60c01b828501528152600a8186015285518087018752601b81527f68747470733a2f2f6d61696e6e65742e6f7074696d69736d2e696f000000000081870152818701528587015284518084018652600e8183019081526d4f7074696d69736d476f65726c6960901b8285015281526101a48186015285518087018752601a81527f68747470733a2f2f676f65726c692e6f7074696d69736d2e696f00000000000081870152818701528187015284518084018652600b8183019081526a417262697472756d4f6e6560a81b82850152815261a4b18186015285518087018752601c81527f68747470733a2f2f617262312e617262697472756d2e696f2f7270630000000081870152818701528287015284518084018652601181830190815270417262697472756d4f6e65476f65726c6960781b9382019390935291825262066eed828501528451908101855260258082529290950194909384019290919062001e9890830139905281526040805160a08082018352600c60608084019182526b417262697472756d4e6f766160a01b60808086019190915291845261a4ba60208581019190915285518087018752601c81527f68747470733a2f2f6e6f76612e617262697472756d2e696f2f72706300000000818301528587015280870194909452845180840186526007818301908152662837b63cb3b7b760c91b82850152815260898186015285518087018752601781527f68747470733a2f2f706f6c79676f6e2d7270632e636f6d00000000000000000081870152818701528587015284518084018652600d8183019081526c506f6c79676f6e4d756d62616960981b828501528152620138818186015285518087018752601e81527f68747470733a2f2f7270632d6d756d6261692e6d617469632e746f6461790000818701528187015281870152845192830185526009838201908152684176616c616e63686560b81b84840152835261a86a838501528451908101855260258082529190950194919384019262001e3790830139815250815260200160405180606001604052806040518060400160405280600d81526020016c4176616c616e63686546756a6960981b815250815260200161a86981526020016040518060600160405280602a815260200162001ebd602a9139815250815260200160405180606001604052806040518060400160405280600d81526020016c21373129b6b0b93a21b430b4b760991b81525081526020016038815260200160405180606001604052806021815260200162001ee760219139815250815260200160405180606001604052806040518060400160405280601481526020017f426e62536d617274436861696e546573746e65740000000000000000000000008152508152602001606181526020016040518060600160405280602e815260200162001e09602e9139905281526040805160a081018252600b606082019081526a23b737b9b4b9a1b430b4b760a91b60808301528152606460208281019190915282518084018452601b81527f68747470733a2f2f7270632e676e6f736973636861696e2e636f6d00000000008183015292820192909252910152805180516009919082908190620007599082620014c8565b5060208201516001820155604082015160028201906200077a9082620014c8565b5050506020820151805160038301908190620007979082620014c8565b506020820151600182015560408201516002820190620007b89082620014c8565b5050506040820151805160068301908190620007d59082620014c8565b506020820151600182015560408201516002820190620007f69082620014c8565b5050506060820151805160098301908190620008139082620014c8565b506020820151600182015560408201516002820190620008349082620014c8565b50505060808201518051600c8301908190620008519082620014c8565b506020820151600182015560408201516002820190620008729082620014c8565b50505060a08201518051600f83019081906200088f9082620014c8565b506020820151600182015560408201516002820190620008b09082620014c8565b50505060c0820151805160128301908190620008cd9082620014c8565b506020820151600182015560408201516002820190620008ee9082620014c8565b50505060e08201518051601583019081906200090b9082620014c8565b5060208201516001820155604082015160028201906200092c9082620014c8565b5050506101008201518051601883019081906200094a9082620014c8565b5060208201516001820155604082015160028201906200096b9082620014c8565b5050506101208201518051601b8301908190620009899082620014c8565b506020820151600182015560408201516002820190620009aa9082620014c8565b5050506101408201518051601e8301908190620009c89082620014c8565b506020820151600182015560408201516002820190620009e99082620014c8565b50505061016082015180516021830190819062000a079082620014c8565b50602082015160018201556040820151600282019062000a289082620014c8565b50505061018082015180516024830190819062000a469082620014c8565b50602082015160018201556040820151600282019062000a679082620014c8565b5050506101a082015180516027830190819062000a859082620014c8565b50602082015160018201556040820151600282019062000aa69082620014c8565b5050506101c08201518051602a830190819062000ac49082620014c8565b50602082015160018201556040820151600282019062000ae59082620014c8565b5050506101e08201518051602d830190819062000b039082620014c8565b50602082015160018201556040820151600282019062000b249082620014c8565b50505061020082015180516030830190819062000b429082620014c8565b50602082015160018201556040820151600282019062000b639082620014c8565b50505090505060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663a85a84186040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000bcd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000bf7919081019062001618565b905060005b8151811015620013055760008083838151811062000c1e5762000c1e620017a5565b602002602001015160006002811062000c3b5762000c3b620017a5565b602002015184848151811062000c555762000c55620017a5565b602002602001015160016002811062000c725762000c72620017a5565b60200201519150915062000caa8260405180604001604052806005815260200164185b9d9a5b60da1b8152506200130e60201b60201c565b1562000cc557600b62000cbe8282620014c8565b50620012ed565b62000cf682604051806040016040528060078152602001661a185c991a185d60ca1b8152506200130e60201b60201c565b1562000d0a57600e62000cbe8282620014c8565b62000d3b82604051806040016040528060078152602001661b585a5b9b995d60ca1b8152506200130e60201b60201c565b1562000d4f57601162000cbe8282620014c8565b62000d7f8260405180604001604052806006815260200165676f65726c6960d01b8152506200130e60201b60201c565b1562000d9357601462000cbe8282620014c8565b62000dc482604051806040016040528060078152602001667365706f6c696160c81b8152506200130e60201b60201c565b1562000dd857601762000cbe8282620014c8565b62000e0a82604051806040016040528060088152602001676f7074696d69736d60c01b8152506200130e60201b60201c565b1562000e1e57601a62000cbe8282620014c8565b62000e7f826040518060400160405280600f81526020016e6f7074696d69736d5f676f65726c6960881b8152506040518060400160405280600f81526020016e6f7074696d69736d2d676f65726c6960881b8152506200136b60201b60201c565b1562000e9357601d62000cbe8282620014c8565b62000eee826040518060400160405280600c81526020016b617262697472756d5f6f6e6560a01b8152506040518060400160405280600c81526020016b617262697472756d2d6f6e6560a01b8152506200136b60201b60201c565b1562000f0257602062000cbe8282620014c8565b62000f7f826040518060400160405280601381526020017f617262697472756d5f6f6e655f676f65726c69000000000000000000000000008152506040518060400160405280601381526020017f617262697472756d2d6f6e652d676f65726c69000000000000000000000000008152506200136b60201b60201c565b1562000f9357602362000cbe8282620014c8565b62000ff0826040518060400160405280600d81526020016c617262697472756d5f6e6f766160981b8152506040518060400160405280600d81526020016c617262697472756d2d6e6f766160981b8152506200136b60201b60201c565b156200100457602662000cbe8282620014c8565b6200103582604051806040016040528060078152602001663837b63cb3b7b760c91b8152506200130e60201b60201c565b156200104957602962000cbe8282620014c8565b620010a8826040518060400160405280600e81526020016d706f6c79676f6e5f6d756d62616960901b8152506040518060400160405280600e81526020016d706f6c79676f6e2d6d756d62616960901b8152506200136b60201b60201c565b15620010bc57602c62000cbe8282620014c8565b620010ef82604051806040016040528060098152602001686176616c616e63686560b81b8152506200130e60201b60201c565b156200110357602f62000cbe8282620014c8565b62001162826040518060400160405280600e81526020016d6176616c616e6368655f66756a6960901b8152506040518060400160405280600e81526020016d6176616c616e6368652d66756a6960901b8152506200136b60201b60201c565b156200117657603262000cbe8282620014c8565b620011d7826040518060400160405280600f81526020016e3137312fb9b6b0b93a2fb1b430b4b760891b8152506040518060400160405280600f81526020016e31373116b9b6b0b93a16b1b430b4b760891b8152506200136b60201b60201c565b15620011eb57603562000cbe8282620014c8565b62001268826040518060400160405280601781526020017f626e625f736d6172745f636861696e5f746573746e65740000000000000000008152506040518060400160405280601781526020017f626e622d736d6172742d636861696e2d746573746e65740000000000000000008152506200136b60201b60201c565b156200127c57603862000cbe8282620014c8565b620012d7826040518060400160405280600c81526020016b33b737b9b4b9afb1b430b4b760a11b8152506040518060400160405280600c81526020016b33b737b9b4b996b1b430b4b760a11b8152506200136b60201b60201c565b15620012ed57603b620012eb8282620014c8565b505b50508080620012fc90620017bb565b91505062000bfc565b50600091505090565b600081604051602001620013239190620017e3565b60405160208183030381529060405280519060200120836040516020016200134c9190620017e3565b6040516020818303038152906040528051906020012014905092915050565b600082604051602001620013809190620017e3565b6040516020818303038152906040528051906020012084604051602001620013a99190620017e3565b6040516020818303038152906040528051906020012014806200141b575081604051602001620013da9190620017e3565b6040516020818303038152906040528051906020012084604051602001620014039190620017e3565b60405160208183030381529060405280519060200120145b949350505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200144e57607f821691505b6020821081036200146f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620014c357600081815260208120601f850160051c810160208610156200149e5750805b601f850160051c820191505b81811015620014bf57828155600101620014aa565b5050505b505050565b81516001600160401b03811115620014e457620014e462001423565b620014fc81620014f5845462001439565b8462001475565b602080601f8311600181146200153457600084156200151b5750858301515b600019600386901b1c1916600185901b178555620014bf565b600085815260208120601f198616915b82811015620015655788860151825594840194600190910190840162001544565b5085821015620015845787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604080519081016001600160401b0381118282101715620015b957620015b962001423565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620015ea57620015ea62001423565b604052919050565b60005b838110156200160f578181015183820152602001620015f5565b50506000910152565b6000602082840312156200162b57600080fd5b81516001600160401b03808211156200164357600080fd5b818401915084601f8301126200165857600080fd5b8151818111156200166d576200166d62001423565b6200167e60208260051b01620015bf565b8082825260208201915060208360051b860101925087831115620016a157600080fd5b602085015b838110156200179957805185811115620016bf57600080fd5b8601603f81018a13620016d157600080fd5b620016db62001594565b808b606084011115620016ed57600080fd5b602083015b6060840181101562001787578051898111156200170e57600080fd5b8401603f81018e136200172057600080fd5b60208101518a81111562001738576200173862001423565b6200174d601f8201601f1916602001620015bf565b8181528f60408385010111156200176357600080fd5b62001776826020830160408601620015f2565b8552505060209283019201620016f2565b508552505060209283019201620016a6565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620017dc57634e487b7160e01b600052601160045260246000fd5b5060010190565b602081526000825180602084015262001804816040850160208701620015f2565b601f01601f19169190910160400192915050565b6105e180620018286000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063792e11f51461005c578063b90a68fa14610085578063ba414fa6146100c2578063f82de7b0146100da578063fa7626d4146100ef575b600080fd5b61006f61006a36600461041f565b6100fc565b60405161007c9190610438565b60405180910390f35b604380546040805160208082018490528251808303820181528284019384905280519101209093556001600160a01b03909116905260600161007c565b6100ca61027a565b604051901515815260200161007c565b6100ed6100e836600461041f565b6103a7565b005b6007546100ca9060ff1681565b606060008267ffffffffffffffff81111561011957610119610485565b604051908082528060200260200182016040528015610142578160200160208202803683370190505b50905060005b83811015610273576000306001600160a01b031663b90a68fa6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b6919061049b565b60405163c88a5e6d60e01b81526001600160a01b038216600482015268056bc75e2d631000006024820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561021d57600080fd5b505af1158015610231573d6000803e3d6000fd5b5050505080838381518110610248576102486104cb565b6001600160a01b0390921660209283029190910190910152508061026b816104f7565b915050610148565b5092915050565b600754600090610100900460ff161561029c5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156103a25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161032a917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610540565b60408051601f198184030181529082905261034491610564565b6000604051808303816000865af19150503d8060008114610381576040519150601f19603f3d011682016040523d82523d6000602084013e610386565b606091505b509150508080602001905181019061039e9190610570565b9150505b919050565b60006103b38243610592565b6040516301f7b4f360e41b815260048101829052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d90631f7b4f3090602401600060405180830381600087803b15801561040357600080fd5b505af1158015610417573d6000803e3d6000fd5b505050505050565b60006020828403121561043157600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156104795783516001600160a01b031683529284019291840191600101610454565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104ad57600080fd5b81516001600160a01b03811681146104c457600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610509576105096104e1565b5060010190565b6000815160005b818110156105315760208185018101518683015201610517565b50600093019283525090919050565b6001600160e01b031983168152600061055c6004830184610510565b949350505050565b60006104c48284610510565b60006020828403121561058257600080fd5b815180151581146104c457600080fd5b808201808211156105a5576105a56104e1565b9291505056fea2646970667358221220e33f9e3ca25378baa0f659f92478aa83d038b6db8a552a91e382086019162efe64736f6c6343000811003368747470733a2f2f646174612d736565642d7072656273632d312d73312e62696e616e63652e6f72673a3835343568747470733a2f2f6170692e617661782e6e6574776f726b2f6578742f62632f432f72706368747470733a2f2f676f65726c692e696e667572612e696f2f76332f383438343230373862303939343636333863303331353766383334303532313368747470733a2f2f676f65726c692d726f6c6c75702e617262697472756d2e696f2f72706368747470733a2f2f6170692e617661782d746573742e6e6574776f726b2f6578742f62632f432f72706368747470733a2f2f6273632d6461746173656564312e62696e616e63652e6f7267",
    "sourceMap": "106:989:57:-:0;;;1576:26:0;;;-1:-1:-1;;1576:26:0;1598:4;1576:26;;;650:14:5;:12;:14::i;:::-;620:44;;173:32:57;;-1:-1:-1;;;173:32:57;;;216:27:58;259:12;;173:32:57;;;;;;;;;;;;163:43;;;;;;135:71;;106:989;;;;;;;;;;;;6228:3879:5;6269:7;6353:1679;;;;;;;;6381:46;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6381:46:5;;;;;;;6396:5;6381:46;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;6450:48;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6450:48:5;;;;;;;6467:5;6450:48;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;6521:54;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6521:54:5;;;;;;;6538:1;6521:54;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;6597:82;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6597:82:5;;;;;;;6613:1;6597:82;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;6870:53;;;;;;;;;;;;;;;;;-1:-1:-1;;;6870:53:5;;;;;;;;;;;6887:8;6353:1679;6870:53;;;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;;;;6947:52;;;;;;;;;;;;;;-1:-1:-1;;;6947:52:5;;;;;;6965:2;6947:52;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7029:58;;;;;;;;;;;;;;-1:-1:-1;;;7029:58:5;;;;;;7053:3;7029:58;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7114:59;;;;;;;;;;;;;;-1:-1:-1;;;7114:59:5;;;;;;7135:5;7114:59;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7206:75;;;;;;;;;;;;;;-1:-1:-1;;;7206:75:5;;;;;;;;;;7233:6;7206:75;;;;;;;;;;;;;;;6353:1679;;;;;7206:75;;;;;;;;;;;;;;;6353:1679;;7309:60;;;;;;;;;;;;;;;;;-1:-1:-1;;;7309:60:5;;;;;;;;;;;7331:5;6353:1679;7309:60;;;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;;;;7392:48;;;;;;;;;;;;;;-1:-1:-1;;;7392:48:5;;;;;;7409:3;7392:48;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7469:63;;;;;;;;;;;;;;-1:-1:-1;;;7469:63:5;;;;;;7492:5;7469:63;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7557:66;;;;;;;;;;;;;;-1:-1:-1;;;7557:66:5;;;;;;7576:5;7557:66;;;;;;;;;;;;;;;6353:1679;;;;;7557:66;;;;;;;;;;;;;6353:1679;;;;7652:75;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7652:75:5;;;;;;;7675:5;7652:75;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7756:63;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7756:63:5;;;;;;;7779:2;7756:63;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;;7855:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7885:2;7855:83;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;7965:56;;;;;;;;;;;;;;;-1:-1:-1;;;7965:56:5;;;;;;7986:3;6353:1679;7965:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6353:1679;;;6341:1691;;;;:9;;:1691;:9;;;;:1691;;:9;:1691;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;6341:1691:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6341:1691:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;8125:23;245:28;237:37;;-1:-1:-1;;;;;8152:10:5;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8152:12:5;;;;;;;;;;;;:::i;:::-;8124:40;;8179:9;8174:1909;8198:4;:11;8194:1;:15;8174:1909;;;8231:18;8251:20;8276:4;8281:1;8276:7;;;;;;;;:::i;:::-;;;;;;;8284:1;8276:10;;;;;;;:::i;:::-;;;;;8288:4;8293:1;8288:7;;;;;;;;:::i;:::-;;;;;;;8296:1;8288:10;;;;;;;:::i;:::-;;;;;8230:69;;;;8356:22;8364:4;8356:22;;;;;;;;;;;;;-1:-1:-1;;;8356:22:5;;;:7;;;:22;;:::i;:::-;8352:1683;;;8380:22;:31;8405:6;8380:22;:31;:::i;:::-;;8352:1683;;;8434:24;8442:4;8434:24;;;;;;;;;;;;;-1:-1:-1;;;8434:24:5;;;:7;;;:24;;:::i;:::-;8430:1605;;;8460:24;:33;8487:6;8460:24;:33;:::i;8430:1605::-;8516:24;8524:4;8516:24;;;;;;;;;;;;;-1:-1:-1;;;8516:24:5;;;:7;;;:24;;:::i;:::-;8512:1523;;;8542:24;:33;8569:6;8542:24;:33;:::i;8512:1523::-;8598:23;8606:4;8598:23;;;;;;;;;;;;;-1:-1:-1;;;8598:23:5;;;:7;;;:23;;:::i;:::-;8594:1441;;;8623:23;:32;8649:6;8623:23;:32;:::i;8594:1441::-;8678:24;8686:4;8678:24;;;;;;;;;;;;;-1:-1:-1;;;8678:24:5;;;:7;;;:24;;:::i;:::-;8674:1361;;;8704:24;:33;8731:6;8704:24;:33;:::i;8674:1361::-;8760:25;8768:4;8760:25;;;;;;;;;;;;;-1:-1:-1;;;8760:25:5;;;:7;;;:25;;:::i;:::-;8756:1279;;;8787:25;:34;8815:6;8787:25;:34;:::i;8756:1279::-;8844:51;8852:4;8844:51;;;;;;;;;;;;;-1:-1:-1;;;8844:51:5;;;;;;;;;;;;;;;;-1:-1:-1;;;8844:51:5;;;:7;;;:51;;:::i;:::-;8840:1195;;;8897:31;:40;8931:6;8897:31;:40;:::i;8840:1195::-;8960:45;8968:4;8960:45;;;;;;;;;;;;;-1:-1:-1;;;8960:45:5;;;;;;;;;;;;;;;;-1:-1:-1;;;8960:45:5;;;:7;;;:45;;:::i;:::-;8956:1079;;;9007:28;:37;9038:6;9007:28;:37;:::i;8956:1079::-;9067:59;9075:4;9067:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;;;:59;;:::i;:::-;9063:972;;;9128:34;:43;9165:6;9128:34;:43;:::i;9063:972::-;9194:47;9202:4;9194:47;;;;;;;;;;;;;-1:-1:-1;;;9194:47:5;;;;;;;;;;;;;;;;-1:-1:-1;;;9194:47:5;;;:7;;;:47;;:::i;:::-;9190:845;;;9243:29;:38;9275:6;9243:29;:38;:::i;9190:845::-;9304:24;9312:4;9304:24;;;;;;;;;;;;;-1:-1:-1;;;9304:24:5;;;:7;;;:24;;:::i;:::-;9300:735;;;9330:24;:33;9357:6;9330:24;:33;:::i;9300:735::-;9386:49;9394:4;9386:49;;;;;;;;;;;;;-1:-1:-1;;;9386:49:5;;;;;;;;;;;;;;;;-1:-1:-1;;;9386:49:5;;;:7;;;:49;;:::i;:::-;9382:653;;;9437:30;:39;9470:6;9437:30;:39;:::i;9382:653::-;9499:26;9507:4;9499:26;;;;;;;;;;;;;-1:-1:-1;;;9499:26:5;;;:7;;;:26;;:::i;:::-;9495:540;;;9527:26;:35;9556:6;9527:26;:35;:::i;9495:540::-;9585:49;9593:4;9585:49;;;;;;;;;;;;;-1:-1:-1;;;9585:49:5;;;;;;;;;;;;;;;;-1:-1:-1;;;9585:49:5;;;:7;;;:49;;:::i;:::-;9581:454;;;9636:30;:39;9669:6;9636:30;:39;:::i;9581:454::-;9698:51;9706:4;9698:51;;;;;;;;;;;;;-1:-1:-1;;;9698:51:5;;;;;;;;;;;;;;;;-1:-1:-1;;;9698:51:5;;;:7;;;:51;;:::i;:::-;9694:341;;;9751:30;:39;9784:6;9751:30;:39;:::i;9694:341::-;9813:67;9821:4;9813:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;;;:67;;:::i;:::-;9809:226;;;9882:37;:46;9922:6;9882:37;:46;:::i;9809:226::-;9951:45;9959:4;9951:45;;;;;;;;;;;;;-1:-1:-1;;;9951:45:5;;;;;;;;;;;;;;;;-1:-1:-1;;;9951:45:5;;;:7;;;:45;;:::i;:::-;9947:88;;;9998:28;:37;10029:6;9998:28;:37;:::i;:::-;;9947:88;8216:1867;;8211:3;;;;;:::i;:::-;;;;8174:1909;;;;10099:1;10092:8;;;6228:3879;:::o;10113:155::-;10186:4;10258:1;10247:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;10237:24;;;;;;10230:1;10219:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;10209:24;;;;;;:52;10202:59;;10113:155;;;;:::o;10274:240::-;10364:4;10448:1;10437:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;10427:24;;;;;;10420:1;10409:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;10399:24;;;;;;:52;:108;;;;10504:1;10493:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;10483:24;;;;;;10476:1;10465:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;10455:24;;;;;;:52;10399:108;10380:127;10274:240;-1:-1:-1;;;;10274:240:5:o;282:127:58:-;343:10;338:3;334:20;331:1;324:31;374:4;371:1;364:15;398:4;395:1;388:15;414:380;493:1;489:12;;;;536;;;557:61;;611:4;603:6;599:17;589:27;;557:61;664:2;656:6;653:14;633:18;630:38;627:161;;710:10;705:3;701:20;698:1;691:31;745:4;742:1;735:15;773:4;770:1;763:15;627:161;;414:380;;;:::o;925:545::-;1027:2;1022:3;1019:11;1016:448;;;1063:1;1088:5;1084:2;1077:17;1133:4;1129:2;1119:19;1203:2;1191:10;1187:19;1184:1;1180:27;1174:4;1170:38;1239:4;1227:10;1224:20;1221:47;;;-1:-1:-1;1262:4:58;1221:47;1317:2;1312:3;1308:12;1305:1;1301:20;1295:4;1291:31;1281:41;;1372:82;1390:2;1383:5;1380:13;1372:82;;;1435:17;;;1416:1;1405:13;1372:82;;;1376:3;;;1016:448;925:545;;;:::o;1646:1352::-;1766:10;;-1:-1:-1;;;;;1788:30:58;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;2002:4;;2066:2;2055:14;;2083:1;2078:663;;;;2785:1;2802:6;2799:89;;;-1:-1:-1;2854:19:58;;;2848:26;2799:89;-1:-1:-1;;1603:1:58;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2901:81;;2048:944;;2078:663;872:1;865:14;;;909:4;896:18;;-1:-1:-1;;2114:20:58;;;2232:236;2246:7;2243:1;2240:14;2232:236;;;2335:19;;;2329:26;2314:42;;2427:27;;;;2395:1;2383:14;;;;2262:19;;2232:236;;;2236:3;2496:6;2487:7;2484:19;2481:201;;;2557:19;;;2551:26;-1:-1:-1;;2640:1:58;2636:14;;;2652:3;2632:24;2628:37;2624:42;2609:58;2594:74;;2481:201;-1:-1:-1;;;;;2728:1:58;2712:14;;;2708:22;2695:36;;-1:-1:-1;1646:1352:58:o;3003:251::-;3075:2;3069:9;;;3105:15;;-1:-1:-1;;;;;3135:34:58;;3171:22;;;3132:62;3129:88;;;3197:18;;:::i;:::-;3233:2;3226:22;3003:251;:::o;3259:275::-;3330:2;3324:9;3395:2;3376:13;;-1:-1:-1;;3372:27:58;3360:40;;-1:-1:-1;;;;;3415:34:58;;3451:22;;;3412:62;3409:88;;;3477:18;;:::i;:::-;3513:2;3506:22;3259:275;;-1:-1:-1;3259:275:58:o;3539:250::-;3624:1;3634:113;3648:6;3645:1;3642:13;3634:113;;;3724:11;;;3718:18;3705:11;;;3698:39;3670:2;3663:10;3634:113;;;-1:-1:-1;;3781:1:58;3763:16;;3756:27;3539:250::o;3794:2078::-;3922:6;3975:2;3963:9;3954:7;3950:23;3946:32;3943:52;;;3991:1;3988;3981:12;3943:52;4018:16;;-1:-1:-1;;;;;4083:14:58;;;4080:34;;;4110:1;4107;4100:12;4080:34;4148:6;4137:9;4133:22;4123:32;;4193:7;4186:4;4182:2;4178:13;4174:27;4164:55;;4215:1;4212;4205:12;4164:55;4244:2;4238:9;4266:2;4262;4259:10;4256:36;;;4272:18;;:::i;:::-;4312:36;4344:2;4339;4336:1;4332:10;4328:19;4312:36;:::i;:::-;4370:3;4394:2;4389:3;4382:15;4422:2;4417:3;4413:12;4406:19;;4473:2;4467;4464:1;4460:10;4456:2;4452:19;4448:28;4434:42;;4499:7;4491:6;4488:19;4485:39;;;4520:1;4517;4510:12;4485:39;4552:2;4548;4544:11;4564:1278;4580:6;4575:3;4572:15;4564:1278;;;4659:3;4653:10;4695:2;4682:11;4679:19;4676:39;;;4711:1;4708;4701:12;4676:39;4738:20;;4793:2;4785:11;;4781:25;-1:-1:-1;4771:53:58;;4820:1;4817;4810:12;4771:53;4850:22;;:::i;:::-;4898:5;4935:7;4930:2;4926;4922:11;4919:24;4916:44;;;4956:1;4953;4946:12;4916:44;4994:2;4990;4986:11;5010:759;5036:2;5032;5028:11;5021:5;5018:22;5010:759;;;5126:5;5120:12;5170:2;5155:13;5152:21;5149:41;;;5186:1;5183;5176:12;5149:41;5217:22;;5278:2;5270:11;;5266:25;-1:-1:-1;5256:53:58;;5305:1;5302;5295:12;5256:53;5350:2;5346;5342:11;5336:18;5381:2;5377;5374:10;5371:36;;;5387:18;;:::i;:::-;5437:53;5480:2;5461:13;;-1:-1:-1;;5457:27:58;5486:2;5453:36;5437:53;:::i;:::-;5521:2;5514:5;5507:17;5569:7;5564:2;5559;5555;5551:11;5547:20;5544:33;5541:53;;;5590:1;5587;5580:12;5541:53;5611:67;5675:2;5670;5663:5;5659:14;5654:2;5650;5646:11;5611:67;:::i;:::-;5695:20;;-1:-1:-1;;5752:2:58;5741:14;;;;5052;5010:759;;;-1:-1:-1;5782:18:58;;-1:-1:-1;;5829:2:58;5820:12;;;;4597;4564:1278;;;-1:-1:-1;5861:5:58;3794:2078;-1:-1:-1;;;;;;;3794:2078:58:o;5877:127::-;5938:10;5933:3;5929:20;5926:1;5919:31;5969:4;5966:1;5959:15;5993:4;5990:1;5983:15;6009:232;6048:3;6069:17;;;6066:140;;6128:10;6123:3;6119:20;6116:1;6109:31;6163:4;6160:1;6153:15;6191:4;6188:1;6181:15;6066:140;-1:-1:-1;6233:1:58;6222:13;;6009:232::o;6246:396::-;6395:2;6384:9;6377:21;6358:4;6427:6;6421:13;6470:6;6465:2;6454:9;6450:18;6443:34;6486:79;6558:6;6553:2;6542:9;6538:18;6533:2;6525:6;6521:15;6486:79;:::i;:::-;6626:2;6605:15;-1:-1:-1;;6601:29:58;6586:45;;;;6633:2;6582:54;;6246:396;-1:-1:-1;;6246:396:58:o;:::-;106:989:57;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063792e11f51461005c578063b90a68fa14610085578063ba414fa6146100c2578063f82de7b0146100da578063fa7626d4146100ef575b600080fd5b61006f61006a36600461041f565b6100fc565b60405161007c9190610438565b60405180910390f35b604380546040805160208082018490528251808303820181528284019384905280519101209093556001600160a01b03909116905260600161007c565b6100ca61027a565b604051901515815260200161007c565b6100ed6100e836600461041f565b6103a7565b005b6007546100ca9060ff1681565b606060008267ffffffffffffffff81111561011957610119610485565b604051908082528060200260200182016040528015610142578160200160208202803683370190505b50905060005b83811015610273576000306001600160a01b031663b90a68fa6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b6919061049b565b60405163c88a5e6d60e01b81526001600160a01b038216600482015268056bc75e2d631000006024820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561021d57600080fd5b505af1158015610231573d6000803e3d6000fd5b5050505080838381518110610248576102486104cb565b6001600160a01b0390921660209283029190910190910152508061026b816104f7565b915050610148565b5092915050565b600754600090610100900460ff161561029c5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156103a25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161032a917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610540565b60408051601f198184030181529082905261034491610564565b6000604051808303816000865af19150503d8060008114610381576040519150601f19603f3d011682016040523d82523d6000602084013e610386565b606091505b509150508080602001905181019061039e9190610570565b9150505b919050565b60006103b38243610592565b6040516301f7b4f360e41b815260048101829052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d90631f7b4f3090602401600060405180830381600087803b15801561040357600080fd5b505af1158015610417573d6000803e3d6000fd5b505050505050565b60006020828403121561043157600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156104795783516001600160a01b031683529284019291840191600101610454565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104ad57600080fd5b81516001600160a01b03811681146104c457600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610509576105096104e1565b5060010190565b6000815160005b818110156105315760208185018101518683015201610517565b50600093019283525090919050565b6001600160e01b031983168152600061055c6004830184610510565b949350505050565b60006104c48284610510565b60006020828403121561058257600080fd5b815180151581146104c457600080fd5b808201808211156105a5576105a56104e1565b9291505056fea2646970667358221220e33f9e3ca25378baa0f659f92478aa83d038b6db8a552a91e382086019162efe64736f6c63430008110033",
    "sourceMap": "106:989:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:392;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;213:228;343:8;;;386:26;;;;;;;2577:19:58;;;386:26:57;;;;;;;;;2612:12:58;;;386:26:57;;;;376:37;;;;;365:48;;;-1:-1:-1;;;;;1058:32:58;;;1040:51;;1013:18;;213:228:57;878:219:58;1823:584:0;;;:::i;:::-;;;1267:14:58;;1260:22;1242:41;;1230:2;1215:18;1823:584:0;1102:187:58;952:141:57;;;;;;:::i;:::-;;:::i;:::-;;1576:26:0;;;;;;;;;493:392:57;565:24;605:30;660:7;638:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;638:30:57;;605:63;;683:9;678:178;702:7;698:1;:11;678:178;;;730:20;753:4;-1:-1:-1;;;;;753:23:57;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;792:24;;-1:-1:-1;;;792:24:57;;-1:-1:-1;;;;;1957:32:58;;792:24:57;;;1939:51:58;806:9:57;2006:18:58;;;1999:34;730:48:57;;-1:-1:-1;792:7:57;;;;1912:18:58;;792:24:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;841:4;830:5;836:1;830:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;830:15:57;;;:8;;;;;;;;;;;:15;-1:-1:-1;711:3:57;;;;:::i;:::-;;;;678:178;;;-1:-1:-1;873:5:57;493:392;-1:-1:-1;;493:392:57:o;1823:584:0:-;1877:7;;1857:4;;1877:7;;;;;1873:528;;;-1:-1:-1;1907:7:0;;;;;;;;1823:584::o;1873:528::-;1945:17;2994:42;2982:55;3063:16;1984:374;;2200:43;;;1675:64;2200:43;;;1939:51:58;;;-1:-1:-1;;;2006:18:58;;;1999:34;2200:43:0;;;;;;;;;1912:18:58;;;2200:43:0;;;-1:-1:-1;;1675:64:0;;2090:175;;2139:34;;2090:175;;;:::i;:::-;;;;-1:-1:-1;;2090:175:0;;;;;;;;;;2051:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2024:259;;;2327:7;2316:27;;;;;;;;;;;;:::i;:::-;2301:42;;2006:352;1984:374;2378:12;1823:584;-1:-1:-1;1823:584:0:o;952:141:57:-;1010:19;1032:24;1047:9;1032:12;:24;:::i;:::-;1066:20;;-1:-1:-1;;;1066:20:57;;;;;4276:25:58;;;1010:46:57;;-1:-1:-1;1066:7:57;;;;4249:18:58;;1066:20:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1000:93;952:141;:::o;14:180:58:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:58;;14:180;-1:-1:-1;14:180:58:o;199:674::-;386:2;438:21;;;508:13;;411:18;;;530:22;;;357:4;;386:2;609:15;;;;583:2;568:18;;;357:4;652:195;666:6;663:1;660:13;652:195;;;731:13;;-1:-1:-1;;;;;727:39:58;715:52;;822:15;;;;787:12;;;;763:1;681:9;652:195;;;-1:-1:-1;864:3:58;;199:674;-1:-1:-1;;;;;;199:674:58:o;1294:127::-;1355:10;1350:3;1346:20;1343:1;1336:31;1386:4;1383:1;1376:15;1410:4;1407:1;1400:15;1426:298;1504:6;1557:2;1545:9;1536:7;1532:23;1528:32;1525:52;;;1573:1;1570;1563:12;1525:52;1599:16;;-1:-1:-1;;;;;1644:31:58;;1634:42;;1624:70;;1690:1;1687;1680:12;1624:70;1713:5;1426:298;-1:-1:-1;;;1426:298:58:o;2044:127::-;2105:10;2100:3;2096:20;2093:1;2086:31;2136:4;2133:1;2126:15;2160:4;2157:1;2150:15;2176:127;2237:10;2232:3;2228:20;2225:1;2218:31;2268:4;2265:1;2258:15;2292:4;2289:1;2282:15;2308:135;2347:3;2368:17;;;2365:43;;2388:18;;:::i;:::-;-1:-1:-1;2435:1:58;2424:13;;2308:135::o;2914:322::-;2955:3;2993:5;2987:12;3017:1;3027:128;3041:6;3038:1;3035:13;3027:128;;;3138:4;3123:13;;;3119:24;;3113:31;3100:11;;;3093:52;3056:12;3027:128;;;-1:-1:-1;3210:1:58;3174:16;;3199:13;;;-1:-1:-1;3174:16:58;;2914:322;-1:-1:-1;2914:322:58:o;3241:278::-;-1:-1:-1;;;;;;3426:33:58;;3414:46;;3396:3;3476:37;3510:1;3501:11;;3493:6;3476:37;:::i;:::-;3469:44;3241:278;-1:-1:-1;;;;3241:278:58:o;3524:189::-;3653:3;3678:29;3703:3;3695:6;3678:29;:::i;3718:277::-;3785:6;3838:2;3826:9;3817:7;3813:23;3809:32;3806:52;;;3854:1;3851;3844:12;3806:52;3886:9;3880:16;3939:5;3932:13;3925:21;3918:5;3915:32;3905:60;;3961:1;3958;3951:12;4000:125;4065:9;;;4086:10;;;4083:36;;;4099:18;;:::i;:::-;4000:125;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "createUsers(uint256)": "792e11f5",
    "failed()": "ba414fa6",
    "getNextUserAddress()": "b90a68fa",
    "mineBlocks(uint256)": "f82de7b0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userNum\",\"type\":\"uint256\"}],\"name\":\"createUsers\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextUserAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numBlocks\",\"type\":\"uint256\"}],\"name\":\"mineBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Utils.t.sol\":\"Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@uniswap/v3-core/=lib/v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core/=lib/v3-core/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x5fb4179c8e76c66099249e293db57b5649902a7288409075abbc7e88b429a3a5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5f99eea2d8c33f59aee7a8c6c7033393d4baaf7c51e0fb9303b2521bec49aa7\",\"dweb:/ipfs/QmPKT3y3mvd7tYt7VssPH1Rpp5CapUyeyc6MiJ7rZJb79f\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b\",\"dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd\",\"dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x9e421049151727ad09416e8d85e9bab277971f2ff750f230f50ef3c22ee40532\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8309e82f8020f4936d10b800b6166b28c4ea21b6f25d670b6735bd5d664ded3\",\"dweb:/ipfs/QmQP9d7uDsUGypHuc5LCd8zD4TsmvSqRUEqX2npMo6NLiQ\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x628980968342609e2b6f4050cf6ffab5456f6e274cb237d70dd58f6d77c9325f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e2691f7fc2e97ebbf63db590aa95ad8c074785e48b864dac7eed3232949af58\",\"dweb:/ipfs/QmYSdyV3w8SNUtE521bn2ymVArPu4z5wToxSVqnRKztygH\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xdfdea2fc16ca475b82c74ef8a1ee50249a086ea3e1d7dcb2fc5b507f2b69500b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e68c4ac142bfdcacfc1a3ffadb63e67213464be620b277586ccf74605ccc33d3\",\"dweb:/ipfs/QmXAiLV8LT4h4z6x1xc88BfJpkddSdGtQkBbtPf441MCqi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74\",\"dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xc30296179ae8036e80c6c48993e10900ea96bcdd3a5e835f27da12503f127438\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4312169f48eb65a63838e9d9ebdb03c3b06f142e76770286e631996af336f620\",\"dweb:/ipfs/QmSQ4MsiAujQJUQvWdqzYrwFMGtzbnwPpcTGqnd66AUzY6\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"test/Utils.t.sol\":{\"keccak256\":\"0xb853a6e0b5a5dfd6d3fe1e17b2f695bc30a7142de0fdb711cfdb86e96724bce7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://68f4066d32e6e7dfcf3bb2b861b8e0b383f3e3be5ce294b0c6b109260acf8961\",\"dweb:/ipfs/QmZ3tQ24eBSuZdyjudQabkKrRr1gPQu3A2ZiypsFtyNLXB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "userNum",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createUsers",
          "outputs": [
            {
              "internalType": "address payable[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getNextUserAddress",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numBlocks",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mineBlocks"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@rari-capital/solmate/=lib/solmate/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core/=lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Utils.t.sol": "Utils"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x5fb4179c8e76c66099249e293db57b5649902a7288409075abbc7e88b429a3a5",
        "urls": [
          "bzz-raw://d5f99eea2d8c33f59aee7a8c6c7033393d4baaf7c51e0fb9303b2521bec49aa7",
          "dweb:/ipfs/QmPKT3y3mvd7tYt7VssPH1Rpp5CapUyeyc6MiJ7rZJb79f"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0",
        "urls": [
          "bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b",
          "dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149",
        "urls": [
          "bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd",
          "dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x9e421049151727ad09416e8d85e9bab277971f2ff750f230f50ef3c22ee40532",
        "urls": [
          "bzz-raw://d8309e82f8020f4936d10b800b6166b28c4ea21b6f25d670b6735bd5d664ded3",
          "dweb:/ipfs/QmQP9d7uDsUGypHuc5LCd8zD4TsmvSqRUEqX2npMo6NLiQ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x628980968342609e2b6f4050cf6ffab5456f6e274cb237d70dd58f6d77c9325f",
        "urls": [
          "bzz-raw://3e2691f7fc2e97ebbf63db590aa95ad8c074785e48b864dac7eed3232949af58",
          "dweb:/ipfs/QmYSdyV3w8SNUtE521bn2ymVArPu4z5wToxSVqnRKztygH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xdfdea2fc16ca475b82c74ef8a1ee50249a086ea3e1d7dcb2fc5b507f2b69500b",
        "urls": [
          "bzz-raw://e68c4ac142bfdcacfc1a3ffadb63e67213464be620b277586ccf74605ccc33d3",
          "dweb:/ipfs/QmXAiLV8LT4h4z6x1xc88BfJpkddSdGtQkBbtPf441MCqi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17",
        "urls": [
          "bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74",
          "dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xc30296179ae8036e80c6c48993e10900ea96bcdd3a5e835f27da12503f127438",
        "urls": [
          "bzz-raw://4312169f48eb65a63838e9d9ebdb03c3b06f142e76770286e631996af336f620",
          "dweb:/ipfs/QmSQ4MsiAujQJUQvWdqzYrwFMGtzbnwPpcTGqnd66AUzY6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "test/Utils.t.sol": {
        "keccak256": "0xb853a6e0b5a5dfd6d3fe1e17b2f695bc30a7142de0fdb711cfdb86e96724bce7",
        "urls": [
          "bzz-raw://68f4066d32e6e7dfcf3bb2b861b8e0b383f3e3be5ce294b0c6b109260acf8961",
          "dweb:/ipfs/QmZ3tQ24eBSuZdyjudQabkKrRr1gPQu3A2ZiypsFtyNLXB"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Utils.t.sol",
    "id": 32128,
    "exportedSymbols": {
      "Test": [
        7532
      ],
      "Utils": [
        32127
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:1057:57",
    "nodes": [
      {
        "id": 32011,
        "nodeType": "PragmaDirective",
        "src": "38:24:57",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 32013,
        "nodeType": "ImportDirective",
        "src": "64:40:57",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32128,
        "sourceUnit": 7533,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32012,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7532,
              "src": "72:4:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32127,
        "nodeType": "ContractDefinition",
        "src": "106:989:57",
        "nodes": [
          {
            "id": 32023,
            "nodeType": "VariableDeclaration",
            "src": "135:71:57",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "nextUser",
            "nameLocation": "152:8:57",
            "scope": 32127,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 32016,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "135:7:57",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "757365722061646472657373",
                      "id": 32020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "190:14:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_fadd6953a0436e85528ded789af2e2b7e57c1cd7c68c5c3796d8ea67e0018db7",
                        "typeString": "literal_string \"user address\""
                      },
                      "value": "user address"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_fadd6953a0436e85528ded789af2e2b7e57c1cd7c68c5c3796d8ea67e0018db7",
                        "typeString": "literal_string \"user address\""
                      }
                    ],
                    "expression": {
                      "id": 32018,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "173:3:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 32019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "177:12:57",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "173:16:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 32021,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "173:32:57",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 32017,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "163:9:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 32022,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "163:43:57",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32056,
            "nodeType": "FunctionDefinition",
            "src": "213:228:57",
            "nodes": [],
            "body": {
              "id": 32055,
              "nodeType": "Block",
              "src": "278:163:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32029,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "304:4:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 32055,
                      "src": "288:20:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 32028,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "288:15:57",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32043,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 32038,
                                    "name": "nextUser",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32023,
                                    "src": "343:8:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 32037,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "335:7:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 32036,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "335:7:57",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 32039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "335:17:57",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 32035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "327:7:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 32034,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "327:7:57",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "327:26:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 32033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "319:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32032,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "319:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "319:35:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 32031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "311:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 32030,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "311:8:57",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 32042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "311:44:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "288:67:57"
                },
                {
                  "expression": {
                    "id": 32051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32044,
                      "name": "nextUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32023,
                      "src": "365:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 32048,
                              "name": "nextUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32023,
                              "src": "403:8:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 32046,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "386:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 32047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "390:12:57",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "386:16:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 32049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "386:26:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 32045,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "376:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 32050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "376:37:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "365:48:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 32052,
                  "nodeType": "ExpressionStatement",
                  "src": "365:48:57"
                },
                {
                  "expression": {
                    "id": 32053,
                    "name": "user",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32029,
                    "src": "430:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 32027,
                  "id": 32054,
                  "nodeType": "Return",
                  "src": "423:11:57"
                }
              ]
            },
            "functionSelector": "b90a68fa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNextUserAddress",
            "nameLocation": "222:18:57",
            "parameters": {
              "id": 32024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "240:2:57"
            },
            "returnParameters": {
              "id": 32027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32026,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32056,
                  "src": "261:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 32025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:15:57",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "260:17:57"
            },
            "scope": 32127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32107,
            "nodeType": "FunctionDefinition",
            "src": "493:392:57",
            "nodes": [],
            "body": {
              "id": 32106,
              "nodeType": "Block",
              "src": "595:290:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32066
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32066,
                      "mutability": "mutable",
                      "name": "users",
                      "nameLocation": "630:5:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 32106,
                      "src": "605:30:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 32064,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "605:15:57",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 32065,
                        "nodeType": "ArrayTypeName",
                        "src": "605:17:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                          "typeString": "address payable[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32072,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32070,
                        "name": "userNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32058,
                        "src": "660:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "638:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address payable[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 32067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "642:15:57",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 32068,
                        "nodeType": "ArrayTypeName",
                        "src": "642:17:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                          "typeString": "address payable[]"
                        }
                      }
                    },
                    "id": 32071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "638:30:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                      "typeString": "address payable[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "605:63:57"
                },
                {
                  "body": {
                    "id": 32102,
                    "nodeType": "Block",
                    "src": "716:140:57",
                    "statements": [
                      {
                        "assignments": [
                          32084
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32084,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "746:4:57",
                            "nodeType": "VariableDeclaration",
                            "scope": 32102,
                            "src": "730:20:57",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 32083,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "730:15:57",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32088,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 32085,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "753:4:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Utils_$32127",
                                "typeString": "contract Utils"
                              }
                            },
                            "id": 32086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "758:18:57",
                            "memberName": "getNextUserAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32056,
                            "src": "753:23:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_payable_$",
                              "typeString": "function () external returns (address payable)"
                            }
                          },
                          "id": 32087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "753:25:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "730:48:57"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32092,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32084,
                              "src": "800:4:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "313030",
                              "id": 32093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "806:9:57",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                                "typeString": "int_const 100000000000000000000"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                                "typeString": "int_const 100000000000000000000"
                              }
                            ],
                            "expression": {
                              "id": 32089,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1817,
                              "src": "792:2:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$8315",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 32091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "795:4:57",
                            "memberName": "deal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8067,
                            "src": "792:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 32094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "792:24:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32095,
                        "nodeType": "ExpressionStatement",
                        "src": "792:24:57"
                      },
                      {
                        "expression": {
                          "id": 32100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 32096,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32066,
                              "src": "830:5:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                                "typeString": "address payable[] memory"
                              }
                            },
                            "id": 32098,
                            "indexExpression": {
                              "id": 32097,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32074,
                              "src": "836:1:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "830:8:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 32099,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32084,
                            "src": "841:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "830:15:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 32101,
                        "nodeType": "ExpressionStatement",
                        "src": "830:15:57"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 32077,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32074,
                      "src": "698:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 32078,
                      "name": "userNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32058,
                      "src": "702:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "698:11:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32103,
                  "initializationExpression": {
                    "assignments": [
                      32074
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 32074,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "691:1:57",
                        "nodeType": "VariableDeclaration",
                        "scope": 32103,
                        "src": "683:9:57",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 32073,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 32076,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 32075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "695:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "683:13:57"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 32081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "711:3:57",
                      "subExpression": {
                        "id": 32080,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32074,
                        "src": "711:1:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 32082,
                    "nodeType": "ExpressionStatement",
                    "src": "711:3:57"
                  },
                  "nodeType": "ForStatement",
                  "src": "678:178:57"
                },
                {
                  "expression": {
                    "id": 32104,
                    "name": "users",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32066,
                    "src": "873:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                      "typeString": "address payable[] memory"
                    }
                  },
                  "functionReturnParameters": 32063,
                  "id": 32105,
                  "nodeType": "Return",
                  "src": "866:12:57"
                }
              ]
            },
            "functionSelector": "792e11f5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUsers",
            "nameLocation": "502:11:57",
            "parameters": {
              "id": 32059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32058,
                  "mutability": "mutable",
                  "name": "userNum",
                  "nameLocation": "522:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 32107,
                  "src": "514:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "513:17:57"
            },
            "returnParameters": {
              "id": 32063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32062,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32107,
                  "src": "565:24:57",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32060,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "565:15:57",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 32061,
                    "nodeType": "ArrayTypeName",
                    "src": "565:17:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "564:26:57"
            },
            "scope": 32127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32126,
            "nodeType": "FunctionDefinition",
            "src": "952:141:57",
            "nodes": [],
            "body": {
              "id": 32125,
              "nodeType": "Block",
              "src": "1000:93:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32113
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32113,
                      "mutability": "mutable",
                      "name": "targetBlock",
                      "nameLocation": "1018:11:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 32125,
                      "src": "1010:19:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32112,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1010:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32118,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 32114,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1032:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 32115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1038:6:57",
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "1032:12:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 32116,
                      "name": "numBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32109,
                      "src": "1047:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1032:24:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1010:46:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32122,
                        "name": "targetBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32113,
                        "src": "1074:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32119,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1066:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8315",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1069:4:57",
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8002,
                      "src": "1066:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 32123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1066:20:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32124,
                  "nodeType": "ExpressionStatement",
                  "src": "1066:20:57"
                }
              ]
            },
            "functionSelector": "f82de7b0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mineBlocks",
            "nameLocation": "961:10:57",
            "parameters": {
              "id": 32110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32109,
                  "mutability": "mutable",
                  "name": "numBlocks",
                  "nameLocation": "980:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 32126,
                  "src": "972:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:19:57"
            },
            "returnParameters": {
              "id": 32111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1000:0:57"
            },
            "scope": 32127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32014,
              "name": "Test",
              "nameLocations": [
                "124:4:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7532,
              "src": "124:4:57"
            },
            "id": 32015,
            "nodeType": "InheritanceSpecifier",
            "src": "124:4:57"
          }
        ],
        "canonicalName": "Utils",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32127,
          7532,
          7501,
          5073,
          4684,
          2677,
          1786,
          7521,
          1818
        ],
        "name": "Utils",
        "nameLocation": "115:5:57",
        "scope": 32128,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 57
}