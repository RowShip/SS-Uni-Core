{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "_initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604080516020808201835260008252825180840190935260058352642a27a5a2a760d91b9083015262000045916200004b565b62000463565b600054610100900460ff16158080156200006c5750600054600160ff909116105b806200009c575062000089306200019760201b620004a11760201c565b1580156200009c575060005460ff166001145b620001055760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000129576000805461ff0019166101001790555b620001358383620001a6565b6200014b3369152d02c7e14af680000062000212565b801562000192576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001600160a01b03163b151590565b600054610100900460ff16620002025760405162461bcd60e51b815260206004820152602b60248201526000805160206200115a83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000fc565b6200020e8282620002d7565b5050565b6001600160a01b0382166200026a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620000fc565b80603560008282546200027e9190620003ff565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600054610100900460ff16620003335760405162461bcd60e51b815260206004820152602b60248201526000805160206200115a83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000fc565b81516200034890603690602085019062000359565b508051620001929060379060208401905b828054620003679062000426565b90600052602060002090601f0160209004810192826200038b5760008555620003d6565b82601f10620003a657805160ff1916838001178555620003d6565b82800160010185558215620003d6579182015b82811115620003d6578251825591602001919060010190620003b9565b50620003e4929150620003e8565b5090565b5b80821115620003e45760008155600101620003e9565b600082198211156200042157634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200043b57607f821691505b602082108114156200045d57634e487b7160e01b600052602260045260246000fd5b50919050565b610ce780620004736000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461014357806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d7578063098dce13146100fa57806318160ddd1461010f57806323b872dd14610121578063313ce56714610134575b600080fd5b6100c16101c0565b6040516100ce91906109d2565b60405180910390f35b6100ea6100e5366004610a43565b610252565b60405190151581526020016100ce565b61010d610108366004610b10565b61026a565b005b6035545b6040519081526020016100ce565b6100ea61012f366004610b74565b610398565b604051601281526020016100ce565b6100ea610151366004610a43565b6103bc565b610113610164366004610bb0565b6001600160a01b031660009081526033602052604090205490565b6100c16103de565b6100ea610195366004610a43565b6103ed565b6100ea6101a8366004610a43565b610468565b6101136101bb366004610bd2565b610476565b6060603680546101cf90610c05565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610c05565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b6000336102608185856104b0565b5060019392505050565b600054610100900460ff161580801561028a5750600054600160ff909116105b806102a45750303b1580156102a4575060005460ff166001145b61030c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561032f576000805461ff0019166101001790555b61033983836105d4565b61034d3369152d02c7e14af6800000610609565b8015610393576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6000336103a68582856106ca565b6103b1858585610744565b506001949350505050565b6000336102608185856103cf8383610476565b6103d99190610c40565b6104b0565b6060603780546101cf90610c05565b600033816103fb8286610476565b90508381101561045b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610303565b6103b182868684036104b0565b600033610260818585610744565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b03163b151590565b6001600160a01b0383166105125760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610303565b6001600160a01b0382166105735760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610303565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600054610100900460ff166105fb5760405162461bcd60e51b815260040161030390610c66565b61060582826108ef565b5050565b6001600160a01b03821661065f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610303565b80603560008282546106719190610c40565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60006106d68484610476565b9050600019811461073e57818110156107315760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610303565b61073e84848484036104b0565b50505050565b6001600160a01b0383166107a85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610303565b6001600160a01b03821661080a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610303565b6001600160a01b038316600090815260336020526040902054818110156108825760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610303565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108e29086815260200190565b60405180910390a361073e565b600054610100900460ff166109165760405162461bcd60e51b815260040161030390610c66565b8151610929906036906020850190610939565b5080516103939060379060208401905b82805461094590610c05565b90600052602060002090601f01602090048101928261096757600085556109ad565b82601f1061098057805160ff19168380011785556109ad565b828001600101855582156109ad579182015b828111156109ad578251825591602001919060010190610992565b506109b99291506109bd565b5090565b5b808211156109b957600081556001016109be565b600060208083528351808285015260005b818110156109ff578581018301518582016040015282016109e3565b81811115610a11576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610a3e57600080fd5b919050565b60008060408385031215610a5657600080fd5b610a5f83610a27565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a9457600080fd5b813567ffffffffffffffff80821115610aaf57610aaf610a6d565b604051601f8301601f19908116603f01168101908282118183101715610ad757610ad7610a6d565b81604052838152866020858801011115610af057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610b2357600080fd5b823567ffffffffffffffff80821115610b3b57600080fd5b610b4786838701610a83565b93506020850135915080821115610b5d57600080fd5b50610b6a85828601610a83565b9150509250929050565b600080600060608486031215610b8957600080fd5b610b9284610a27565b9250610ba060208501610a27565b9150604084013590509250925092565b600060208284031215610bc257600080fd5b610bcb82610a27565b9392505050565b60008060408385031215610be557600080fd5b610bee83610a27565b9150610bfc60208401610a27565b90509250929050565b600181811c90821680610c1957607f821691505b60208210811415610c3a57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610c6157634e487b7160e01b600052601160045260246000fd5b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212206dd8755df66b3c7d0e21024a09e45f512c712256b342bc78b805377410cf2c0264736f6c634300080a0033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
    "sourceMap": "172:276:58:-:0;;;218:55;;;;;;;;;-1:-1:-1;242:24:58;;;;;;;;;-1:-1:-1;242:24:58;;;;;;;;;;;;;-1:-1:-1;;;242:24:58;;;;;;:11;:24::i;:::-;172:276;;279:167;3268:19:14;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:14;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;;3377:44;3415:4;3377:29;;;;;:44;;:::i;:::-;3376:45;:66;;;;-1:-1:-1;3425:12:14;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:14;;216:2:65;3314:201:14;;;198:21:65;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:65;;;338:44;399:19;;3314:201:14;;;;;;;;;3525:12;:16;;-1:-1:-1;;3525:16:14;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:14;;;;;3551:65;373:28:58::1;386:5:::0;393:7;373:12:::1;:28::i;:::-;411;417:10;429:9;411:5;:28::i;:::-;3640:14:14::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:14;;;3710:14;;-1:-1:-1;581:36:65;;3710:14:14;;569:2:65;554:18;3710:14:14;;;;;;;3636:99;3258:483;279:167:58;;:::o;1186:320:19:-;-1:-1:-1;;;;;1476:19:19;;:23;;;1186:320::o;2114:147:16:-;5363:13:14;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:14;;830:2:65;5355:69:14;;;812:21:65;869:2;849:18;;;842:30;-1:-1:-1;;;;;;;;;;;888:18:65;;;881:62;-1:-1:-1;;;959:18:65;;;952:41;1010:19;;5355:69:14;628:407:65;5355:69:14;2216:38:16::1;2239:5:::0;2246:7;2216:22:::1;:38::i;:::-;2114:147:::0;;:::o;8904:535::-;-1:-1:-1;;;;;8987:21:16;;8979:65;;;;-1:-1:-1;;;8979:65:16;;1242:2:65;8979:65:16;;;1224:21:65;1281:2;1261:18;;;1254:30;1320:33;1300:18;;;1293:61;1371:18;;8979:65:16;1040:355:65;8979:65:16;9131:6;9115:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9283:18:16;;;;;;:9;:18;;;;;;;;:28;;;;;;9336:37;1776:25:65;;;9336:37:16;;1749:18:65;9336:37:16;;;;;;;2114:147;;:::o;2267:159::-;5363:13:14;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:14;;830:2:65;5355:69:14;;;812:21:65;869:2;849:18;;;842:30;-1:-1:-1;;;;;;;;;;;888:18:65;;;881:62;-1:-1:-1;;;959:18:65;;;952:41;1010:19;;5355:69:14;628:407:65;5355:69:14;2379:13:16;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2402:17:16;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;172:276:58;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:276:58;;;-1:-1:-1;172:276:58;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;1400:225:65;1440:3;1471:1;1467:6;1464:1;1461:13;1458:136;;;1516:10;1511:3;1507:20;1504:1;1497:31;1551:4;1548:1;1541:15;1579:4;1576:1;1569:15;1458:136;-1:-1:-1;1610:9:65;;1400:225::o;1812:380::-;1891:1;1887:12;;;;1934;;;1955:61;;2009:4;2001:6;1997:17;1987:27;;1955:61;2062:2;2054:6;2051:14;2031:18;2028:38;2025:161;;;2108:10;2103:3;2099:20;2096:1;2089:31;2143:4;2140:1;2133:15;2171:4;2168:1;2161:15;2025:161;;1812:380;;;:::o;:::-;172:276:58;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461014357806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d7578063098dce13146100fa57806318160ddd1461010f57806323b872dd14610121578063313ce56714610134575b600080fd5b6100c16101c0565b6040516100ce91906109d2565b60405180910390f35b6100ea6100e5366004610a43565b610252565b60405190151581526020016100ce565b61010d610108366004610b10565b61026a565b005b6035545b6040519081526020016100ce565b6100ea61012f366004610b74565b610398565b604051601281526020016100ce565b6100ea610151366004610a43565b6103bc565b610113610164366004610bb0565b6001600160a01b031660009081526033602052604090205490565b6100c16103de565b6100ea610195366004610a43565b6103ed565b6100ea6101a8366004610a43565b610468565b6101136101bb366004610bd2565b610476565b6060603680546101cf90610c05565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610c05565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b6000336102608185856104b0565b5060019392505050565b600054610100900460ff161580801561028a5750600054600160ff909116105b806102a45750303b1580156102a4575060005460ff166001145b61030c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561032f576000805461ff0019166101001790555b61033983836105d4565b61034d3369152d02c7e14af6800000610609565b8015610393576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6000336103a68582856106ca565b6103b1858585610744565b506001949350505050565b6000336102608185856103cf8383610476565b6103d99190610c40565b6104b0565b6060603780546101cf90610c05565b600033816103fb8286610476565b90508381101561045b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610303565b6103b182868684036104b0565b600033610260818585610744565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b03163b151590565b6001600160a01b0383166105125760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610303565b6001600160a01b0382166105735760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610303565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600054610100900460ff166105fb5760405162461bcd60e51b815260040161030390610c66565b61060582826108ef565b5050565b6001600160a01b03821661065f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610303565b80603560008282546106719190610c40565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60006106d68484610476565b9050600019811461073e57818110156107315760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610303565b61073e84848484036104b0565b50505050565b6001600160a01b0383166107a85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610303565b6001600160a01b03821661080a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610303565b6001600160a01b038316600090815260336020526040902054818110156108825760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610303565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108e29086815260200190565b60405180910390a361073e565b600054610100900460ff166109165760405162461bcd60e51b815260040161030390610c66565b8151610929906036906020850190610939565b5080516103939060379060208401905b82805461094590610c05565b90600052602060002090601f01602090048101928261096757600085556109ad565b82601f1061098057805160ff19168380011785556109ad565b828001600101855582156109ad579182015b828111156109ad578251825591602001919060010190610992565b506109b99291506109bd565b5090565b5b808211156109b957600081556001016109be565b600060208083528351808285015260005b818110156109ff578581018301518582016040015282016109e3565b81811115610a11576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610a3e57600080fd5b919050565b60008060408385031215610a5657600080fd5b610a5f83610a27565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a9457600080fd5b813567ffffffffffffffff80821115610aaf57610aaf610a6d565b604051601f8301601f19908116603f01168101908282118183101715610ad757610ad7610a6d565b81604052838152866020858801011115610af057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610b2357600080fd5b823567ffffffffffffffff80821115610b3b57600080fd5b610b4786838701610a83565b93506020850135915080821115610b5d57600080fd5b50610b6a85828601610a83565b9150509250929050565b600080600060608486031215610b8957600080fd5b610b9284610a27565b9250610ba060208501610a27565b9150604084013590509250925092565b600060208284031215610bc257600080fd5b610bcb82610a27565b9392505050565b60008060408385031215610be557600080fd5b610bee83610a27565b9150610bfc60208401610a27565b90509250929050565b600181811c90821680610c1957607f821691505b60208210811415610c3a57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610c6157634e487b7160e01b600052601160045260246000fd5b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212206dd8755df66b3c7d0e21024a09e45f512c712256b342bc78b805377410cf2c0264736f6c634300080a0033",
    "sourceMap": "172:276:58:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4768:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:65;;1211:22;1193:41;;1181:2;1166:18;4768:197:16;1053:187:65;279:167:58;;;;;;:::i;:::-;;:::i;:::-;;3579:106:16;3666:12;;3579:106;;;2795:25:65;;;2783:2;2768:18;3579:106:16;2649:177:65;5527:286:16;;;;;;:::i;:::-;;:::i;3428:91::-;;;3510:2;3306:36:65;;3294:2;3279:18;3428:91:16;3164:184:65;6208:234:16;;;;;;:::i;:::-;;:::i;3743:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3843:18:16;3817:7;3843:18;;;:9;:18;;;;;;;3743:125;2702:102;;;:::i;6929:427::-;;;;;;:::i;:::-;;:::i;4064:189::-;;;;;;:::i;:::-;;:::i;4311:149::-;;;;;;:::i;:::-;;:::i;2491:98::-;2545:13;2577:5;2570:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;:::o;4768:197::-;4851:4;929:10:20;4905:32:16;929:10:20;4921:7:16;4930:6;4905:8;:32::i;:::-;-1:-1:-1;4954:4:16;;4768:197;-1:-1:-1;;;4768:197:16:o;279:167:58:-;3268:19:14;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:14;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:14;1476:19:19;:23;;;3376:66:14;;-1:-1:-1;3425:12:14;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:14;;4396:2:65;3314:201:14;;;4378:21:65;4435:2;4415:18;;;4408:30;4474:34;4454:18;;;4447:62;-1:-1:-1;;;4525:18:65;;;4518:44;4579:19;;3314:201:14;;;;;;;;;3525:12;:16;;-1:-1:-1;;3525:16:14;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:14;;;;;3551:65;373:28:58::1;386:5;393:7;373:12;:28::i;:::-;411;417:10;429:9;411:5;:28::i;:::-;3640:14:14::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:14;;;3710:14;;-1:-1:-1;3306:36:65;;3710:14:14;;3294:2:65;3279:18;3710:14:14;;;;;;;3636:99;3258:483;279:167:58;;:::o;5527:286:16:-;5654:4;929:10:20;5710:38:16;5726:4;929:10:20;5741:6:16;5710:15;:38::i;:::-;5758:27;5768:4;5774:2;5778:6;5758:9;:27::i;:::-;-1:-1:-1;5802:4:16;;5527:286;-1:-1:-1;;;;5527:286:16:o;6208:234::-;6296:4;929:10:20;6350:64:16;929:10:20;6366:7:16;6403:10;6375:25;929:10:20;6366:7:16;6375:9;:25::i;:::-;:38;;;;:::i;:::-;6350:8;:64::i;2702:102::-;2758:13;2790:7;2783:14;;;;;:::i;6929:427::-;7022:4;929:10:20;7022:4:16;7103:25;929:10:20;7120:7:16;7103:9;:25::i;:::-;7076:52;;7166:15;7146:16;:35;;7138:85;;;;-1:-1:-1;;;7138:85:16;;5240:2:65;7138:85:16;;;5222:21:65;5279:2;5259:18;;;5252:30;5318:34;5298:18;;;5291:62;-1:-1:-1;;;5369:18:65;;;5362:35;5414:19;;7138:85:16;5038:401:65;7138:85:16;7257:60;7266:5;7273:7;7301:15;7282:16;:34;7257:8;:60::i;4064:189::-;4143:4;929:10:20;4197:28:16;929:10:20;4214:2:16;4218:6;4197:9;:28::i;4311:149::-;-1:-1:-1;;;;;4426:18:16;;;4400:7;4426:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4311:149::o;1186:320:19:-;-1:-1:-1;;;;;1476:19:19;;:23;;;1186:320::o;10841:370:16:-;-1:-1:-1;;;;;10972:19:16;;10964:68;;;;-1:-1:-1;;;10964:68:16;;5646:2:65;10964:68:16;;;5628:21:65;5685:2;5665:18;;;5658:30;5724:34;5704:18;;;5697:62;-1:-1:-1;;;5775:18:65;;;5768:34;5819:19;;10964:68:16;5444:400:65;10964:68:16;-1:-1:-1;;;;;11050:21:16;;11042:68;;;;-1:-1:-1;;;11042:68:16;;6051:2:65;11042:68:16;;;6033:21:65;6090:2;6070:18;;;6063:30;6129:34;6109:18;;;6102:62;-1:-1:-1;;;6180:18:65;;;6173:32;6222:19;;11042:68:16;5849:398:65;11042:68:16;-1:-1:-1;;;;;11121:18:16;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11172:32;;2795:25:65;;;11172:32:16;;2768:18:65;11172:32:16;;;;;;;10841:370;;;:::o;2114:147::-;5363:13:14;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:14;;;;;;;:::i;:::-;2216:38:16::1;2239:5;2246:7;2216:22;:38::i;:::-;2114:147:::0;;:::o;8904:535::-;-1:-1:-1;;;;;8987:21:16;;8979:65;;;;-1:-1:-1;;;8979:65:16;;6866:2:65;8979:65:16;;;6848:21:65;6905:2;6885:18;;;6878:30;6944:33;6924:18;;;6917:61;6995:18;;8979:65:16;6664:355:65;8979:65:16;9131:6;9115:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9283:18:16;;;;;;:9;:18;;;;;;;;:28;;;;;;9336:37;2795:25:65;;;9336:37:16;;2768:18:65;9336:37:16;;;;;;;2114:147;;:::o;11492:441::-;11622:24;11649:25;11659:5;11666:7;11649:9;:25::i;:::-;11622:52;;-1:-1:-1;;11688:16:16;:37;11684:243;;11769:6;11749:16;:26;;11741:68;;;;-1:-1:-1;;;11741:68:16;;7226:2:65;11741:68:16;;;7208:21:65;7265:2;7245:18;;;7238:30;7304:31;7284:18;;;7277:59;7353:18;;11741:68:16;7024:353:65;11741:68:16;11851:51;11860:5;11867:7;11895:6;11876:16;:25;11851:8;:51::i;:::-;11612:321;11492:441;;;:::o;7810:818::-;-1:-1:-1;;;;;7936:18:16;;7928:68;;;;-1:-1:-1;;;7928:68:16;;7584:2:65;7928:68:16;;;7566:21:65;7623:2;7603:18;;;7596:30;7662:34;7642:18;;;7635:62;-1:-1:-1;;;7713:18:65;;;7706:35;7758:19;;7928:68:16;7382:401:65;7928:68:16;-1:-1:-1;;;;;8014:16:16;;8006:64;;;;-1:-1:-1;;;8006:64:16;;7990:2:65;8006:64:16;;;7972:21:65;8029:2;8009:18;;;8002:30;8068:34;8048:18;;;8041:62;-1:-1:-1;;;8119:18:65;;;8112:33;8162:19;;8006:64:16;7788:399:65;8006:64:16;-1:-1:-1;;;;;8152:15:16;;8130:19;8152:15;;;:9;:15;;;;;;8185:21;;;;8177:72;;;;-1:-1:-1;;;8177:72:16;;8394:2:65;8177:72:16;;;8376:21:65;8433:2;8413:18;;;8406:30;8472:34;8452:18;;;8445:62;-1:-1:-1;;;8523:18:65;;;8516:36;8569:19;;8177:72:16;8192:402:65;8177:72:16;-1:-1:-1;;;;;8283:15:16;;;;;;;:9;:15;;;;;;8301:20;;;8283:38;;8498:13;;;;;;;;;;:23;;;;;;8547:26;;;;;;8315:6;2795:25:65;;2783:2;2768:18;;2649:177;8547:26:16;;;;;;;;8584:37;279:167:58;2267:159:16;5363:13:14;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:14;;;;;;;:::i;:::-;2379:13:16;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2402:17:16;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:597:65;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:65;574:15;-1:-1:-1;;570:29:65;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:65:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:65;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:65:o;1245:127::-;1306:10;1301:3;1297:20;1294:1;1287:31;1337:4;1334:1;1327:15;1361:4;1358:1;1351:15;1377:719;1420:5;1473:3;1466:4;1458:6;1454:17;1450:27;1440:55;;1491:1;1488;1481:12;1440:55;1527:6;1514:20;1553:18;1590:2;1586;1583:10;1580:36;;;1596:18;;:::i;:::-;1671:2;1665:9;1639:2;1725:13;;-1:-1:-1;;1721:22:65;;;1745:2;1717:31;1713:40;1701:53;;;1769:18;;;1789:22;;;1766:46;1763:72;;;1815:18;;:::i;:::-;1855:10;1851:2;1844:22;1890:2;1882:6;1875:18;1936:3;1929:4;1924:2;1916:6;1912:15;1908:26;1905:35;1902:55;;;1953:1;1950;1943:12;1902:55;2017:2;2010:4;2002:6;1998:17;1991:4;1983:6;1979:17;1966:54;2064:1;2057:4;2052:2;2044:6;2040:15;2036:26;2029:37;2084:6;2075:15;;;;;;1377:719;;;;:::o;2101:543::-;2189:6;2197;2250:2;2238:9;2229:7;2225:23;2221:32;2218:52;;;2266:1;2263;2256:12;2218:52;2306:9;2293:23;2335:18;2376:2;2368:6;2365:14;2362:34;;;2392:1;2389;2382:12;2362:34;2415:50;2457:7;2448:6;2437:9;2433:22;2415:50;:::i;:::-;2405:60;;2518:2;2507:9;2503:18;2490:32;2474:48;;2547:2;2537:8;2534:16;2531:36;;;2563:1;2560;2553:12;2531:36;;2586:52;2630:7;2619:8;2608:9;2604:24;2586:52;:::i;:::-;2576:62;;;2101:543;;;;;:::o;2831:328::-;2908:6;2916;2924;2977:2;2965:9;2956:7;2952:23;2948:32;2945:52;;;2993:1;2990;2983:12;2945:52;3016:29;3035:9;3016:29;:::i;:::-;3006:39;;3064:38;3098:2;3087:9;3083:18;3064:38;:::i;:::-;3054:48;;3149:2;3138:9;3134:18;3121:32;3111:42;;2831:328;;;;;:::o;3353:186::-;3412:6;3465:2;3453:9;3444:7;3440:23;3436:32;3433:52;;;3481:1;3478;3471:12;3433:52;3504:29;3523:9;3504:29;:::i;:::-;3494:39;3353:186;-1:-1:-1;;;3353:186:65:o;3544:260::-;3612:6;3620;3673:2;3661:9;3652:7;3648:23;3644:32;3641:52;;;3689:1;3686;3679:12;3641:52;3712:29;3731:9;3712:29;:::i;:::-;3702:39;;3760:38;3794:2;3783:9;3779:18;3760:38;:::i;:::-;3750:48;;3544:260;;;;;:::o;3809:380::-;3888:1;3884:12;;;;3931;;;3952:61;;4006:4;3998:6;3994:17;3984:27;;3952:61;4059:2;4051:6;4048:14;4028:18;4025:38;4022:161;;;4105:10;4100:3;4096:20;4093:1;4086:31;4140:4;4137:1;4130:15;4168:4;4165:1;4158:15;4022:161;;3809:380;;;:::o;4808:225::-;4848:3;4879:1;4875:6;4872:1;4869:13;4866:136;;;4924:10;4919:3;4915:20;4912:1;4905:31;4959:4;4956:1;4949:15;4987:4;4984:1;4977:15;4866:136;-1:-1:-1;5018:9:65;;4808:225::o;6252:407::-;6454:2;6436:21;;;6493:2;6473:18;;;6466:30;6532:34;6527:2;6512:18;;6505:62;-1:-1:-1;;;6598:2:65;6583:18;;6576:41;6649:3;6634:19;;6252:407::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "_initialize(string,string)": "098dce13",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"_initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mocks/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@uniswap/v3-core/=lib/v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core/=lib/v3-core/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0\",\"dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a\",\"dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"src/mocks/MockERC20.sol\":{\"keccak256\":\"0x11e259b51d7671b3838f1fdabc86d872524deab26862b6597b7ca02008cce61c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://803c9a4124bb9ca5049ce403406e9abb40334b42c690d2711122e65e3ba9d873\",\"dweb:/ipfs/QmVBmMNx9uepq1Zz6VkRA67nP7Tk5JTA39pDz69Nj1XoHU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@rari-capital/solmate/=lib/solmate/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core/=lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/mocks/MockERC20.sol": "MockERC20"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549",
        "urls": [
          "bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0",
          "dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275",
        "urls": [
          "bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a",
          "dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0",
        "urls": [
          "bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de",
          "dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "src/mocks/MockERC20.sol": {
        "keccak256": "0x11e259b51d7671b3838f1fdabc86d872524deab26862b6597b7ca02008cce61c",
        "urls": [
          "bzz-raw://803c9a4124bb9ca5049ce403406e9abb40334b42c690d2711122e65e3ba9d873",
          "dweb:/ipfs/QmVBmMNx9uepq1Zz6VkRA67nP7Tk5JTA39pDz69Nj1XoHU"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/mocks/MockERC20.sol",
    "id": 34134,
    "exportedSymbols": {
      "ERC20Upgradeable": [
        35190
      ],
      "MockERC20": [
        34133
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:413:58",
    "nodes": [
      {
        "id": 34098,
        "nodeType": "PragmaDirective",
        "src": "36:24:58",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 34100,
        "nodeType": "ImportDirective",
        "src": "62:108:58",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34134,
        "sourceUnit": 35191,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34099,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "75:16:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34133,
        "nodeType": "ContractDefinition",
        "src": "172:276:58",
        "nodes": [
          {
            "id": 34111,
            "nodeType": "FunctionDefinition",
            "src": "218:55:58",
            "nodes": [],
            "body": {
              "id": 34110,
              "nodeType": "Block",
              "src": "232:41:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 34106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "254:2:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "544f4b454e",
                        "id": 34107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "258:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96706879d29c248edfb2a2563a8a9d571c49634c0f82013e6f5a7cde739d35d4",
                          "typeString": "literal_string \"TOKEN\""
                        },
                        "value": "TOKEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96706879d29c248edfb2a2563a8a9d571c49634c0f82013e6f5a7cde739d35d4",
                          "typeString": "literal_string \"TOKEN\""
                        }
                      ],
                      "id": 34105,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34132,
                      "src": "242:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 34108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "242:24:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34109,
                  "nodeType": "ExpressionStatement",
                  "src": "242:24:58"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:58"
            },
            "returnParameters": {
              "id": 34104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "232:0:58"
            },
            "scope": 34133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34132,
            "nodeType": "FunctionDefinition",
            "src": "279:167:58",
            "nodes": [],
            "body": {
              "id": 34131,
              "nodeType": "Block",
              "src": "363:83:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34121,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34113,
                        "src": "386:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 34122,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34115,
                        "src": "393:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 34120,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34625,
                      "src": "373:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 34123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "373:28:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34124,
                  "nodeType": "ExpressionStatement",
                  "src": "373:28:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34126,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "417:3:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "417:10:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030303030653138",
                        "id": 34128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "429:9:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000"
                        },
                        "value": "100000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000"
                        }
                      ],
                      "id": 34125,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35002,
                      "src": "411:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 34129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "411:28:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34130,
                  "nodeType": "ExpressionStatement",
                  "src": "411:28:58"
                }
              ]
            },
            "functionSelector": "098dce13",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34118,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34117,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37257,
                  "src": "351:11:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "351:11:58"
              }
            ],
            "name": "_initialize",
            "nameLocation": "288:11:58",
            "parameters": {
              "id": 34116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34113,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "314:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 34132,
                  "src": "300:19:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34112,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34115,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "335:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 34132,
                  "src": "321:21:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34114,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "299:44:58"
            },
            "returnParameters": {
              "id": 34119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:0:58"
            },
            "scope": 34133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34101,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35190,
              "src": "194:16:58"
            },
            "id": 34102,
            "nodeType": "InheritanceSpecifier",
            "src": "194:16:58"
          }
        ],
        "canonicalName": "MockERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34133,
          35190,
          37458,
          37433,
          37500,
          37355
        ],
        "name": "MockERC20",
        "nameLocation": "181:9:58",
        "scope": 34134,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 58
}